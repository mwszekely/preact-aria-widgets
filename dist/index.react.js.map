{"version":3,"file":"index.react.js","sources":["../src/props.ts","../src/use-button.ts","../src/use-accordion.tsx","../src/use-checkbox-group.ts","../src/use-label.ts","../src/use-checkbox-like.ts","../src/use-checkbox.ts","../src/use-dialog.ts","../src/use-drawer.ts","../src/use-gridlist.ts","../src/use-listbox.ts","../src/use-menu-surface.ts","../src/use-toolbar.tsx","../src/use-menubar.ts","../src/use-menu.ts","../src/use-notify.tsx","../src/use-progress.tsx","../src/use-radio-group.tsx","../src/use-slider.tsx","../src/use-table.ts","../src/use-tabs.ts","../src/use-toasts.tsx","../src/use-tooltip.ts","../src/component/util.ts","../src/component/accordion.tsx","../src/component/button.tsx","../src/component/checkbox-group.tsx","../src/component/checkbox.tsx","../src/component/dialog.tsx","../src/component/drawer.tsx","../src/component/gridlist.tsx","../src/component/heading.tsx","../src/component/listbox.tsx","../src/component/menu.tsx","../src/component/menubar.tsx","../src/component/progress.tsx","../src/component/radio-group.tsx","../src/component/slider.tsx","../src/component/table.tsx","../src/component/tabs.tsx","../src/component/toasts.tsx","../src/component/toolbar.tsx","../src/component/tooltip.tsx"],"sourcesContent":["import { ComponentType, h, PreactContext, Ref } from \"preact\";\r\nimport { ElementProps } from \"preact-prop-helpers\";\r\nimport { useContext } from \"preact/hooks\";\r\nexport { EnhancedEventHandler, enhanceEvent, EventDetail, TargetedEnhancedEvent } from \"preact-prop-helpers\";\r\n\r\nexport type RefFromTag<T extends keyof h.JSX.IntrinsicElements> = NonNullable<h.JSX.IntrinsicElements[T][\"ref\"]> & Ref<any>;\r\nexport type ElementFromRef<R extends Ref<any>> = R extends Ref<infer E> ? E : EventTarget;\r\nexport type ElementFromTag<T extends keyof h.JSX.IntrinsicElements> = ElementFromRef<RefFromTag<T>>;\r\n\r\n// Required because you can't extend SomeType[\"likeThis\"] for some reason, but you can if it's like this.\r\nexport type Get<T, K extends keyof T> = T[K];\r\n\r\n// TODO: Lame D:\r\nexport type Get2<T, K1 extends keyof T, K2 extends keyof T> = Get<T, K2> & Get<T, K1>;\r\nexport type Get3<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T> = Get2<T, K2, K3> & Get<T, K1>;\r\nexport type Get4<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T> = Get3<T, K2, K3, K4> & Get<T, K1>;\r\nexport type Get5<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T> = Get4<T, K2, K3, K4, K5> & Get<T, K1>;\r\nexport type Get6<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T> = Get5<T, K2, K3, K4, K5, K6> & Get<T, K1>;\r\nexport type Get7<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T> = Get6<T, K2, K3, K4, K5, K6, K7> & Get<T, K1>;\r\nexport type Get8<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T, K8 extends keyof T> = Get7<T, K2, K3, K4, K5, K6, K7, K8> & Get<T, K1>;\r\nexport type Get9<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T, K8 extends keyof T, K9 extends keyof T> = Get8<T, K2, K3, K4, K5, K6, K7, K8, K9> & Get<T, K1>;\r\nexport type Get10<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T, K8 extends keyof T, K9 extends keyof T, K10 extends keyof T> = Get9<T, K2, K3, K4, K5, K6, K7, K8, K9, K10> & Get<T, K1>;\r\nexport type Get11<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T, K8 extends keyof T, K9 extends keyof T, K10 extends keyof T, K11 extends keyof T> = Get10<T, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11> & Get<T, K1>;\r\nexport type Get12<T, K1 extends keyof T, K2 extends keyof T, K3 extends keyof T, K4 extends keyof T, K5 extends keyof T, K6 extends keyof T, K7 extends keyof T, K8 extends keyof T, K9 extends keyof T, K10 extends keyof T, K11 extends keyof T, K12 extends keyof T> = Get11<T, K2, K3, K4, K5, K6, K7, K8, K9, K10, K11, K12> & Get<T, K1>;\r\n\r\n// https://stackoverflow.com/questions/46583883/typescript-pick-properties-with-a-defined-type\r\nexport type PickByType<Obj, WantedType> = {\r\n    // For each property in Obj, get the type on that property, \r\n    // and if it extends our WantedType, then we DO include that property.\r\n    // Imagine, like, invisible parenthesis:\r\n    // (P in keyof Obj as Obj[P] extends WantedType | undefined)? P : never\r\n    // Because we can't use a type as a key, but we can use it as an intermediary step!\r\n    [P in keyof Obj as Obj[P] extends WantedType | undefined ? P : never]: Obj[P]\r\n}\r\n\r\nexport type ElementToTag<E> = keyof PickByType<HTMLElementTagNameMap, E>;\r\n\r\n/**\r\n * * `false`: This component is not disabled.\r\n * * `\"soft\"`: This component is disabled, but is still focusable and visible to *all* users.\r\n * * `\"hard\"`: This component is disabled, and generally hidden to all but sighted users, using the HTML `disabled` attribute.\r\n * * `true`: This component is disabled. Whether \"hard\" or \"soft\" is chosen is usually chosen based on a `Context`.\r\n */\r\nexport type DisabledType = boolean | \"soft\" | \"hard\";\r\n\r\nexport type OmitStrong<T, K extends keyof T> = Omit<T, K>;\r\n\r\nexport type PropsOfType<T> =\r\n    T extends keyof h.JSX.IntrinsicElements ? h.JSX.IntrinsicElements[T] :\r\n    T extends ComponentType<infer P> ? P : never;\r\n\r\n/**\r\n * For times when more than just the abstract element type is needed,\r\n * but the actual, concrete, implementation-affecting \"div\" string type.\r\n * \r\n * TODO: Should this be the standard for all the non-ARIA hooks?\r\n * They *never* care about the specific type for the implementation,\r\n * just for typing, so it wouldn't be necessary, \r\n * but it would be consistent with these ARIA hooks.\r\n */\r\nexport interface TagSensitiveProps<E extends EventTarget> {\r\n    tag: ElementToTag<E>;\r\n}\r\n\r\nconst alreadyWarned = new Set<string>();\r\n\r\nexport function overwriteWithWarning<P extends {}, K extends keyof P>(componentName: string, props: P, propName: K, newValue: P[K]): void {\r\n    //const key = `${componentName};${propName}`;\r\n    const oldValue = props[propName];\r\n    if (oldValue != null) {\r\n        if (!alreadyWarned.has(String(propName))) {\r\n            alreadyWarned.add(String(propName));\r\n            console.warn(`The ${String(propName)} attribute on ${componentName} was given a value of ${oldValue} but is being overwritten to ${newValue} for conformance. Consider removing it before passing those props to ${componentName}.`);\r\n        }\r\n    }\r\n\r\n    props[propName] = newValue;\r\n}\r\n\r\nexport function useContextWithWarning<T>(context: PreactContext<T>, parentContextName: string): T {\r\n    let ret = useContext(context);\r\n\r\n    if (ret == null) {\r\n        debugger;\r\n        console.error(`This child is missing its parent ${parentContextName} context`);\r\n    }\r\n\r\n    return ret!;\r\n}\r\n\r\nlet debug = false;\r\nexport function setDebugLogging(logging: boolean) {\r\n    debug = logging;\r\n}\r\n/*\r\nexport type DebugLogTypes =\r\n    \"useAccordion\" | \"useAccordionSection\" |\r\n    \"useButton\" |\r\n    \"useCheckbox\" |\r\n    \"useCheckboxGroup\" | \"useCheckboxGroupParent\" | \"useCheckboxGroupChild\" |\r\n    \"useDialog\" | \"useDrawer\" |\r\n    \"useListboxMulti\" | \"useListboxMultiItem\" |\r\n    \"useListboxSingle\" | \"useListboxSingleItem\" |\r\n    \"useMenubar\" | \"useMenu\" | \"useMenuSurface\" | \"useMenuItem\" | \"useFocusSentinel\" | \"useMenuSurfaceSentinel\" |\r\n    \"useRadioGroup\" | \"useRadio\" |\r\n    \"useSlider\" | \"useSliderThumb\" |\r\n    \"useTable\" | \"useTableRow\" | \"useTableCell\" | \"useTableBody\" |\r\n    \"useGridlist\" | \"useGridlistRow\" | \"useGridlistChild\" | \"useGridlistSection\" |\r\n    \"useTabs\" | \"useTabList\" | \"useTab\" | \"useTabPanel\" |\r\n    \"useToasts\" | \"useToast\" |\r\n    \"useTooltip\" | \"useTooltipTooltip\" | \"useTooltipTrigger\";\r\n\r\nexport function debugLog(who: DebugLogTypes, ...args: Parameters<(typeof console)[\"log\"]>) {\r\n    if (debug)\r\n        console.debug(who + \":\", ...args);\r\n}*/\r\n\r\nexport type PropModifier<T extends EventTarget> = (props: ElementProps<T>) => ElementProps<T>;\r\nexport type PropModifier2<P> = (props: P) => P;\r\nexport function noop(): void { return; }\r\n\r\n// (These do not need to be unique)\r\nexport const Prefices = {\r\n    accordionSectionHeaderButton: \"ashb-\",\r\n    accordionSectionBody: \"asb-\",\r\n    checkboxLikeInput: \"cbli-\",\r\n    checkboxLikeLabel: \"cbll-\",\r\n    dialog: \"mdl-\",\r\n    dialogTitle: \"mdlt-\",\r\n    drawer: \"mdw-\",\r\n    drawerTitle: \"mdwt-\",\r\n    gridlist: \"gl-\",\r\n    gridlistLabel: \"gll-\",\r\n    listbox: \"lb-\",\r\n    listboxLabel: \"lbl-\",\r\n    menu: \"menu-\",\r\n    progressIndicator: \"pi-\",\r\n    progressLabel: \"pl-\",\r\n    radioGroup: \"rg-\",\r\n    radioGroupLabel: \"rgl-\",\r\n    radio: \"rb-\",\r\n    radioLabel: \"rbl-\",\r\n    sliderThumb: \"st-\",\r\n    table: \"tb-\",\r\n    tableLabel: \"tbl-\",\r\n    tablist: \"tl-\",\r\n    tablistLabel: \"tll-\",\r\n    tooltip: \"tt-\",\r\n    toolbar: \"tlb-\",\r\n    toolbarLabel: \"tlbl-\"\r\n} as const\r\n","import { ElementProps, JSX, PressEventReason, TargetedOmit, UsePressParameters, UsePressReturnType, UseRefElementParameters, UseRefElementReturnType, focus, monitorCallCount, useMergedProps, usePress, useRefElement } from \"preact-prop-helpers\";\r\nimport { useCallback } from \"preact/hooks\";\r\nimport { DisabledType, ElementToTag, EnhancedEventHandler, OmitStrong, TargetedEnhancedEvent, enhanceEvent } from \"./props.js\";\r\n\r\nexport interface ButtonPressEventDetail {\r\n    pressed: boolean | null;\r\n}\r\nexport type TargetedButtonPressEvent<E extends EventTarget> = TargetedEnhancedEvent<PressEventReason<E>, ButtonPressEventDetail>;\r\nexport type ButtonPressEventHandler<E extends EventTarget> = EnhancedEventHandler<PressEventReason<E>, ButtonPressEventDetail>;\r\n\r\nexport interface UseButtonParametersSelf<E extends Node> {\r\n    tagButton: ElementToTag<E>;\r\n    disabled: DisabledType;\r\n    /** \r\n     * Important: A button can also be marked as pressed by changing its label -- e.g. `muted` to `unmuted`.\r\n     * If this is the case, `pressed` **must** be null!\r\n     */\r\n    pressed: boolean | null | undefined;\r\n    onPress: undefined | null | ButtonPressEventHandler<E>;\r\n    role: JSX.AriaRole;\r\n}\r\n\r\nexport interface UseButtonParameters<E extends Node> extends\r\n    UseRefElementParameters<E>,\r\n    TargetedOmit<UsePressParameters<E>, \"pressParameters\", \"onPressSync\" | \"focusSelf\"> {\r\n    buttonParameters: UseButtonParametersSelf<E>;\r\n}\r\n\r\nexport interface UseButtonReturnType<E extends Element> extends UsePressReturnType<E>, OmitStrong<UseRefElementReturnType<E>, \"propsStable\"> {\r\n    props: ElementProps<E>;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Implements a [Button](https://www.w3.org/WAI/ARIA/apg/patterns/button/) pattern.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useButton<E extends Element>({ buttonParameters: { tagButton, disabled, onPress, pressed, role }, pressParameters, refElementParameters }: UseButtonParameters<E>): UseButtonReturnType<E> {\r\n    monitorCallCount(useButton);\r\n\r\n    const { refElementReturn, propsStable: propsRef } = useRefElement<E>({ refElementParameters });\r\n    const focusSelf = useCallback((e: any) => focus(e), [])\r\n    const { pressReturn, props: propsPress } = usePress<E>({\r\n        refElementReturn,\r\n        pressParameters: {\r\n            onPressSync: (e) => (disabled ? null : onPress)?.(enhanceEvent(e, { pressed: pressed == null ? null : !pressed })),\r\n            focusSelf,\r\n            ...pressParameters  // Intentionally at the end so Typescript will error if we forget something\r\n        },\r\n    });\r\n\r\n    const baseProps = { \"aria-pressed\": (pressed === true ? \"true\" : pressed === false ? \"false\" : undefined) };\r\n    const buttonProps = { ...baseProps, disabled: (disabled && disabled != \"soft\") ? true : false, \"aria-disabled\": (disabled === 'soft' ? 'true' : undefined), role: role == \"button\" ? undefined : role };\r\n    const divProps = { ...baseProps, tabIndex: (disabled === \"hard\" ? -1 : 0), role, \"aria-disabled\": disabled ? \"true\" : undefined };\r\n\r\n    return {\r\n        pressReturn,\r\n        props: useMergedProps<E>(propsPress, propsRef, (tagButton == 'button' ? buttonProps : divProps) as ElementProps<E>),\r\n        refElementReturn,\r\n    }\r\n}\r\n\r\n\r\n","import { identity } from \"lodash-es\";\r\nimport { ElementProps, EventType, JSX, ManagedChildInfo, OnChildrenMountChange, PassiveStateUpdater, PersistentStates, TargetedOmit, UseHasCurrentFocusReturnType, UseLinearNavigationParameters, UseManagedChildParameters, UseManagedChildrenContext, UseManagedChildrenParameters, UseManagedChildrenReturnType, UsePressReturnType, UseRefElementParameters, UseRefElementReturnType, UseTextContentReturnType, UseTypeaheadNavigationChildParameters, UseTypeaheadNavigationContext, UseTypeaheadNavigationParameters, assertEmptyObject, findBackupFocus, focus, monitorCallCount, useCallback, useChildrenFlag, useHasCurrentFocus, useLinearNavigation, useManagedChild, useManagedChildren, useMemoObject, useMergedProps, usePersistentState, useRandomId, useRefElement, useStableCallback, useState, useTypeaheadNavigation, useTypeaheadNavigationChild } from \"preact-prop-helpers\";\r\nimport { DisabledType, OmitStrong, Prefices } from \"./props.js\";\r\nimport { ButtonPressEventHandler, UseButtonParameters, UseButtonReturnType, useButton } from \"./use-button.js\";\r\n\r\nexport interface UseAccordionParametersSelf {\r\n    orientation?: \"vertical\" | \"horizontal\";\r\n    initialIndex?: number | null;\r\n    localStorageKey: keyof PersistentStates | null;\r\n}\r\n\r\nexport interface UseAccordionParameters<HeaderButtonElement extends Element, M extends UseAccordionSectionInfo> extends\r\n    TargetedOmit<UseLinearNavigationParameters<HeaderButtonElement, HeaderButtonElement, M>, \"linearNavigationParameters\", \"getLowestIndex\" | \"arrowKeyDirection\" | \"getHighestIndex\" | \"isValid\" | \"indexDemangler\" | \"indexMangler\">,\r\n    UseManagedChildrenParameters<M>,\r\n    Pick<UseTypeaheadNavigationParameters<HeaderButtonElement, M>, \"typeaheadNavigationParameters\"> {\r\n    accordionParameters: UseAccordionParametersSelf;\r\n}\r\n\r\nexport interface UseAccordionReturnTypeSelf { changeExpandedIndex: PassiveStateUpdater<number | null, Event> }\r\n\r\nexport interface UseAccordionReturnType<HeaderButtonElement extends Element, M extends UseAccordionSectionInfo> extends UseManagedChildrenReturnType<M> {\r\n    /** **STABLE** */\r\n    accordionReturn: UseAccordionReturnTypeSelf;\r\n    context: UseAccordionContext<HeaderButtonElement, M>;\r\n\r\n    props: ElementProps<any>;\r\n}\r\n\r\n\r\nexport interface UseAccordionSectionInfo extends ManagedChildInfo<number> {\r\n    setOpenFromParent(open: boolean): void;\r\n    getOpenFromParent(): boolean | null;\r\n    setMostRecentlyTabbed(tabbed: boolean): void;\r\n    getMostRecentlyTabbed(): boolean | null;\r\n    focusSelf(): void;\r\n    disabled: DisabledType;\r\n    untabbable: boolean;\r\n}\r\n\r\nexport interface UseAccordionSectionParametersSelf {\r\n    /** \r\n     * If this prop is `true` or `false` (isn't null), then this section\r\n     * will be open/closed regardless of what the parent's singular open index is.\r\n     * \r\n     * In other words, leave null to only allow one section to be open at a time.\r\n     * To allow multiple sections to be open at once, \r\n     * set the parent's index to null and toggle this `true`/`false` when the button's pressed\r\n     */\r\n    open: boolean | null | undefined;\r\n    /** Generally `\"region\"` */\r\n    bodyRole: JSX.AriaRole;\r\n}\r\n\r\nexport interface UseAccordionSectionParameters<HeaderButtonElement extends Element, M extends UseAccordionSectionInfo> extends\r\n    OmitStrong<UseTypeaheadNavigationChildParameters<HeaderButtonElement, M>, \"info\" | \"refElementReturn\" | \"context\">,\r\n    UseRefElementParameters<HeaderButtonElement>,\r\n    UseManagedChildParameters<M, \"index\" | \"untabbable\">,\r\n    TargetedOmit<UseButtonParameters<HeaderButtonElement>, \"buttonParameters\", \"pressed\" | \"role\"> {\r\n    context: UseAccordionContext<HeaderButtonElement, M>;\r\n    accordionSectionParameters: UseAccordionSectionParametersSelf;\r\n}\r\n\r\nexport interface UseAccordionSectionReturnTypeSelf {\r\n    expanded: boolean;\r\n    focused: boolean;\r\n    mostRecentlyTabbed: boolean;\r\n}\r\n\r\nexport interface UseAccordionSectionReturnType<HeaderElement extends Element, HeaderButtonElement extends Element, BodyElement extends Element> extends\r\n    OmitStrong<UsePressReturnType<HeaderButtonElement>, \"props\">,\r\n    OmitStrong<UseRefElementReturnType<HeaderButtonElement>, \"propsStable\">,\r\n    UseTextContentReturnType,\r\n    UseHasCurrentFocusReturnType<HeaderButtonElement> {\r\n    accordionSectionReturn: UseAccordionSectionReturnTypeSelf;\r\n\r\n    propsHeaderButton: ElementProps<HeaderButtonElement>;\r\n    propsHeader: ElementProps<HeaderElement>;\r\n    propsBody: ElementProps<BodyElement>\r\n}\r\n\r\nexport interface UseAccordionContextSelf<HeaderButtonElement extends Element> {\r\n    changeTabbedIndex: PassiveStateUpdater<number | null, Event>;\r\n    changeExpandedIndex: PassiveStateUpdater<number | null, Event>;\r\n    getExpandedIndex: () => (number | null);\r\n    getTabbedIndex: () => (number | null);\r\n    stableTypeaheadProps: ElementProps<HeaderButtonElement>;\r\n}\r\n\r\nexport interface UseAccordionContext<HeaderButtonElement extends Element, M extends UseAccordionSectionInfo> extends UseManagedChildrenContext<M>, UseTypeaheadNavigationContext {\r\n    accordionSectionParameters: UseAccordionContextSelf<HeaderButtonElement>;\r\n    linearNavigationParameters: UseLinearNavigationParameters<HeaderButtonElement, HeaderButtonElement, M>[\"linearNavigationParameters\"];\r\n    rovingTabIndexReturn: UseLinearNavigationParameters<HeaderButtonElement, HeaderButtonElement, M>[\"rovingTabIndexReturn\"];\r\n}\r\n\r\n/**\r\n * Implements an [Accordion](https://www.w3.org/WAI/ARIA/apg/patterns/accordion/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useAccordionSection}\r\n */\r\nexport function useAccordion<HeaderButtonElement extends Element, M extends UseAccordionSectionInfo>({\r\n    accordionParameters: { initialIndex, localStorageKey, orientation, ...void2 },\r\n    typeaheadNavigationParameters,\r\n    linearNavigationParameters: { disableHomeEndKeys, navigatePastEnd, navigatePastStart, pageNavigationSize, onNavigateLinear, ...void1 },\r\n    managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange, onChildrenCountChange, ...void3 },\r\n    ...void4\r\n}: UseAccordionParameters<HeaderButtonElement, M>): UseAccordionReturnType<HeaderButtonElement, M> {\r\n    monitorCallCount(useAccordion);\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n    const [localStorageIndex, setLocalStorageIndex] = usePersistentState<never, number | null>(localStorageKey ?? null, initialIndex ?? null);\r\n    if (localStorageIndex != null)\r\n        initialIndex = localStorageIndex;\r\n\r\n    const { managedChildrenReturn, context: { managedChildContext } } = useManagedChildren<M>({\r\n        managedChildrenParameters: {\r\n            onChildrenMountChange: useStableCallback<OnChildrenMountChange<number>>((m, u) => { ocmc2(); onChildrenMountChange?.(m, u); }),\r\n            onAfterChildLayoutEffect,\r\n            onChildrenCountChange\r\n        }\r\n    });\r\n    const { getChildren } = managedChildrenReturn;\r\n\r\n    const isValidByChild = useCallback((c: M) => (c && !c.disabled && !c.untabbable), []);\r\n    const isValidByIndex = useCallback((c: number): boolean => {\r\n        const child = getChildren().getAt(c);\r\n        if (child) {\r\n            return isValidByChild(child);\r\n        }\r\n        return false;\r\n    }, []);\r\n\r\n    const { propsStable, refElementReturn: { getElement } } = useRefElement<any>({})\r\n\r\n    // Keep track of the one expanded index (if there is only one expanded index)\r\n    const { changeIndex: changeExpandedIndexLocalOnly, getCurrentIndex: getCurrentExpandedIndex } = useChildrenFlag<M, Event>({\r\n        initialIndex,\r\n        getChildren,\r\n        getAt: useCallback((child) => { return child.getOpenFromParent() ?? false; }, []),\r\n        setAt: useCallback((child, open) => { return child.setOpenFromParent(open); }, []),\r\n        isValid: isValidByChild,\r\n        onIndexChange: null,\r\n        closestFit: false,\r\n        onClosestFit: null\r\n    });\r\n\r\n    // Also keep track of which button is currently tabbable.\r\n    // For some reason, Accordion buttons are both individually tabbable *and* arrow-key navigatable.\r\n    const { changeIndex: changeTabbedIndex, getCurrentIndex: getTabbedIndex, reevaluateClosestFit: ocmc2 } = useChildrenFlag<M, EventType<any, any>>({\r\n        initialIndex,\r\n        getChildren,\r\n        getAt: useCallback((child) => { return child.getMostRecentlyTabbed() ?? false; }, []),\r\n        setAt: useCallback((child, tabbed) => { return child.setMostRecentlyTabbed(tabbed); }, []),\r\n        isValid: isValidByChild,\r\n        closestFit: true,\r\n        onIndexChange: useCallback((i: number | null) => {\r\n            if (i != null) {\r\n                getChildren().getAt(i)?.focusSelf();\r\n            }\r\n        }, []),\r\n        onClosestFit: useStableCallback((index) => {\r\n            if (document.activeElement == null || document.activeElement == document.body) {\r\n                if (index == null)\r\n                    findBackupFocus(getElement()!).focus();\r\n                else\r\n                    getChildren().getAt(index)?.focusSelf();\r\n            }\r\n        })\r\n    });\r\n\r\n    const changeExpandedIndex = useStableCallback<typeof changeExpandedIndexLocalOnly>((value) => {\r\n        changeExpandedIndexLocalOnly(value);\r\n        setLocalStorageIndex(value);\r\n    });\r\n\r\n    const rovingTabIndexReturn = useMemoObject({\r\n        getTabbableIndex: getTabbedIndex,\r\n        setTabbableIndex: changeTabbedIndex\r\n    })\r\n\r\n    const {\r\n        context: { typeaheadNavigationContext },\r\n        typeaheadNavigationReturn,\r\n        propsStable: propsTN\r\n    } = useTypeaheadNavigation<HeaderButtonElement, HeaderButtonElement, M>({\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationParameters\r\n    })\r\n\r\n    return {\r\n        props: propsStable,\r\n        context: useMemoObject<UseAccordionContext<HeaderButtonElement, M>>({\r\n\r\n\r\n            managedChildContext,\r\n            typeaheadNavigationContext,\r\n            accordionSectionParameters: useMemoObject({\r\n                changeExpandedIndex,\r\n                changeTabbedIndex,\r\n                getExpandedIndex: getCurrentExpandedIndex,\r\n                getTabbedIndex: getTabbedIndex,\r\n                stableTypeaheadProps: propsTN,\r\n            }),\r\n            linearNavigationParameters: useMemoObject({\r\n                disableHomeEndKeys,\r\n                getHighestIndex: useCallback(() => getChildren().getHighestIndex(), []),\r\n                getLowestIndex: useCallback(() => getChildren().getLowestIndex(), []),\r\n                indexMangler: identity,\r\n                indexDemangler: identity,\r\n                arrowKeyDirection: orientation ?? \"vertical\",\r\n                isValid: isValidByIndex,\r\n                navigatePastEnd,\r\n                navigatePastStart,\r\n                pageNavigationSize,\r\n                onNavigateLinear\r\n            }),\r\n            rovingTabIndexReturn\r\n        }),\r\n        managedChildrenReturn,\r\n        accordionReturn: useMemoObject({ changeExpandedIndex })\r\n    };\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useAccordionSection<_HeaderContainerElement extends Element, HeaderButtonElement extends Element, BodyElement extends Element, M extends UseAccordionSectionInfo = UseAccordionSectionInfo>({\r\n    buttonParameters,\r\n    accordionSectionParameters: { open: openFromUser, bodyRole },\r\n    info: { index, untabbable, ...info },\r\n    textContentParameters,\r\n    context: {\r\n        accordionSectionParameters: { changeExpandedIndex, changeTabbedIndex: setCurrentFocusedIndex, getTabbedIndex: getCurrentFocusedIndex, stableTypeaheadProps },\r\n        linearNavigationParameters,\r\n        rovingTabIndexReturn,\r\n        managedChildContext,\r\n        typeaheadNavigationContext\r\n    },\r\n    refElementParameters,\r\n}: UseAccordionSectionParameters<HeaderButtonElement, M>): UseAccordionSectionReturnType<_HeaderContainerElement, HeaderButtonElement, BodyElement> {\r\n    monitorCallCount(useAccordionSection);\r\n\r\n    const { disabled, onPress: userOnPress } = buttonParameters;\r\n    const [openFromParent, setOpenFromParent, getOpenFromParent] = useState<boolean | null>(null);\r\n    const [mostRecentlyTabbed, setMostRecentlyTabbed, getMostRecentlyTabbed] = useState<boolean | null>(null);\r\n\r\n\r\n\r\n    const { randomIdReturn: _bodyIdReturn, propsSource: propsBodySource, propsReferencer: propsHeadReferencer } = useRandomId<BodyElement, HeaderButtonElement>({ randomIdParameters: { prefix: Prefices.accordionSectionHeaderButton, otherReferencerProp: \"aria-controls\" } });\r\n    const { randomIdReturn: _headIdReturn, propsSource: propsHeadSource, propsReferencer: propsBodyReferencer } = useRandomId<HeaderButtonElement, BodyElement>({ randomIdParameters: { prefix: Prefices.accordionSectionBody, otherReferencerProp: \"aria-labelledby\" } });\r\n    const open = ((openFromUser ?? openFromParent) ?? false);\r\n\r\n    const { refElementReturn: { getElement: getHeaderElement }, propsStable: headerRefElementProps } = useRefElement<HeaderButtonElement>({ refElementParameters: {} });\r\n    const { refElementReturn: { getElement: _getBodyElement }, propsStable: bodyRefElementProps } = useRefElement<BodyElement>({ refElementParameters: {} });\r\n    const { hasCurrentFocusReturn } = useHasCurrentFocus({\r\n        refElementReturn: { getElement: getHeaderElement }, hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged: useStableCallback(focused => {\r\n                if (focused) {\r\n                    setCurrentFocusedIndex(index);\r\n                    setMostRecentlyTabbed(true);\r\n                }\r\n            })\r\n        }\r\n    })\r\n    const focusSelf = useStableCallback(() => {\r\n        focus(getHeaderElement());\r\n    });\r\n\r\n    const { managedChildReturn: { getChildren: _getSections } } = useManagedChild<M>({\r\n        context: {\r\n            managedChildContext\r\n        },\r\n        info: {\r\n            index,\r\n            disabled,\r\n            focusSelf,\r\n            getMostRecentlyTabbed,\r\n            getOpenFromParent,\r\n            untabbable,\r\n            setMostRecentlyTabbed,\r\n            setOpenFromParent,\r\n            ...info\r\n        } as M\r\n    });\r\n\r\n    const onPress: ButtonPressEventHandler<HeaderButtonElement> = (e) => {\r\n        setCurrentFocusedIndex(index);\r\n        if (getOpenFromParent())\r\n            changeExpandedIndex(null);\r\n        else\r\n            changeExpandedIndex(index);\r\n\r\n        userOnPress?.(e);\r\n    };\r\n\r\n    const { propsStable: propsLN, ...linearReturnType } = useLinearNavigation<HeaderButtonElement, HeaderButtonElement, M>({ linearNavigationParameters, rovingTabIndexReturn, paginatedChildrenParameters: { paginationMin: null, paginationMax: null } });\r\n    const {\r\n        pressParameters: { excludeSpace },\r\n        textContentReturn\r\n    } = useTypeaheadNavigationChild<HeaderButtonElement, M>({\r\n        info: { index },\r\n        refElementReturn: { getElement: useStableCallback(() => refElementReturn.getElement()) },\r\n        textContentParameters,\r\n        context: { typeaheadNavigationContext }\r\n    })\r\n\r\n    const buttonReturn: UseButtonReturnType<HeaderButtonElement> = useButton<HeaderButtonElement>({\r\n        buttonParameters: { ...buttonParameters, pressed: null, onPress, role: \"button\", },\r\n        pressParameters: { excludeSpace, allowRepeatPresses: false, excludeEnter: null, excludePointer: null, longPressThreshold: null, onPressingChange: null },\r\n        refElementParameters\r\n    });\r\n\r\n    const { pressReturn, props: buttonProps, refElementReturn } = buttonReturn;\r\n\r\n    //const { linearNavigationReturn: { propsStable } } = linearReturnType;\r\n\r\n    const headerButtonProps = useMergedProps<HeaderButtonElement>(\r\n        buttonProps,\r\n        hasCurrentFocusReturn.propsStable,\r\n        headerRefElementProps,\r\n        propsHeadReferencer,\r\n        propsHeadSource,\r\n        propsLN,\r\n        stableTypeaheadProps,\r\n        { \"aria-expanded\": (open ?? false), }\r\n    );\r\n\r\n    const bodyProps = useMergedProps<BodyElement>(\r\n        bodyRefElementProps,\r\n        propsBodyReferencer,\r\n        propsBodySource,\r\n        {\r\n            role: bodyRole,\r\n            tabIndex: -1\r\n        }\r\n    );\r\n\r\n    return {\r\n        pressReturn,\r\n        refElementReturn,\r\n        textContentReturn,\r\n        accordionSectionReturn: {\r\n            mostRecentlyTabbed: !!mostRecentlyTabbed,\r\n            expanded: open,\r\n            focused: (getCurrentFocusedIndex() == index)\r\n        },\r\n        propsHeaderButton: headerButtonProps,\r\n        propsHeader: {},    // This is intentionally empty, it's just a reminder that there *does* need to be a header that contains the button.\r\n        propsBody: bodyProps,\r\n        hasCurrentFocusReturn\r\n    };\r\n}\r\n","import { CompleteListNavigationContext, ElementProps, PassiveStateUpdater, TargetedOmit, UseCompleteListNavigationChildInfo, UseCompleteListNavigationChildParameters, UseCompleteListNavigationChildReturnType, UseCompleteListNavigationParameters, UseCompleteListNavigationReturnType, assertEmptyObject, focus, monitorCallCount, returnFalse, returnNull, returnZero, useCompleteListNavigation, useCompleteListNavigationChild, useMemoObject, useMergedProps, usePassiveState, useStableCallback, useStableGetter, useState } from \"preact-prop-helpers\";\r\nimport { StateUpdater, useCallback, useEffect, useLayoutEffect, useRef } from \"preact/hooks\";\r\nimport { EnhancedEventHandler, OmitStrong, TargetedEnhancedEvent } from \"./props.js\";\r\nimport { CheckboxCheckedType } from \"./use-checkbox-like.js\";\r\n\r\nexport interface CheckboxGroupChangeEventDetail {\r\n    childrenChecked: boolean | Map<number, boolean | \"mixed\">;\r\n}\r\n\r\nexport type TargetedCheckboxGroupChangeEvent = TargetedEnhancedEvent<Event, CheckboxGroupChangeEventDetail>;\r\nexport type CheckboxGroupChangeEventHandler = EnhancedEventHandler<Event, CheckboxGroupChangeEventDetail>;\r\nexport interface UseCheckboxGroupParametersSelf {\r\n    orientation: \"vertical\" | \"horizontal\";\r\n}\r\n\r\nexport interface UseCheckboxGroupParameters<ParentElement extends Element, TabbableChildElement extends Element, M extends CheckboxGroupInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseCompleteListNavigationParameters<ParentElement, TabbableChildElement, M>, \"linearNavigationParameters\" | \"paginatedChildrenParameters\" | \"singleSelectionParameters\" | \"rovingTabIndexParameters\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ParentElement, TabbableChildElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ParentElement, TabbableChildElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\"> {\r\n    checkboxGroupParameters: UseCheckboxGroupParametersSelf; \r\n}\r\n\r\ninterface CheckboxGroupInfoBaseBase<TCE extends Element> {\r\n    _e?: TCE;\r\n}\r\n\r\ninterface CheckboxGroupInfoBase1<TCE extends Element> extends CheckboxGroupInfoBaseBase<TCE> {\r\n    checkboxChildType: \"parent\";\r\n}\r\n\r\ninterface CheckboxGroupInfoBase2<TCE extends Element> extends CheckboxGroupInfoBaseBase<TCE> {\r\n    checkboxChildType: \"child\";\r\n    getChecked(): boolean | \"mixed\";\r\n    getLastUserChecked(): boolean | \"mixed\";\r\n    setCheckedFromParentInput(newChecked: CheckboxCheckedType, e: Event): void | Promise<void>;\r\n}\r\n\r\nexport interface CheckboxGroupInfo<TCE extends Element> extends UseCompleteListNavigationChildInfo<TCE> {\r\n    checkboxInfo: (CheckboxGroupInfoBase1<TCE> | CheckboxGroupInfoBase2<TCE>);\r\n}\r\n\r\nexport interface UseCheckboxGroupChildParametersSelf {\r\n    checked: CheckboxCheckedType;\r\n    onChangeFromParent(checked: CheckboxCheckedType, e: Event): void | Promise<void>;\r\n}\r\n\r\nexport interface UseCheckboxGroupChildParameters<TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends OmitStrong<UseCompleteListNavigationChildParameters<TCE, M>, \"info\"> {\r\n    context: CheckboxGroupContext<any, TCE, M>;\r\n    info: Omit<UseCompleteListNavigationChildParameters<TCE, M>[\"info\"], \"checkboxInfo\">;\r\n    checkboxGroupChildParameters: UseCheckboxGroupChildParametersSelf;\r\n}\r\nexport interface UseCheckboxGroupChildReturnTypeSelf {\r\n    onControlIdChanged: (next: string | undefined, prev: string | undefined) => void;\r\n    onChildCheckedChange: (checked: CheckboxCheckedType) => void;\r\n}\r\n\r\nexport interface UseCheckboxGroupChildReturnType<TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends OmitStrong<UseCompleteListNavigationChildReturnType<TCE, M>, \"singleSelectionChildReturn\"> {\r\n    checkboxGroupChildReturn: UseCheckboxGroupChildReturnTypeSelf;\r\n}\r\n\r\n\r\n//export type UseCheckboxGroupChild<InputElement extends Element, LabelElement extends Element, TCE extends InputElement | LabelElement, M extends CheckboxGroupInfo<TCE>> = (args: UseCheckboxGroupChildParameters<TCE, M>) => UseCheckboxGroupChildReturnType<TCE, M>\r\n\r\nexport interface UseCheckboxGroupReturnType<GroupElement extends Element, TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends UseCompleteListNavigationReturnType<GroupElement, TCE, M> {\r\n    context: CheckboxGroupContext<GroupElement, TCE, M>;\r\n}\r\n\r\nexport interface UseCheckboxGroupParentParameters<TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends OmitStrong<UseCompleteListNavigationChildParameters<TCE, M>, \"info\"> {\r\n    context: CheckboxGroupContext<any, TCE, M>;\r\n    info: OmitStrong<UseCompleteListNavigationChildParameters<TCE, CheckboxGroupInfo<TCE>>[\"info\"], never>;\r\n}\r\n\r\nexport interface UseCheckboxGroupParentReturnTypeSelf {\r\n    checked: CheckboxCheckedType;\r\n    getPercent(): number;\r\n    onParentCheckedChange: (e: Event) => Promise<void>;\r\n}\r\n\r\nexport interface UseCheckboxGroupParentReturnType<TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends OmitStrong<UseCompleteListNavigationChildReturnType<TCE, M>, never> {\r\n    checkboxGroupParentReturn: UseCheckboxGroupParentReturnTypeSelf;\r\n}\r\n\r\n\r\n\r\nexport interface CheckboxGroupContext<GroupElement extends Element, TCE extends Element, M extends CheckboxGroupInfo<TCE>> extends CompleteListNavigationContext<GroupElement, TCE, M> {\r\n    // parent\r\n    checkboxGroupParentContext: {\r\n\r\n        // What a horrifying type.  Name this better please.\r\n        setSetter: PassiveStateUpdater<StateUpdater<string> | null, Event>;\r\n\r\n        // whyyyyy\r\n        setSetParentCheckboxChecked: PassiveStateUpdater<StateUpdater<CheckboxCheckedType> | null, Event>;\r\n\r\n        getPercentChecked: (totalChecked: number, totalChildren: number) => number;\r\n\r\n        getTotalChecked: () => number;\r\n        getTotalChildren: () => number;\r\n\r\n        onCheckboxGroupParentInput: (e: Event) => Promise<void>;\r\n    }\r\n    checkboxGroupChildrenContext: {\r\n\r\n        // children\r\n        setUpdateIndex: PassiveStateUpdater<number, Event>;\r\n        allIds: Set<string>;\r\n        setTotalChildren: PassiveStateUpdater<number, Event>;\r\n        setTotalChecked: PassiveStateUpdater<number, Event>;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Allows a parent checkbox to control a number of child checkboxes, in accordance with the [Checkbox](https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useCheckboxGroupParent}\r\n * @hasChild {@link useCheckboxGroupChild}\r\n */\r\nexport function useCheckboxGroup<GroupElement extends Element, TCE extends Element, M extends CheckboxGroupInfo<TCE> = CheckboxGroupInfo<TCE>>({\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    checkboxGroupParameters: { orientation },\r\n    ...listNavParameters\r\n}: UseCheckboxGroupParameters<GroupElement, TCE, M>): UseCheckboxGroupReturnType<GroupElement, TCE, M> {\r\n    monitorCallCount(useCheckboxGroup);\r\n\r\n    const {\r\n        childrenHaveFocusReturn,\r\n        context,\r\n        linearNavigationReturn,\r\n        managedChildrenReturn,\r\n        props,\r\n        rearrangeableChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        staggeredChildrenReturn,\r\n        paginatedChildrenReturn,\r\n        sortableChildrenReturn,\r\n        typeaheadNavigationReturn\r\n    } = useCompleteListNavigation<GroupElement, TCE, M>({\r\n        linearNavigationParameters: { arrowKeyDirection: orientation, ...linearNavigationParameters },\r\n        rovingTabIndexParameters: { focusSelfParent: focus, ...rovingTabIndexParameters },\r\n        singleSelectionParameters: { initiallySelectedIndex: null, onSelectedIndexChange: null, ariaPropName: null, selectionMode: \"disabled\" },\r\n        paginatedChildrenParameters: { paginationMax: null, paginationMin: null },\r\n        ...listNavParameters\r\n    });\r\n\r\n    const { getChildren } = managedChildrenReturn;\r\n    const children = getChildren();\r\n\r\n\r\n    // Keep track of all child IDs, and any time any of them change, \r\n    // generate a new string with all of them concatenated together\r\n    // (but only once per render);\r\n    const allIds = useRef(new Set<string>());\r\n    const updateParentControlIds = useStableCallback((setter: StateUpdater<string> | null) => { setter?.(Array.from(allIds.current).join(\" \")) });\r\n    const [getSetter, setSetter] = usePassiveState<StateUpdater<string> | null, Event>(updateParentControlIds, returnNull);\r\n    const [_getUpdateIndex, setUpdateIndex] = usePassiveState<number, Event>(useStableCallback(() => { updateParentControlIds(getSetter()) }), returnZero);\r\n\r\n    // Lots of machenery to track what total percentage of all checkboxes are checked,\r\n    // and notifying the parent checkbox of this information (while re-rendering as little as possible)\r\n    const getSelfIsChecked = useCallback((percentChecked: number): CheckboxCheckedType => { return percentChecked <= 0 ? false : percentChecked >= 1 ? true : \"mixed\"; }, []);\r\n    const onAnyChildCheckedUpdate = useStableCallback((setter: StateUpdater<CheckboxCheckedType> | null, percentChecked: number) => { setter?.(getSelfIsChecked(percentChecked)); })\r\n    const [getTotalChildren, setTotalChildren] = usePassiveState(useCallback((totalChildren: number) => { onAnyChildCheckedUpdate(getSetParentCheckboxChecked(), getPercentChecked(getTotalChecked(), totalChildren)) }, []), returnZero);\r\n    const [getTotalChecked, setTotalChecked] = usePassiveState(useCallback((totalChecked: number) => { onAnyChildCheckedUpdate(getSetParentCheckboxChecked(), getPercentChecked(totalChecked, getTotalChildren())) }, []), returnZero);\r\n    const getPercentChecked = useCallback((totalChecked: number, totalChildren: number): number => {\r\n        if (totalChildren > 0)\r\n            return totalChecked / totalChildren;\r\n        else\r\n            return (totalChecked == 0 ? 0 : 1);\r\n    }, []);\r\n\r\n    const [getSetParentCheckboxChecked, setSetParentCheckboxChecked] = usePassiveState<StateUpdater<CheckboxCheckedType> | null, Event>(useStableCallback((setter: StateUpdater<CheckboxCheckedType> | null) => {\r\n        onAnyChildCheckedUpdate(setter, getPercentChecked(getTotalChecked(), getTotalChildren()))\r\n    }));\r\n\r\n\r\n    const onCheckboxGroupParentInput = useCallback(async (e: Event): Promise<void> => {\r\n        e.preventDefault();\r\n\r\n        const selfIsChecked = getSelfIsChecked(getPercentChecked(getTotalChecked(), getTotalChildren()));\r\n        const nextChecked = (selfIsChecked === false ? \"mixed\" : selfIsChecked === \"mixed\" ? true : false);\r\n        let willChangeAny = false;\r\n        const promises: Promise<any>[] = [];\r\n        children.forEach(child => {\r\n            if (child.checkboxInfo.checkboxChildType == \"child\")\r\n                willChangeAny ||= (child.checkboxInfo.getChecked() != child.checkboxInfo.getLastUserChecked())\r\n        });\r\n        children.forEach(child => {\r\n            if (child.checkboxInfo.checkboxChildType == \"child\") {\r\n                const prevChecked = child.checkboxInfo.getChecked();\r\n                let checked: CheckboxCheckedType;\r\n                if (nextChecked == \"mixed\") {\r\n                    if (willChangeAny)\r\n                        checked = (child.checkboxInfo.getLastUserChecked());\r\n                    else\r\n                        checked = true;\r\n                }\r\n                else {\r\n                    checked = nextChecked;\r\n                }\r\n                if (checked != prevChecked) {\r\n                    const promise = child.checkboxInfo.setCheckedFromParentInput(checked, e);\r\n                    if (promise) {\r\n                        promises.push(promise);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        await Promise.all(promises);\r\n    }, []);\r\n\r\n\r\n    return {\r\n        linearNavigationReturn,\r\n        context: useMemoObject({\r\n            ...context,\r\n            checkboxGroupChildrenContext: useMemoObject({\r\n                setUpdateIndex,\r\n                allIds: allIds.current,\r\n                setTotalChecked,\r\n                setTotalChildren\r\n            }),\r\n            checkboxGroupParentContext: useMemoObject({\r\n                setSetter,\r\n                setSetParentCheckboxChecked,\r\n                getPercentChecked,\r\n                getTotalChecked,\r\n                getTotalChildren,\r\n                onCheckboxGroupParentInput,\r\n            })\r\n        }),\r\n        childrenHaveFocusReturn,\r\n        props,\r\n        staggeredChildrenReturn,\r\n        paginatedChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        singleSelectionReturn,\r\n        sortableChildrenReturn,\r\n        managedChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn\r\n    };\r\n}\r\n\r\n\r\n\r\n/**\r\n * Implements the logic for the parent checkbox (but not the checkbox itself).\r\n * \r\n * @compositeParams\r\n */\r\nexport function useCheckboxGroupParent<TCE extends Element, M extends CheckboxGroupInfo<TCE> = CheckboxGroupInfo<TCE>>({\r\n    context,\r\n    info,\r\n    textContentParameters\r\n}: UseCheckboxGroupParentParameters<TCE, M>): UseCheckboxGroupParentReturnType<TCE, M> {\r\n    const { checkboxGroupParentContext: { setSetter, setSetParentCheckboxChecked, getPercentChecked, getTotalChecked, getTotalChildren, onCheckboxGroupParentInput } } = context;\r\n    const {\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        pressParameters,\r\n        textContentReturn,\r\n        refElementReturn,\r\n        propsChild,\r\n        propsTabbable,\r\n        paginatedChildReturn,\r\n        rovingTabIndexChildReturn,\r\n        staggeredChildReturn,\r\n        singleSelectionChildReturn,\r\n    } = useCompleteListNavigationChild<TCE, M>({\r\n        context,\r\n        info: info as M,\r\n        textContentParameters\r\n    });\r\n\r\n    const [ariaControls, setControls] = useState(\"\");\r\n    useLayoutEffect(() => {\r\n        setSetter(() => setControls);\r\n    }, [setControls]);\r\n    monitorCallCount(useCheckboxGroupParent);\r\n\r\n    const [checked, setChecked] = useState<CheckboxCheckedType>(false);\r\n    useEffect(() => {\r\n        setSetParentCheckboxChecked(() => setChecked);\r\n    }, [])\r\n\r\n    const checkboxGroupParentReturn = { checked, onParentCheckedChange: onCheckboxGroupParentInput, getPercent: useStableCallback(() => { return getPercentChecked(getTotalChecked(), getTotalChildren()) }) };\r\n    return {\r\n        checkboxGroupParentReturn,\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        textContentReturn,\r\n        staggeredChildReturn,\r\n        refElementReturn,\r\n        propsChild: useMergedProps({ \"aria-controls\": ariaControls } as ElementProps<TCE>, propsChild),\r\n        propsTabbable,\r\n        rovingTabIndexChildReturn,\r\n        paginatedChildReturn,\r\n        singleSelectionChildReturn,\r\n        pressParameters\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Implements the \"child\" part of a checkbox group.\r\n * \r\n * @remarks Does not implement any actual \"checkbox\" functionality,\r\n * but it does tell you what to do *with* a checkbox.\r\n * \r\n * (That is to say, use `onChildCheckedChange` whenever\r\n * your checkbox or checkbox-like thing changes, and\r\n * properly implement `onChangeFromParent` to work\r\n * properly when the parent changes)\r\n * \r\n * @compositeParams\r\n */\r\nexport function useCheckboxGroupChild<TCE extends Element, M extends CheckboxGroupInfo<TCE> = CheckboxGroupInfo<TCE>>({\r\n    checkboxGroupChildParameters,\r\n    context,\r\n    info,\r\n    textContentParameters,\r\n}: UseCheckboxGroupChildParameters<TCE, M>): UseCheckboxGroupChildReturnType<TCE, M> {\r\n    const { checkboxGroupChildrenContext: { allIds, setUpdateIndex, setTotalChildren, setTotalChecked, } } = context;\r\n\r\n    monitorCallCount(useCheckboxGroupChild);\r\n\r\n    const { checked, onChangeFromParent, ...void1 } = checkboxGroupChildParameters;\r\n    const getChecked = useStableGetter(checked);\r\n    const [getLastUserChecked, setLastUserChecked] = usePassiveState<boolean | \"mixed\", Event>(null, returnFalse);\r\n    const onChildCheckedChange = useStableCallback((checked: CheckboxCheckedType) => {\r\n        setLastUserChecked(checked);\r\n    });\r\n\r\n    const onControlIdChanged = useCallback((next: string | undefined, prev: string | undefined) => {\r\n        if (prev)\r\n            allIds.delete(prev);\r\n\r\n        if (next)\r\n            allIds.add(next);\r\n\r\n        if (!!next || !!prev) {\r\n            setUpdateIndex(i => ((i ?? 0) + 1));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTotalChildren(c => ((c ?? 0) + 1));\r\n        return () => setTotalChildren(c => ((c ?? 0) - 1));\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        if (checked) {\r\n            setTotalChecked(c => ((c ?? 0) + 1));\r\n            return () => setTotalChecked(c => ((c ?? 0) - 1));\r\n        }\r\n    }, [checked]);\r\n\r\n    const {\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        refElementReturn,\r\n        textContentReturn,\r\n        propsChild,\r\n        propsTabbable,\r\n        singleSelectionChildReturn: _singleSelectionChildReturn,\r\n        staggeredChildReturn,\r\n        paginatedChildReturn,\r\n        rovingTabIndexChildReturn,\r\n        pressParameters,\r\n        ...void2\r\n    } = useCompleteListNavigationChild<TCE, M>({\r\n        info: { checkboxInfo: { checkboxChildType: \"child\", getLastUserChecked, getChecked, setCheckedFromParentInput: onChangeFromParent }, ...info } as M,\r\n        context,\r\n        textContentParameters,\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    return {\r\n        checkboxGroupChildReturn: {\r\n            onChildCheckedChange,\r\n            onControlIdChanged\r\n        },\r\n        textContentReturn,\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        staggeredChildReturn,\r\n        paginatedChildReturn,\r\n        refElementReturn,\r\n        propsChild,\r\n        propsTabbable,\r\n        pressParameters,\r\n        rovingTabIndexChildReturn,\r\n    }\r\n}\r\n\r\n","import { monitorCallCount, returnTrue, TargetedPick, useMergedProps, usePress, UsePressReturnType, useRandomDualIds, UseRandomDualIdsParameters, UseRandomDualIdsReturnType, useRefElement } from \"preact-prop-helpers\";\r\nimport { ElementToTag, noop, OmitStrong } from \"./props.js\";\r\n\r\nexport type LabelPosition = \"separate\" | \"wrapping\" | \"none\";\r\nexport type FocusableLabelElement<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element> = LP extends \"wrapping\" ? LabelElement : InputElement;\r\n\r\nexport interface UseLabelParametersSelf<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element> {\r\n    onLabelClick: null | ((e: Event) => void);\r\n    tagInput: ElementToTag<InputElement>;\r\n    tagLabel: ElementToTag<LabelElement>;\r\n    /**\r\n     * Where is this component's label relative to the component itself?\r\n     * \r\n     * * `\"separate\"`: `<label /><input />`\r\n     * * `\"wrapping\"`: `<label><input /></label>`\r\n     * * `\"none\"`: `<input aria-label=\"...\" />`\r\n     * \r\n     * In cases where you're using non-`input` and `label` elements, `\"separate\"` and `\"wrapping\"` are identical; \r\n     * this is most important for native `label` and `input` elements, as they only need a `for` prop when the label doesn't wrap the input.\r\n     */\r\n    labelPosition: LP;\r\n\r\n    /** \r\n     * When `null`, this corresponds to having a visible label (with `labelPosition` == `\"separate\"` or `\"wrapping\"`).\r\n     * \r\n     * When a string, this corresponds to `labelPosition` == `\"none\"`; this label is only visible to assistive technologies and *not* visible otherwise.\r\n     */\r\n    ariaLabel: LP extends \"none\" ? string : null;\r\n}\r\n\r\nexport interface UseLabelParameters<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element> {\r\n    randomIdInputParameters: OmitStrong<UseRandomDualIdsParameters[\"randomIdInputParameters\"], \"otherReferencerProp\">;\r\n    randomIdLabelParameters: OmitStrong<UseRandomDualIdsParameters[\"randomIdLabelParameters\"], \"otherReferencerProp\">;\r\n\r\n    labelParameters: UseLabelParametersSelf<LP, InputElement, LabelElement>;\r\n}\r\n\r\nexport interface UseLabelReturnType<InputElement extends Element, LabelElement extends Element> extends\r\n    UseRandomDualIdsReturnType<InputElement, LabelElement>,\r\n    OmitStrong<UsePressReturnType<LabelElement>, \"props\"> { }\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useLabel<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element>({\r\n    randomIdInputParameters,\r\n    randomIdLabelParameters,\r\n    labelParameters: { tagInput, tagLabel, ariaLabel, labelPosition, onLabelClick }\r\n}: UseLabelParameters<LP, InputElement, LabelElement>): UseLabelReturnType<InputElement, LabelElement> {\r\n    const nativeHTMLBehavior = (tagInput == \"input\" && tagLabel == \"label\" && labelPosition != \"wrapping\");\r\n    const synthetic = !nativeHTMLBehavior;\r\n\r\n    /**\r\n     * |Synthetic?|Position    |Input Prop   |Label Prop|\r\n     * |----------|------------|-------------|----------|\r\n     * |N         |`\"separate\"`|-            |`for`     |\r\n     * |N         |`\"wrapping\"`|-            |-         |\r\n     * |Y         |`\"separate\"`|`labelled-by`|-         |\r\n     * |Y         |`\"wrapping\"`|`labelled-by`|-         |\r\n     * \r\n     */\r\n    let _comment: any;\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel,\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn\r\n    } = useRandomDualIds<InputElement, LabelElement>({\r\n        randomIdInputParameters: { ...randomIdInputParameters, otherReferencerProp: !synthetic && labelPosition === \"separate\" ? \"for\" : null },\r\n        randomIdLabelParameters: { ...randomIdLabelParameters, otherReferencerProp: synthetic ? \"aria-labelledby\" : null },\r\n    });\r\n    const { refElementReturn, propsStable: propsRef } = useRefElement<LabelElement>({ refElementParameters: {} });\r\n\r\n    if (labelPosition == 'none') {\r\n        // When we set the aria-label, intentionally clobber element-based labels (for example, in case they don't exist).\r\n        propsInput[\"aria-label\"] = (ariaLabel!);\r\n        propsInput[\"aria-labelledby\"] = undefined;\r\n        propsLabel[\"for\"] = undefined;\r\n    }\r\n\r\n    const { pressReturn, props: propsPress } = usePress({ pressParameters: { excludeEnter: returnTrue, excludeSpace: returnTrue, onPressSync: onLabelClick, focusSelf: noop, allowRepeatPresses: false, excludePointer: null, longPressThreshold: null, onPressingChange: null }, refElementReturn });\r\n\r\n    return {\r\n        pressReturn,\r\n        propsInput,\r\n        propsLabel: useMergedProps(propsLabel, propsRef, propsPress),\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n    }\r\n}\r\n\r\nexport interface UseLabelSyntheticParameters extends TargetedPick<UseLabelParameters<LabelPosition, any, any>, \"labelParameters\", \"ariaLabel\" | \"onLabelClick\"> {\r\n    randomIdInputParameters: OmitStrong<UseRandomDualIdsParameters[\"randomIdInputParameters\"], \"otherReferencerProp\">;\r\n    randomIdLabelParameters: OmitStrong<UseRandomDualIdsParameters[\"randomIdLabelParameters\"], \"otherReferencerProp\">;\r\n}\r\n\r\n/**\r\n * Shortcut for `useLabel` that assumes we're just never working with native HTML `input` and `label` elements. So for labelling guaranteably non-native elements.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useLabelSynthetic<InputElement extends Element, LabelElement extends Element>({\r\n    labelParameters: { ariaLabel, onLabelClick },\r\n    ...rest\r\n}: UseLabelSyntheticParameters) {\r\n    monitorCallCount(useLabelSynthetic);\r\n\r\n    return useLabel<LabelPosition, InputElement, LabelElement>({\r\n        labelParameters: {\r\n            ariaLabel,\r\n            labelPosition: ariaLabel == null ? \"separate\" : \"none\",\r\n            tagInput: \"div\" as never,\r\n            tagLabel: \"div\" as never,\r\n            onLabelClick\r\n        },\r\n        ...rest\r\n    })\r\n\r\n}\r\n\r\n","import { assertEmptyObject, ElementProps, focus, JSX, monitorCallCount, TargetedOmit, TargetedPick, useMergedProps, usePress, UsePressParameters, UsePressReturnType, UseRefElementReturnType, useStableCallback } from \"preact-prop-helpers\";\r\nimport { useEffect } from \"preact/hooks\";\r\nimport { DisabledType, OmitStrong } from \"./props.js\";\r\nimport { LabelPosition, useLabel, UseLabelParameters, UseLabelReturnType } from \"./use-label.js\";\r\n\r\n\r\nfunction preventDefault(e: Event) {\r\n    e.preventDefault();\r\n}\r\n\r\n\r\nexport type CheckboxCheckedType = boolean | \"mixed\";\r\n\r\nexport interface UseCheckboxLikeParametersSelf {\r\n\r\n    /** The role attribute to use, when applicable */\r\n    role: JSX.AriaRole;\r\n    disabled: DisabledType;\r\n    checked: CheckboxCheckedType;\r\n    onInput(event: Event): void;\r\n}\r\n\r\nexport interface UseCheckboxLikeParameters<LP extends LabelPosition, InputType extends Element, LabelType extends Element> extends \r\nOmitStrong<UseLabelParameters<LP, InputType, LabelType>, \"labelParameters\">,\r\nTargetedOmit<UseLabelParameters<LP, InputType, LabelType>, \"labelParameters\", \"onLabelClick\">,\r\nTargetedPick<UsePressParameters<any>, \"pressParameters\", \"longPressThreshold\" | \"excludeSpace\">\r\n{\r\n    checkboxLikeParameters: UseCheckboxLikeParametersSelf;\r\n\r\n\r\n    refElementLabelReturn: UseRefElementReturnType<LabelType>[\"refElementReturn\"];\r\n    refElementInputReturn: UseRefElementReturnType<InputType>[\"refElementReturn\"];\r\n}\r\n\r\nexport interface UseCheckboxLikeReturnTypeSelf {\r\n    /**\r\n     * Call this to focus whichever element handles the focus based on `labelPosition`.\r\n     */\r\n    focusSelf(): void;\r\n}\r\n\r\nexport interface UseCheckboxLikeReturnType<InputType extends Element, LabelType extends Element> extends UseLabelReturnType<InputType, LabelType> {\r\n    pressLabelReturn: UsePressReturnType<LabelType>[\"pressReturn\"];\r\n    pressInputReturn: UsePressReturnType<InputType>[\"pressReturn\"];\r\n    // TODO\r\n    checkboxLikeInputReturn: { propsUnstable: ElementProps<InputType> }\r\n    checkboxLikeLabelReturn: { propsUnstable: ElementProps<LabelType> }\r\n    checkboxLikeReturn: UseCheckboxLikeReturnTypeSelf\r\n}\r\n\r\n/**\r\n * Handles any component where there's:\r\n * ```md-literal\r\n * 1. Some kind of an on/off binary/trinary input element that needs event handlers\r\n * 2. Some kind of label for that input element\r\n * ```md-literal\r\n * \r\n * See also `useLabel` for when there's a label for a non-checkbox-like component.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useCheckboxLike<LP extends LabelPosition, InputType extends Element, LabelType extends Element>({\r\n    labelParameters,\r\n    randomIdInputParameters,\r\n    randomIdLabelParameters,\r\n    checkboxLikeParameters: { checked, disabled, onInput: onInputSync, role, ...void1 },\r\n    refElementInputReturn,\r\n    refElementLabelReturn,\r\n    pressParameters: { excludeSpace, longPressThreshold, ...void2 },\r\n     ...void3\r\n}: UseCheckboxLikeParameters<LP, InputType, LabelType>): UseCheckboxLikeReturnType<InputType, LabelType> {\r\n    monitorCallCount(useCheckboxLike);\r\n\r\n    const { getElement: getInputElement } = refElementInputReturn;\r\n    const { getElement: getLabelElement } = refElementLabelReturn;\r\n    const { tagInput, tagLabel, labelPosition } = labelParameters;\r\n\r\n    // onClick and onChange are a bit messy, so we need to\r\n    // *always* make sure that the visible state is correct\r\n    // after all the event dust settles.\r\n    // See https://github.com/preactjs/preact/issues/2745,\r\n    // and https://github.com/preactjs/preact/issues/1899#issuecomment-525690194\r\n    useEffect(() => {\r\n        const element = getInputElement!();\r\n        if (element && tagInput == \"input\") {\r\n            (element as Element as HTMLInputElement).indeterminate = (checked === \"mixed\");\r\n            (element as Element as HTMLInputElement).checked = (checked === true)\r\n        }\r\n    }, [tagInput, (checked ?? false)])\r\n\r\n    const {\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n        propsInput,\r\n        propsLabel,\r\n        pressReturn\r\n    } = useLabel<LP, InputType, LabelType>({\r\n        labelParameters: {\r\n            ...labelParameters,\r\n            onLabelClick: useStableCallback((e) => {\r\n                if (!disabled && tagInput != \"input\" && tagLabel != \"label\" && labelPosition != \"separate\") {\r\n                    focusSelf();\r\n                    onInputSync(e);\r\n                }\r\n            })\r\n        },\r\n        randomIdInputParameters,\r\n        randomIdLabelParameters,\r\n    });\r\n\r\n    const focusSelf = useStableCallback(() => {\r\n        let elementToFocus: HTMLElement | null = null;\r\n        if (labelPosition == \"wrapping\")\r\n            elementToFocus = getLabelElement() as Element as HTMLElement;\r\n        else\r\n            elementToFocus = getInputElement() as Element as HTMLElement;\r\n\r\n        focus(elementToFocus);\r\n    })\r\n\r\n    const onClickInputSync = (labelPosition == \"wrapping\" ? undefined : onInputSync);\r\n    const onClickLabelSync = onInputSync;\r\n    const { pressReturn: pressInputReturn, props: propsPressInput } = usePress<InputType>({ pressParameters: { excludeSpace, allowRepeatPresses: false, excludeEnter: null, excludePointer: null, longPressThreshold, onPressingChange: null, focusSelf, onPressSync: (disabled) ? undefined : onClickInputSync }, refElementReturn: refElementInputReturn });\r\n    const { pressReturn: pressLabelReturn, props: propsPressLabel } = usePress<LabelType>({ pressParameters: { excludeSpace, allowRepeatPresses: false, excludeEnter: null, excludePointer: null, longPressThreshold, onPressingChange: null, focusSelf, onPressSync: (disabled) ? undefined : onClickLabelSync }, refElementReturn: refElementLabelReturn });\r\n    const propsUnstableInput: ElementProps<InputType> = {};\r\n    const propsUnstableLabel: ElementProps<LabelType> = {};\r\n\r\n    // Make sure that label clicks can't affect the visual state of the checkbox\r\n    propsUnstableInput.onClick = preventDefault;\r\n    propsUnstableLabel.onClick = preventDefault;\r\n\r\n    propsUnstableInput.onInput = preventDefault;\r\n    propsUnstableInput.onChange = preventDefault;\r\n\r\n    propsUnstableInput.type = role == \"radio\" ? \"radio\" : \"checkbox\";\r\n\r\n    switch (labelPosition) {\r\n        case \"none\":\r\n        case \"separate\": {\r\n            if (tagInput == \"input\") {\r\n                // Even in the most default input behavior, we still need to handle\r\n                // special abstraction over checked=\"mixed\" and disabled=\"soft\"\r\n                propsUnstableInput.checked = (checked === true);\r\n                if (disabled === true || disabled === 'hard')\r\n                    propsUnstableInput.disabled = true;\r\n                else if (disabled == \"soft\")\r\n                    propsUnstableInput[\"aria-disabled\"] = \"true\";\r\n            }\r\n            else {\r\n                // div inputs need their various ARIA roles and properties\r\n                propsUnstableInput.role = role;\r\n                propsUnstableInput.tabIndex = 0;\r\n                propsUnstableInput[\"aria-checked\"] = (checked ?? false);\r\n                propsUnstableInput[\"aria-disabled\"] = (!!disabled);\r\n            }\r\n\r\n            if (tagLabel != \"label\") {\r\n                // We don't need to do anything special for regular labels\r\n            }\r\n            else {\r\n                // The special handling for div labels is already covered by useLabel\r\n            }\r\n            break;\r\n        }\r\n        case \"wrapping\": {\r\n            if (tagInput == \"input\") {\r\n                // For form submission and styling\r\n                propsUnstableInput.checked = (checked === true);\r\n                propsUnstableInput.disabled = (disabled === true);\r\n\r\n                // Because the wrapped label handles all interactions,\r\n                // we need to make sure this element can't be interacted with\r\n                // even if it's an input element.\r\n                propsUnstableInput.inert = true;\r\n                propsUnstableInput.tabIndex = -1;\r\n                propsUnstableInput.role = \"presentation\";\r\n                propsUnstableInput[\"aria-hidden\"] = \"true\";\r\n                propsUnstableInput.onFocus = _ => focus(getLabelElement?.() as HTMLElement | null);\r\n            }\r\n            else {\r\n                // With a wrapping label, we're just using the input for visual styling and ignoring all interaction.\r\n                // With a div, we get that for free and don't need to do anything here.\r\n            }\r\n\r\n\r\n            // Wrapping labels are the actual inputs that are interacted with\r\n            // And are very similar conceptually to div inputs when separated\r\n            propsUnstableLabel.role = role;\r\n            propsUnstableLabel.tabIndex = 0;\r\n            propsUnstableLabel[\"aria-checked\"] = (checked ?? false);\r\n            propsUnstableLabel[\"aria-disabled\"] = (!!disabled);\r\n\r\n            break;\r\n        }\r\n    }\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    return {\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n        pressInputReturn,\r\n        pressLabelReturn,\r\n        checkboxLikeInputReturn: { propsUnstable: propsUnstableInput },\r\n        checkboxLikeLabelReturn: { propsUnstable: propsUnstableLabel },\r\n        propsInput: useMergedProps(propsInput, propsUnstableInput, propsPressInput),\r\n        propsLabel: useMergedProps(propsLabel, propsUnstableLabel, propsPressLabel),\r\n        checkboxLikeReturn: { focusSelf },\r\n        pressReturn\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { ElementProps, Nullable, TargetedOmit, monitorCallCount, useMergedProps, useRefElement, useStableCallback } from \"preact-prop-helpers\";\r\nimport { EnhancedEventHandler, OmitStrong, Prefices, TargetedEnhancedEvent, enhanceEvent } from \"./props.js\";\r\nimport { UseCheckboxLikeParameters, UseCheckboxLikeReturnType, useCheckboxLike } from \"./use-checkbox-like.js\";\r\nimport { LabelPosition } from \"./use-label.js\";\r\n\r\nexport interface CheckboxChangeEventDetail {\r\n    checked: boolean;\r\n};\r\n\r\n// These are not typed because they could come from the input OR the label.\r\nexport type TargetedCheckboxChangeEvent = TargetedEnhancedEvent<Event, CheckboxChangeEventDetail>;\r\nexport type CheckboxChangeEventHandler = EnhancedEventHandler<Event, CheckboxChangeEventDetail>;\r\nexport interface UseCheckboxParametersSelf {\r\n    onCheckedChange: Nullable<CheckboxChangeEventHandler>;\r\n}\r\n\r\nexport interface UseCheckboxParameters<LP extends LabelPosition, I extends Element, L extends Element> extends\r\n    OmitStrong<UseCheckboxLikeParameters<LP, I, L>, \"refElementLabelReturn\" | \"refElementInputReturn\" | \"checkboxLikeParameters\" | \"randomIdInputParameters\" | \"randomIdLabelParameters\">,\r\n    TargetedOmit<UseCheckboxLikeParameters<LP, I, L>, \"checkboxLikeParameters\", \"onInput\" | \"role\"> {\r\n    checkboxParameters: UseCheckboxParametersSelf;\r\n}\r\nexport interface UseCheckboxReturnTypeSelf<InputType extends Element> { propsUnstable: ElementProps<InputType> }\r\n\r\nexport interface UseCheckboxReturnType<InputType extends Element, LabelType extends Element> extends UseCheckboxLikeReturnType<InputType, LabelType> {\r\n    checkboxReturn: UseCheckboxReturnTypeSelf<InputType>;\r\n}\r\n\r\n/**\r\n * Implements a [Checkbox](https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/) pattern.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useCheckbox<LP extends LabelPosition, InputType extends Element, LabelType extends Element>({\r\n    checkboxParameters: { onCheckedChange },\r\n    checkboxLikeParameters,\r\n    labelParameters,\r\n    pressParameters\r\n}: UseCheckboxParameters<LP, InputType, LabelType>): UseCheckboxReturnType<InputType, LabelType> {\r\n    monitorCallCount(useCheckbox);\r\n\r\n    const { tagInput, labelPosition } = labelParameters;\r\n    const { checked } = checkboxLikeParameters;\r\n\r\n    const { refElementReturn: refElementInputReturn, propsStable: propsRefInput } = useRefElement<InputType>({});\r\n    const { refElementReturn: refElementLabelReturn, propsStable: propsRefLabel } = useRefElement<LabelType>({});\r\n\r\n    const onInputEnhanced = useStableCallback((e: Event) => onCheckedChange?.(enhanceEvent(e, { checked: !checked })));\r\n    const { propsInput, propsLabel, ...ret } = useCheckboxLike<LP, InputType, LabelType>({\r\n        randomIdInputParameters: { prefix: Prefices.checkboxLikeInput },\r\n        randomIdLabelParameters: { prefix: Prefices.checkboxLikeLabel },\r\n        refElementInputReturn,\r\n        refElementLabelReturn,\r\n        checkboxLikeParameters: { role: \"checkbox\", onInput: onInputEnhanced, ...checkboxLikeParameters },\r\n        pressParameters,\r\n        labelParameters\r\n    });\r\n\r\n    return {\r\n        checkboxReturn: { propsUnstable: { type: (tagInput == \"input\" && labelPosition != \"wrapping\" ? \"checkbox\" : undefined) } },\r\n        propsInput: useMergedProps(propsInput, propsRefInput),\r\n        propsLabel: useMergedProps(propsLabel, propsRefLabel),\r\n        ...ret\r\n    };\r\n\r\n}\r\n","\r\nimport { ElementProps, findFirstFocusable, monitorCallCount, TargetedOmit, useMergedProps, useModal, UseModalParameters, UseModalReturnType, useStableCallback } from \"preact-prop-helpers\";\r\nimport { OmitStrong, Prefices } from \"./props.js\";\r\nimport { useLabelSynthetic, UseLabelSyntheticParameters } from \"./use-label.js\";\r\n\r\nexport interface UseDialogParameters<_DialogElement extends Element, _TitleElement extends Element> extends\r\n    OmitStrong<UseModalParameters<\"escape\" | \"backdrop\">, \"focusTrapParameters\" | \"dismissParameters\">,\r\n    TargetedOmit<UseModalParameters<\"escape\" | \"backdrop\">, \"focusTrapParameters\", \"trapActive\" | \"onlyMoveFocus\">,\r\n    TargetedOmit<UseModalParameters<\"escape\" | \"backdrop\">, \"dismissParameters\", \"closeOnLostFocus\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\"> {\r\n}\r\n\r\nexport interface UseDialogReturnType<FocusContainerElement extends Element, SourceElement extends Element, PopupElement extends Element, TitleElement extends Element> extends OmitStrong<UseModalReturnType<FocusContainerElement, SourceElement, PopupElement>, \"propsStableSource\" | \"propsStablePopup\"> {\r\n    propsDialog: ElementProps<PopupElement>;\r\n    propsSource: ElementProps<SourceElement>;\r\n    propsTitle: ElementProps<TitleElement>;\r\n}\r\n\r\n/**\r\n * Implements a [Dialog](https://www.w3.org/WAI/ARIA/apg/patterns/dialog/) pattern.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useDialog<FocusContainerElement extends Element, SourceElement extends Element, DialogElement extends Element, TitleElement extends Element>({ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }: UseDialogParameters<DialogElement, TitleElement>): UseDialogReturnType<FocusContainerElement, SourceElement, DialogElement, TitleElement> {\r\n    monitorCallCount(useDialog);\r\n\r\n    const {\r\n        propsFocusContainer,\r\n        propsStablePopup,\r\n        propsStableSource,\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    } = useModal<\"escape\" | \"backdrop\", FocusContainerElement, SourceElement, DialogElement>({\r\n        dismissParameters: { closeOnLostFocus: false, ...dismissParameters },\r\n        escapeDismissParameters,\r\n        focusTrapParameters: { trapActive: true, onlyMoveFocus: false, ...focusTrapParameters }\r\n    });\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel\r\n    } = useLabelSynthetic<DialogElement, TitleElement>({\r\n        labelParameters: {\r\n            ...labelParameters, onLabelClick: useStableCallback(() => {\r\n                const e = refElementPopupReturn.getElement();\r\n                focusTrapParameters.focusPopup(e, () => (findFirstFocusable(e!) as HTMLElement | null));\r\n\r\n            })\r\n        },\r\n        randomIdInputParameters: { prefix: Prefices.dialog },\r\n        randomIdLabelParameters: { prefix: Prefices.dialogTitle }\r\n    });\r\n\r\n    return {\r\n        propsFocusContainer,\r\n        propsDialog: useMergedProps<DialogElement>(propsStablePopup, propsInput),\r\n        propsSource: { ...propsStableSource },\r\n        propsTitle: propsLabel,\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    }\r\n}\r\n","import { ElementProps, findFirstFocusable, monitorCallCount, TargetedOmit, useMergedProps, useModal, UseModalParameters, UseModalReturnType, useStableCallback } from \"preact-prop-helpers\";\r\nimport { OmitStrong, Prefices } from \"./props.js\";\r\nimport { useLabelSynthetic, UseLabelSyntheticParameters } from \"./use-label.js\";\r\n\r\nexport interface UseDrawerParameters<_DialogElement extends Element, _TitleElement extends Element> extends\r\n    OmitStrong<UseModalParameters<\"escape\" | \"backdrop\" | \"lost-focus\">, \"focusTrapParameters\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\">,\r\n    TargetedOmit<UseModalParameters<\"escape\" | \"backdrop\" | \"lost-focus\">, \"focusTrapParameters\", \"onlyMoveFocus\"> {\r\n}\r\n\r\nexport interface UseDrawerReturnType<FocusContainerElement extends Element, SourceElement extends Element, DrawerElement extends Element, TitleElement extends Element> extends OmitStrong<UseModalReturnType<FocusContainerElement, SourceElement, DrawerElement>, \"propsStableSource\" | \"propsStablePopup\"> {\r\n    propsDrawer: ElementProps<DrawerElement>;\r\n    propsSource: ElementProps<SourceElement>;\r\n    propsTitle: ElementProps<TitleElement>;\r\n}\r\n\r\n/**\r\n * Implements a drawer, which is a specific kind of [Dialog](https://www.w3.org/WAI/ARIA/apg/patterns/dialog/).\r\n * \r\n * @compositeParams\r\n */\r\nexport function useDrawer<FocusContainerElement extends Element, SourceElement extends Element, PopupElement extends Element, TitleElement extends Element>({ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }: UseDrawerParameters<PopupElement, TitleElement>): UseDrawerReturnType<FocusContainerElement, SourceElement, PopupElement, TitleElement> {\r\n    monitorCallCount(useDrawer);\r\n\r\n    const {\r\n        propsFocusContainer,\r\n        propsStablePopup,\r\n        propsStableSource,\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    } = useModal<\"escape\" | \"backdrop\" | \"lost-focus\", FocusContainerElement, SourceElement, PopupElement>({\r\n        dismissParameters,\r\n        escapeDismissParameters,\r\n        focusTrapParameters: { onlyMoveFocus: false, ...focusTrapParameters }\r\n    });\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel,\r\n    } = useLabelSynthetic<PopupElement, TitleElement>({\r\n        labelParameters: {\r\n            ...labelParameters, onLabelClick: useStableCallback(() => {\r\n                const e = refElementPopupReturn.getElement();\r\n                focusTrapParameters.focusPopup(e, () => (findFirstFocusable(e!) as HTMLElement | null));\r\n\r\n            })\r\n        },\r\n        randomIdInputParameters: { prefix: Prefices.drawer },\r\n        randomIdLabelParameters: { prefix: Prefices.drawerTitle }\r\n    });\r\n\r\n    return {\r\n        propsFocusContainer,\r\n        propsDrawer: useMergedProps<PopupElement>(propsStablePopup, propsInput),\r\n        propsTitle: propsLabel,\r\n        propsSource: { ...propsStableSource },\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    CompleteGridNavigationCellContext,\r\n    CompleteGridNavigationRowContext,\r\n    ElementProps,\r\n    ExtendMerge,\r\n    TargetedOmit,\r\n    TargetedPick,\r\n    UseCompleteGridNavigationCellInfo,\r\n    UseCompleteGridNavigationCellParameters,\r\n    UseCompleteGridNavigationCellReturnType,\r\n    UseCompleteGridNavigationDeclarativeParameters,\r\n    UseCompleteGridNavigationParameters,\r\n    UseCompleteGridNavigationReturnType,\r\n    UseCompleteGridNavigationRowInfo,\r\n    UseCompleteGridNavigationRowParameters,\r\n    UseCompleteGridNavigationRowReturnType,\r\n    UsePressParameters,\r\n    UsePressReturnType,\r\n    assertEmptyObject,\r\n    focus,\r\n    monitorCallCount, useCompleteGridNavigationCell,\r\n    useCompleteGridNavigationDeclarative,\r\n    useCompleteGridNavigationRow,\r\n    useMemoObject,\r\n    useMergedProps,\r\n    usePress,\r\n    useStableCallback\r\n} from \"preact-prop-helpers\";\r\nimport { OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelSyntheticParameters, useLabelSynthetic } from \"./use-label.js\";\r\nimport { UseListboxParameters, UseListboxParametersSelf } from \"./use-listbox.js\";\r\n\r\nexport interface UseGridlistContext<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends CompleteGridNavigationRowContext<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM> {\r\n    gridlistRowContext: { selectionLimit: \"single\" | \"multi\" | \"none\" }\r\n}\r\n\r\nexport interface UseGridlistRowContext<ParentElement extends Element, ChildElement extends Element, M extends GridlistCellInfo<ChildElement>> extends CompleteGridNavigationCellContext<ParentElement, ChildElement, M> {\r\n\r\n}\r\n\r\nexport interface UseGridlistParametersSelf<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends UseListboxParametersSelf<GridlistElement, GridlistRowElement, LabelElement, RM> {\r\n\r\n}\r\n\r\nexport interface UseGridlistParameters<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends\r\n    OmitStrong<UseCompleteGridNavigationDeclarativeParameters<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>, \"singleSelectionDeclarativeParameters\" | \"rovingTabIndexParameters\">,\r\n    TargetedOmit<UseCompleteGridNavigationParameters<GridlistElement, GridlistRowElement, GridlistCellElement, RM>, \"rovingTabIndexParameters\", \"focusSelfParent\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\">,\r\n    Pick<UseListboxParameters<GridlistElement, GridlistRowElement, LabelElement, RM>, \"listboxParameters\"> {\r\n\r\n}\r\nexport interface UseGridlistReturnType<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends OmitStrong<UseCompleteGridNavigationReturnType<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>, \"singleSelectionReturn\" | \"props\"> {\r\n    propsGridlist: ElementProps<GridlistElement>;\r\n    propsGridlistLabel: ElementProps<LabelElement>;\r\n    context: UseGridlistContext<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>;\r\n}\r\nexport interface UseGridlistRowReturnType<GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends OmitStrong<UseCompleteGridNavigationRowReturnType<GridlistRowElement, GridlistCellElement, RM, CM>, never> {\r\n\r\n}\r\n\r\nexport interface UseGridlistRowParametersSelf {\r\n    /**\r\n     * When the `selectionLimit` is `\"single\"`, this must be `null`.\r\n     */\r\n    selected: boolean | null;\r\n}\r\n\r\nexport interface UseGridlistRowParameters<GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends\r\n    OmitStrong<UseCompleteGridNavigationRowParameters<GridlistRowElement, GridlistCellElement, RM, CM>, never> {\r\n\r\n    context: UseGridlistContext<any, GridlistRowElement, GridlistCellElement, RM, CM>;\r\n    gridlistRowParameters: UseGridlistRowParametersSelf;\r\n}\r\n\r\n\r\nexport interface UseGridlistCellReturnType<GridlistCellElement extends Element, CM extends GridlistCellInfo<GridlistCellElement>> extends OmitStrong<ExtendMerge<UseCompleteGridNavigationCellReturnType<GridlistCellElement, CM>, Pick<UsePressReturnType<GridlistCellElement>, \"pressReturn\">>, \"props\"> {\r\n    propsCell: ElementProps<GridlistCellElement>;\r\n    propsTabbable: ElementProps<any>;\r\n    propsPress: ElementProps<any>;\r\n}\r\nexport interface UseGridlistCellParameters<GridlistCellElement extends Element, CM extends GridlistCellInfo<GridlistCellElement>> extends\r\n    UseCompleteGridNavigationCellParameters<GridlistCellElement, CM>,\r\n    TargetedPick<UsePressParameters<GridlistCellElement>, \"pressParameters\", \"longPressThreshold\" | \"onPressingChange\" | \"onPressSync\"> {\r\n\r\n}\r\n\r\nexport interface GridlistRowInfo<GridlistRowElement extends Element, GridlistCellElement extends Element> extends UseCompleteGridNavigationRowInfo<GridlistRowElement, GridlistCellElement> { }\r\nexport interface GridlistCellInfo<GridlistCellElement extends Element> extends UseCompleteGridNavigationCellInfo<GridlistCellElement> { }\r\n\r\n/**\r\n * Implements a gridlist, which is a hybrid of a [Listbox](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/) and a [Grid](https://www.w3.org/WAI/ARIA/apg/patterns/grid/).\r\n * \r\n * @remarks A Listbox is a very limited structure, essentially being just a list with no further interactive content allowed.\r\n * \r\n * If you need a list where each list item has a menu or a button or other non-text content, a Gridlist is probably what you want.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useGridlistRow}\r\n * @hasChild {@link useGridlistCell}\r\n */\r\nexport function useGridlist<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement> = GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement> = GridlistCellInfo<GridlistCellElement>>({\r\n    labelParameters,\r\n\r\n    listboxParameters: { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange },\r\n    rovingTabIndexParameters,\r\n    ...restParams\r\n}: UseGridlistParameters<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>): UseGridlistReturnType<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM> {\r\n\r\n    monitorCallCount(useGridlist);\r\n\r\n    const {\r\n        propsInput: propsLabelList,\r\n        propsLabel: propsLabelLabel,\r\n        randomIdInputReturn: { id: _gridlistId },\r\n        randomIdLabelReturn: { id: _labelId }\r\n    } = useLabelSynthetic<GridlistElement, LabelElement>({\r\n        labelParameters: {\r\n            ...labelParameters,\r\n            onLabelClick: useStableCallback(() => {\r\n                rovingTabIndexReturn.focusSelf();\r\n            })\r\n        },\r\n        randomIdInputParameters: { prefix: Prefices.gridlist },\r\n        randomIdLabelParameters: { prefix: Prefices.gridlistLabel }\r\n    });\r\n    const {\r\n        context,\r\n        props,\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        ...restRet\r\n    } = useCompleteGridNavigationDeclarative<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>({\r\n        singleSelectionDeclarativeParameters: { selectedIndex: selectedIndex, onSelectedIndexChange },\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, focusSelfParent: focus },\r\n        ...restParams\r\n    });\r\n\r\n    let propsGridlist = useMergedProps(props, propsLabelList, { \"aria-multiselectable\": (selectionLimit == \"multi\" ? \"true\" : undefined) });\r\n\r\n\r\n    let fullContext = useMemoObject({\r\n        ...context,\r\n        gridlistRowContext: useMemoObject({\r\n            selectionLimit\r\n        })\r\n    });\r\n    if (groupingType == \"group\")\r\n        propsGridlist.role = \"group\";\r\n    else if (groupingType == \"with-groups\") {\r\n        // Intentionally clobbering all the list navigation stuff.\r\n        propsGridlist = { role: \"grid\" };\r\n        // ...actually, context too while we're at it.\r\n        fullContext = null!\r\n    }\r\n    else {\r\n        propsGridlist.role = \"grid\";\r\n    }\r\n\r\n    if (selectionLimit == \"multi\")\r\n        console.assert(singleSelectionReturn.getSelectedIndex() == null)\r\n\r\n    return {\r\n        context: fullContext,\r\n        rovingTabIndexReturn,\r\n        propsGridlist,\r\n        propsGridlistLabel: propsLabelLabel,\r\n        ...restRet\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n * \r\n */\r\nexport function useGridlistRow<GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement> = GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement> = GridlistCellInfo<GridlistCellElement>>({\r\n    gridlistRowParameters: { selected },\r\n    linearNavigationParameters,\r\n    context: cx1,\r\n    info,\r\n    rovingTabIndexParameters,\r\n    textContentParameters,\r\n    typeaheadNavigationParameters,\r\n    ...void1\r\n}: UseGridlistRowParameters<GridlistRowElement, GridlistCellElement, RM, CM>): UseGridlistRowReturnType<GridlistRowElement, GridlistCellElement, RM, CM> {\r\n    monitorCallCount(useGridlistRow);\r\n\r\n    const { gridlistRowContext: { selectionLimit } } = cx1;\r\n    const {\r\n        context: cx2,\r\n        hasCurrentFocusReturn,\r\n        linearNavigationReturn,\r\n        managedChildReturn,\r\n        managedChildrenReturn,\r\n        paginatedChildReturn,\r\n        props,\r\n        rovingTabIndexChildReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionChildReturn,\r\n        staggeredChildReturn,\r\n        textContentReturn,\r\n        typeaheadNavigationReturn,\r\n        pressParameters,\r\n        ...void2\r\n\r\n    } = useCompleteGridNavigationRow<GridlistRowElement, GridlistCellElement, RM, CM>({\r\n        linearNavigationParameters,\r\n        info,\r\n        context: cx1,\r\n        rovingTabIndexParameters,\r\n        textContentParameters,\r\n        typeaheadNavigationParameters,\r\n    });\r\n\r\n    // `selected` should only be true/false for multi-selection\r\n    if (selectionLimit != \"multi\")\r\n        console.assert(selected == null);\r\n\r\n    props.role = \"row\";\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    return {\r\n        pressParameters,\r\n        linearNavigationReturn,\r\n        managedChildrenReturn,\r\n        managedChildReturn,\r\n        paginatedChildReturn,\r\n        rovingTabIndexChildReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionChildReturn,\r\n        staggeredChildReturn,\r\n        textContentReturn,\r\n        typeaheadNavigationReturn,\r\n        context: cx2,\r\n        hasCurrentFocusReturn,\r\n        props\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n * \r\n */\r\nexport function useGridlistCell<GridlistCellElement extends Element, CM extends GridlistCellInfo<GridlistCellElement> = GridlistCellInfo<GridlistCellElement>>({ pressParameters: { onPressSync, longPressThreshold, onPressingChange, ...void1 }, ...p }: UseGridlistCellParameters<GridlistCellElement, CM>): UseGridlistCellReturnType<GridlistCellElement, CM> {\r\n    monitorCallCount(useGridlistCell);\r\n\r\n    const { props, ...info } = useCompleteGridNavigationCell<GridlistCellElement, CM>(p);\r\n\r\n    assertEmptyObject(void1);\r\n\r\n    const {\r\n        pressReturn,\r\n        props: propsPress\r\n    } = usePress({\r\n        pressParameters: { onPressSync, focusSelf: p.info.focusSelf, allowRepeatPresses: false, excludeEnter: null, excludePointer: null, excludeSpace: info.pressParameters.excludeSpace, longPressThreshold, onPressingChange },\r\n        refElementReturn: info.refElementReturn\r\n    })\r\n\r\n    return {\r\n        ...info,\r\n        propsPress,\r\n        propsCell: { role: \"gridcell\" },\r\n        propsTabbable: props,\r\n        pressReturn\r\n    }\r\n\r\n}\r\n\r\n/*interface UseGridlistSectionParameters {\r\n    gridlistSectionParameters: {\r\n        compareRows: (lhsIndex: number, rhsIndex: number) => number;\r\n    }\r\n    gridlistSectionContext: {\r\n\r\n    }\r\n}*/\r\n","import {\r\n    CompleteListNavigationContext,\r\n    ElementProps,\r\n    EventType,\r\n    TargetedOmit,\r\n    TargetedPick,\r\n    UseCompleteListNavigationChildInfo,\r\n    UseCompleteListNavigationChildParameters,\r\n    UseCompleteListNavigationChildReturnType,\r\n    UseCompleteListNavigationParameters,\r\n    UseCompleteListNavigationReturnType,\r\n    UsePressParameters,\r\n    UsePressReturnType, UseSingleSelectionDeclarativeParameters,\r\n    assertEmptyObject,\r\n    enhanceEvent,\r\n    focus, monitorCallCount, useCompleteListNavigationChild,\r\n    useCompleteListNavigationDeclarative,\r\n    useEnsureStability,\r\n    useMemoObject,\r\n    useMergedProps,\r\n    usePress,\r\n    useStableCallback\r\n} from \"preact-prop-helpers\";\r\nimport { EventDetail, OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelSyntheticParameters, useLabelSynthetic } from \"./use-label.js\";\r\n\r\nexport type ListboxSingleSelectEvent<E extends EventTarget> = { [EventDetail]: { selectedIndex: number } } & Pick<EventType<E, Event>, \"target\" | \"currentTarget\">;\r\nexport type ListboxMultiSelectEvent<E extends EventTarget> = { [EventDetail]: { selected: boolean } } & Pick<EventType<E, Event>, \"target\" | \"currentTarget\">;\r\n\r\nexport interface UseListboxContext<ListElement extends Element, ListItemElement extends Element, M extends ListboxInfo<ListItemElement>> extends CompleteListNavigationContext<ListElement, ListItemElement, M> {\r\n    listboxContext: { selectionLimit: \"single\" | \"multi\" | \"none\" }\r\n}\r\n\r\nexport interface UseListboxParametersSelf<ListElement extends Element, ListItemElement extends Element, _LabelElement extends Element, M extends ListboxInfo<ListItemElement>> {\r\n\r\n    orientation: \"horizontal\" | \"vertical\";\r\n\r\n    /**\r\n     * When `\"single\"`, the selected item is controlled\r\n     * via `selectedIndex`. When `\"multi\"`, the selected\r\n     * items are controlled by their individual `selected` props.\r\n     */\r\n    selectionLimit: \"single\" | \"multi\" | \"none\";\r\n\r\n    /**\r\n     * Only used when `groupingType` is `\"without-groups\"` or `\"group\"`\r\n     */\r\n    selectedIndex: number | null;\r\n    onSelectedIndexChange: UseSingleSelectionDeclarativeParameters[\"singleSelectionDeclarativeParameters\"][\"onSelectedIndexChange\"] //PassiveStateUpdater<number | null, Event> | null;\r\n\r\n    /**\r\n     * * `\"without-groups\"`: This is a listbox with no groups\r\n     * * `\"with-groups\"`: This is a listbox that is grouped into 2 or more labelled sections. In this case, **all navigation and selection is disabled** (meaning you can pass whatever you'd like to them, it's all ignored) and delegated to the child `group`s.\r\n     * * `\"group\"`: This is a group, contained within a listbox with `type==\"with-groups\"`\r\n     * \r\n     * There is currently no support for a mix of grouped and ungrouped options.\r\n     */\r\n    groupingType: \"with-groups\" | \"without-groups\" | \"group\";\r\n}\r\n\r\nexport interface UseListboxParameters<ListElement extends Element, ListItemElement extends Element, _LabelElement extends Element, M extends ListboxInfo<ListItemElement>> extends\r\n    OmitStrong<UseCompleteListNavigationParameters<ListElement, ListItemElement, M>, \"rovingTabIndexParameters\" | \"linearNavigationParameters\" | \"singleSelectionParameters\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ListElement, ListItemElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ListElement, ListItemElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">,\r\n    TargetedPick<UseCompleteListNavigationParameters<ListElement, ListItemElement, M>, \"singleSelectionParameters\", \"ariaPropName\" | \"selectionMode\"> {\r\n    listboxParameters: UseListboxParametersSelf<ListElement, ListItemElement, _LabelElement, M>;\r\n}\r\nexport interface UseListboxReturnType<ListElement extends Element, ListItemElement extends Element, LabelElement extends Element, M extends ListboxInfo<ListItemElement>> extends OmitStrong<UseCompleteListNavigationReturnType<ListElement, ListItemElement, M>, \"singleSelectionReturn\" | \"props\"> {\r\n    propsListbox: ElementProps<ListElement>;\r\n    propsListboxLabel: ElementProps<LabelElement>;\r\n    context: UseListboxContext<ListElement, ListItemElement, M>;\r\n}\r\nexport interface UseListboxItemReturnType<ListItemElement extends Element, M extends ListboxInfo<ListItemElement>> extends OmitStrong<UseCompleteListNavigationChildReturnType<ListItemElement, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">, UsePressReturnType<ListItemElement> { }\r\n\r\n\r\nexport interface UseListboxItemParametersSelf<ListItemElement extends Element> {\r\n    /**\r\n     * When the `selectionLimit` is `\"single\"`, this must be `null`.\r\n     */\r\n    selected: boolean | null;\r\n\r\n    onMultiSelect: null | ((e: ListboxMultiSelectEvent<ListItemElement>) => void);\r\n}\r\n\r\nexport interface UseListboxItemParameters<ListItemElement extends Element, M extends ListboxInfo<ListItemElement>> extends\r\n    UseCompleteListNavigationChildParameters<ListItemElement, M>,\r\n    TargetedOmit<UsePressParameters<ListItemElement>, \"pressParameters\", \"excludeSpace\" | \"onPressSync\"> {\r\n    listboxParameters: UseListboxItemParametersSelf<ListItemElement>;\r\n    context: UseListboxContext<any, ListItemElement, M>;\r\n}\r\n\r\nexport interface ListboxInfo<ListItemElement extends Element> extends UseCompleteListNavigationChildInfo<ListItemElement> {\r\n\r\n}\r\n\r\n/**\r\n * Implements a [Listbox](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/) pattern.\r\n * \r\n * @remarks A listbox is a very limited widget and its items cannot contain interactive or non-text content.\r\n * \r\n * @see {@link useGridlist} for a more capable list widget.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useListboxItem}\r\n */\r\nexport function useListbox<ListElement extends Element, ListItemElement extends Element, LabelElement extends Element, M extends ListboxInfo<ListItemElement> = ListboxInfo<ListItemElement>>({\r\n    labelParameters,\r\n    listboxParameters: { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange, orientation },\r\n    linearNavigationParameters,\r\n    singleSelectionParameters: { ariaPropName, selectionMode },\r\n    rovingTabIndexParameters,\r\n    ...restParams\r\n}: UseListboxParameters<ListElement, ListItemElement, LabelElement, M>): UseListboxReturnType<ListElement, ListItemElement, LabelElement, M> {\r\n    monitorCallCount(useListbox);\r\n    useEnsureStability(\"useListbox\", selectionLimit);\r\n\r\n    const {\r\n        propsInput: propsLabelList,\r\n        propsLabel: propsLabelLabel,\r\n        randomIdInputReturn: { id: _inputId },\r\n        randomIdLabelReturn: { id: _labelId }\r\n    } = useLabelSynthetic<ListElement, LabelElement>({\r\n        labelParameters: {\r\n            ...labelParameters,\r\n            onLabelClick: useStableCallback(() => {\r\n                rovingTabIndexReturn.focusSelf();\r\n            })\r\n        },\r\n        randomIdInputParameters: { prefix: Prefices.listbox },\r\n        randomIdLabelParameters: { prefix: Prefices.listboxLabel }\r\n    });\r\n    let {\r\n        context,\r\n        props: { ...props },\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        ...restRet\r\n    } = useCompleteListNavigationDeclarative<ListElement, ListItemElement, M>({\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, focusSelfParent: focus },\r\n        singleSelectionDeclarativeParameters: { selectedIndex, onSelectedIndexChange },\r\n        singleSelectionParameters: { ariaPropName: ariaPropName || \"aria-selected\", selectionMode: selectionMode },\r\n        linearNavigationParameters: { arrowKeyDirection: orientation, ...linearNavigationParameters },\r\n        ...restParams\r\n    });\r\n\r\n    if (groupingType == \"group\")\r\n        props.role = \"group\";\r\n    else if (groupingType == \"with-groups\") {\r\n        // Intentionally clobbering all the list navigation stuff.\r\n        props = { role: \"listbox\" };\r\n        // ...actually, context too while we're at it.\r\n        context = null!\r\n    }\r\n    else {\r\n        props.role = \"listbox\";\r\n    }\r\n\r\n    if (selectionLimit == \"multi\")\r\n        console.assert(singleSelectionReturn.getSelectedIndex() == null)\r\n\r\n    return {\r\n        ...restRet,\r\n        context: useMemoObject({\r\n            ...context,\r\n            listboxContext: useMemoObject({\r\n                selectionLimit\r\n            })\r\n        }),\r\n        rovingTabIndexReturn,\r\n        propsListbox: useMergedProps(props, propsLabelList, { \"aria-multiselectable\": (selectionLimit == \"multi\" ? \"true\" : undefined) }),\r\n        propsListboxLabel: propsLabelLabel\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useListboxItem<ListItemElement extends Element, M extends ListboxInfo<ListItemElement> = ListboxInfo<ListItemElement>>({\r\n    context: { listboxContext: { selectionLimit }, ...context },\r\n    listboxParameters: { selected, onMultiSelect },\r\n    pressParameters: { focusSelf, allowRepeatPresses, excludeEnter, excludePointer, longPressThreshold, onPressingChange, ...void1 },\r\n    ...restParams\r\n}: UseListboxItemParameters<ListItemElement, M>): UseListboxItemReturnType<ListItemElement, M> {\r\n    monitorCallCount(useListboxItem);\r\n\r\n    const {\r\n        propsChild,\r\n        propsTabbable,\r\n        refElementReturn,\r\n        pressParameters: { onPressSync, excludeSpace, ...void2 },\r\n        ...restRet\r\n    } = useCompleteListNavigationChild<ListItemElement, M>({\r\n        context,\r\n        ...restParams\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    if (selectionLimit == \"single\")\r\n        console.assert(selected == null);\r\n\r\n    propsChild.role = \"option\";\r\n    propsChild[\"aria-disabled\"] = restParams.info.unselectable ? \"true\" : undefined;\r\n\r\n    const { pressReturn, props: propsPress } = usePress<ListItemElement>({\r\n        refElementReturn, pressParameters: {\r\n            focusSelf,\r\n            onPressSync: useStableCallback((e) => {\r\n                onPressSync?.(e);\r\n                if (selectionLimit == \"multi\")\r\n                    onMultiSelect?.(enhanceEvent(e, { selected: !selected }));\r\n            }),\r\n            excludeSpace,\r\n            allowRepeatPresses,\r\n            excludeEnter,\r\n            excludePointer,\r\n            longPressThreshold,\r\n            onPressingChange\r\n        }\r\n    })\r\n\r\n    return {\r\n        pressReturn,\r\n        refElementReturn,\r\n        props: useMergedProps(propsChild, propsTabbable, propsPress),\r\n        ...restRet\r\n    }\r\n}\r\n","import { assertEmptyObject, ElementProps, findFirstFocusable, focus, monitorCallCount, TargetedOmit, useMergedProps, useModal, UseModalParameters, UseModalReturnType, useRefElement, useStableCallback, useStableGetter, useState, useTimeout } from \"preact-prop-helpers\";\r\nimport { useCallback } from \"preact/hooks\";\r\nimport { OmitStrong } from \"./props.js\";\r\n\r\nexport interface UseMenuSurfaceParametersSelf {\r\n    /**\r\n     * What role the surface fulfills.\r\n     * \r\n     * General menus should use \"menu\". \"dialog\" can be used for generic pop-up things.\r\n     */\r\n    role: \"dialog\" | \"menu\" | \"tree\" | \"grid\" | \"listbox\";\r\n\r\n    surfaceId: string;\r\n}\r\n\r\nexport interface UseMenuSurfaceParameters<_S extends Element, _B extends Element> extends\r\n    OmitStrong<UseModalParameters<\"escape\" | \"lost-focus\" | \"backdrop\">, \"focusTrapParameters\">,\r\n    TargetedOmit<UseModalParameters<\"escape\" | \"lost-focus\" | \"backdrop\">, \"focusTrapParameters\", \"trapActive\" | \"focusOpener\" | \"onlyMoveFocus\"> {\r\n    menuSurfaceParameters: UseMenuSurfaceParametersSelf;\r\n}\r\n\r\n\r\nexport interface UseMenuSurfaceReturnType<MenuSurfaceElement extends Element, MenuTargetElement extends Element, MenuTriggerElement extends Element> {\r\n    propsSurface: ElementProps<MenuSurfaceElement>;\r\n    propsTarget: ElementProps<MenuTargetElement>;\r\n    propsTrigger: ElementProps<MenuTriggerElement>;\r\n    propsSentinel: ElementProps<any>;\r\n    refElementPopupReturn: UseModalReturnType<null, MenuTriggerElement, MenuSurfaceElement>[\"refElementPopupReturn\"];\r\n    refElementSourceReturn: UseModalReturnType<null, MenuTriggerElement, MenuSurfaceElement>[\"refElementSourceReturn\"];\r\n}\r\n\r\n\r\n/**\r\n * A menu surface is what handles user interaction with an interactive but transient surface (like a menu or a popup).\r\n * \r\n * @remarks The keyboard (etc.) interactions are shared among a lot of widgets, and the opening button has some ARIA properties that need setting.\r\n * \r\n * Related to menus, which are a menu contained within a menu surface. Not related to menubars -- menus contain menubars, but not all menubars are contained within a menu or its surface.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useMenuSurface<MenuSurfaceElement extends Element, MenuTargetElement extends Element, MenuTriggerElement extends Element>({\r\n    dismissParameters,\r\n    escapeDismissParameters,\r\n    focusTrapParameters,\r\n    menuSurfaceParameters: { role, surfaceId, ...void1 },\r\n    ...void2\r\n}: UseMenuSurfaceParameters<MenuSurfaceElement, MenuTriggerElement>): UseMenuSurfaceReturnType<MenuSurfaceElement, MenuTargetElement, MenuTriggerElement> {\r\n    monitorCallCount(useMenuSurface);\r\n\r\n    const { refElementReturn: { getElement: getButtonElement }, propsStable: propsRefTrigger, ...void4 } = useRefElement<MenuTriggerElement>({ refElementParameters: { onElementChange: undefined } });\r\n\r\n    const { refElementReturn: { getElement: getMenuElement, ...void5 }, propsStable: propsRefSurface, ...void6 } = useRefElement<MenuSurfaceElement>({ refElementParameters: { onElementChange: undefined } });\r\n    const {\r\n        propsFocusContainer,\r\n        propsStablePopup: propsPopup,\r\n        propsStableSource: ps2,\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    } = useModal<\"escape\" | \"lost-focus\" | \"backdrop\", MenuSurfaceElement, MenuTriggerElement, MenuSurfaceElement>({\r\n        dismissParameters,\r\n        escapeDismissParameters,\r\n        focusTrapParameters: {\r\n            onlyMoveFocus: true,\r\n            trapActive: true,\r\n            focusOpener: useStableCallback(() => {\r\n                const buttonElement = getButtonElement() as HTMLElement | null;\r\n                focus(buttonElement);\r\n            }),\r\n            ...focusTrapParameters\r\n        }\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n\r\n    const propsSurface: ElementProps<MenuSurfaceElement> = useMergedProps(propsRefSurface, propsPopup, propsFocusContainer);\r\n\r\n    const propsTarget: ElementProps<MenuTargetElement> = useMergedProps({\r\n        role,\r\n        id: surfaceId\r\n    });\r\n\r\n    const propsTrigger: ElementProps<MenuTriggerElement> = useMergedProps({\r\n        \"aria-expanded\": (dismissParameters.open),\r\n        \"aria-haspopup\": role,\r\n    }, propsRefTrigger, ps2, { \"aria-controls\": surfaceId });\r\n\r\n    const propsSentinel: ElementProps<any> = useFocusSentinel({\r\n        focusSentinel: {\r\n            sendFocusToMenu: useCallback(() => { return focusTrapParameters.focusPopup(getMenuElement(), () => (findFirstFocusable(getMenuElement()!) as HTMLElement | null)) }, []),\r\n            onClose: useCallback(() => { dismissParameters.onClose(\"lost-focus\") }, [dismissParameters.onClose]),\r\n            open: dismissParameters.open\r\n        }\r\n    });\r\n\r\n    return {\r\n        propsSentinel,\r\n        propsSurface,\r\n        propsTarget,\r\n        propsTrigger,\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    }\r\n}\r\n\r\nexport interface UseFocusSentinelParameters {\r\n    focusSentinel: { sendFocusToMenu: () => void; open: boolean; onClose(): void; };\r\n}\r\n\r\n\r\n/**\r\n * A focus sentinal is a hidden but focusable element that comes at the start or end \r\n * of the out-of-place-focusable component that, when activated or focused over, closes the component\r\n * (if focused within 100ms of the open prop changing, instead of\r\n * closing, focusing the sentinel immediately asks it to focus itself).\r\n * This exists for things like menus which can have focus but also need a way to return\r\n * to whatever out-of-place parent they came from when naturally tabbed out of (as opposed\r\n * to dialogs which loop back around when tabbed out of). While mouse users can click out of a menu\r\n * and keyboard users can escape to close a menu, screen readers and other input methods \r\n * that don't use those two would become stuck.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useFocusSentinel<E extends Element>({ focusSentinel: { open, onClose, sendFocusToMenu } }: UseFocusSentinelParameters): ElementProps<E> {\r\n    monitorCallCount(useFocusSentinel);\r\n    const getSendFocusWithinMenu = useStableGetter(sendFocusToMenu);\r\n    const stableOnClose = useStableCallback(onClose);\r\n\r\n    const [sentinelIsActive, setSentinelIsActive] = useState(false);\r\n    useTimeout({ callback: () => { setSentinelIsActive(open); }, timeout: 100, triggerIndex: `${open}-${sentinelIsActive}` });\r\n\r\n\r\n    const onFocus = sentinelIsActive ? (() => stableOnClose()) : (() => getSendFocusWithinMenu()?.());\r\n    const onClick = () => stableOnClose();\r\n\r\n    return {\r\n        tabIndex: sentinelIsActive ? 0 : -1,\r\n        onFocus,\r\n        onClick\r\n    };\r\n}\r\n","import { CompleteListNavigationContext, ElementProps, JSX, MakeSingleSelectionDeclarativeParameters, MakeSingleSelectionDeclarativeReturnType, TargetedOmit, UseCompleteListNavigationChildInfo, UseCompleteListNavigationChildParameters, UseCompleteListNavigationChildReturnType, UseCompleteListNavigationParameters, UseCompleteListNavigationReturnType, UseRandomIdReturnType, focus, monitorCallCount, useCompleteListNavigationChild, useCompleteListNavigationDeclarative, useMemoObject, useMergedProps } from \"preact-prop-helpers\";\r\nimport { OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelSyntheticParameters, useLabelSynthetic } from \"./use-label.js\";\r\n\r\n\r\n\r\n\r\nexport interface UseToolbarParametersSelf<ContainerElement extends Element, ChildElement extends Element, M extends UseToolbarSubInfo<ChildElement>> {\r\n\r\n    orientation: \"horizontal\" | \"vertical\";\r\n\r\n    /**\r\n     * Should be \"toolbar\" for toolbars, \r\n     * `null` if someone else takes care of the role (TODO: it's still labelled in this case, what does this mean?), \r\n     * and whatever string is applicable otherwise.\r\n     */\r\n    role: JSX.AriaRole | null;\r\n\r\n    /**\r\n     * Optional; Only used if you need single selection logic.\r\n     */\r\n    selectedIndex: MakeSingleSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ContainerElement, ChildElement, M>>[\"singleSelectionDeclarativeParameters\"][\"selectedIndex\"];\r\n\r\n    /**\r\n     * Optional; Only used if you need single selection logic.\r\n     */\r\n    onSelectedIndexChange: MakeSingleSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ContainerElement, ChildElement, M>>[\"singleSelectionDeclarativeParameters\"][\"onSelectedIndexChange\"];\r\n\r\n    /**\r\n     * When true, none of the children will be selectable or focusable.\r\n     * \r\n     * The component itself will be made focusable instead (partially to ensure there's always something focusable in the case of e.g. a menu).\r\n     */\r\n    disabled: boolean;\r\n}\r\n\r\nexport interface UseToolbarParameters<ContainerElement extends Element, ChildElement extends Element, M extends UseToolbarSubInfo<ChildElement>> extends\r\n    OmitStrong<MakeSingleSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ContainerElement, ChildElement, M>>, \"rovingTabIndexParameters\" | \"singleSelectionDeclarativeParameters\" | \"paginatedChildrenParameters\" | \"linearNavigationParameters\" | \"singleSelectionReturn\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ContainerElement, ChildElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<ContainerElement, ChildElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\"> {\r\n    toolbarParameters: UseToolbarParametersSelf<ContainerElement, ChildElement, M>;\r\n}\r\n\r\nexport interface UseToolbarReturnType<ContainerElement extends Element, ChildElement extends Element, LabelElement extends Element, M extends UseToolbarSubInfo<ChildElement>> extends OmitStrong<MakeSingleSelectionDeclarativeReturnType<UseCompleteListNavigationReturnType<ContainerElement, ChildElement, M>>, \"props\"> {\r\n    propsToolbar: ElementProps<ContainerElement>;\r\n    propsLabel: ElementProps<LabelElement>;\r\n    randomIdInputReturn: UseRandomIdReturnType<ContainerElement, LabelElement>[\"randomIdReturn\"];\r\n    randomIdLabelReturn: UseRandomIdReturnType<LabelElement, ContainerElement>[\"randomIdReturn\"];\r\n    context: UseToolbarContext<ContainerElement, ChildElement, M>;\r\n}\r\n\r\nexport interface UseToolbarSubInfo<ChildElement extends Element> extends UseCompleteListNavigationChildInfo<ChildElement> {\r\n\r\n}\r\n\r\nexport interface UseToolbarContextSelf {}\r\n\r\nexport interface UseToolbarContext<ContainerElement extends Element, ChildElement extends Element, M extends UseToolbarSubInfo<ChildElement>> extends CompleteListNavigationContext<ContainerElement, ChildElement, M> {\r\n    toolbarContext: UseToolbarContextSelf;\r\n};\r\n\r\n\r\nexport interface UseToolbarChildParametersSelf { disabledProp: \"disabled\" | \"aria-disabled\"; }\r\n\r\nexport interface UseToolbarChildParameters<E extends Element, M extends UseToolbarSubInfo<E>> extends OmitStrong<UseCompleteListNavigationChildParameters<E, M>, never> {\r\n    toolbarChildParameters: UseToolbarChildParametersSelf;\r\n}\r\nexport interface UseToolbarChildReturnType<ChildElement extends Element, M extends UseToolbarSubInfo<ChildElement>> extends UseCompleteListNavigationChildReturnType<ChildElement, M> { }\r\n\r\n/**\r\n * Implements a [Toolbar](https://www.w3.org/WAI/ARIA/apg/patterns/toolbar/) pattern.\r\n * \r\n * @remarks A toolbar is just a collection of widgets in an expected order with a label (visible or hidden) and with the usual keyboard navigation stuff.\r\n * \r\n * The main difference between a toolbar and a menubar is that a menubar contains purely static menuitems, \r\n * but a toolbar is the more general case, being able to contain anything at all. \r\n * A menubar is implemented as a special case of a toolbar, and a menu is implemented as a specialized menubar.\r\n * \r\n * Either way, be sure to specify the role and orientation this toolbar has (role=toolbar if you're using this as an actual toolbar).\r\n * \r\n * @compositeParams\r\n */\r\nexport function useToolbar<ContainerElement extends Element, ChildElement extends Element, LabelElement extends Element, M extends UseToolbarSubInfo<ChildElement>>({\r\n    linearNavigationParameters,\r\n    toolbarParameters: { orientation, role, selectedIndex, onSelectedIndexChange, disabled },\r\n    labelParameters,\r\n    rovingTabIndexParameters,\r\n    ...listNavParameters\r\n}: UseToolbarParameters<ContainerElement, ChildElement, M>): UseToolbarReturnType<ContainerElement, ChildElement, LabelElement, M> {\r\n    monitorCallCount(useToolbar);\r\n\r\n    const {\r\n        context,\r\n        props,\r\n        ...listNavReturn\r\n    } = useCompleteListNavigationDeclarative<ContainerElement, ChildElement, M>({\r\n        ...listNavParameters,\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, untabbable: disabled, focusSelfParent: focus },\r\n        singleSelectionDeclarativeParameters: { selectedIndex, onSelectedIndexChange: disabled ? null : onSelectedIndexChange },\r\n        paginatedChildrenParameters: { paginationMax: null, paginationMin: null },\r\n        linearNavigationParameters: { ...linearNavigationParameters, arrowKeyDirection: orientation },\r\n    });\r\n\r\n    const { propsInput: propsToolbar, propsLabel, randomIdInputReturn, randomIdLabelReturn } = useLabelSynthetic<ContainerElement, LabelElement>({\r\n        labelParameters: { ...labelParameters, onLabelClick: listNavReturn.rovingTabIndexReturn.focusSelf },\r\n        randomIdInputParameters: { prefix: Prefices.toolbar },\r\n        randomIdLabelParameters: { prefix: Prefices.toolbarLabel }\r\n    });\r\n\r\n    // Note: We return tabIndex=-1 (when not disabled) because some browsers (at least Firefox) seem to add role=toolbar to the tab order?\r\n    // Probably needs a bit more digging because this feels like a bit of a blunt fix.\r\n    return {\r\n        context: useMemoObject({ ...context, toolbarContext: useMemoObject({}) }),\r\n        propsLabel,\r\n        propsToolbar: useMergedProps({\r\n            ...propsToolbar,\r\n            role: role ?? undefined,\r\n            tabIndex: disabled ? 0 : -1,\r\n            \"aria-disabled\": disabled ? \"true\" : undefined\r\n        }, props),\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n        ...listNavReturn\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useToolbarChild<ChildElement extends Element, M extends UseToolbarSubInfo<ChildElement>>({ info, toolbarChildParameters: { disabledProp }, ...args }: UseToolbarChildParameters<ChildElement, M>): UseToolbarChildReturnType<ChildElement, M> {\r\n    monitorCallCount(useToolbarChild);\r\n    const {\r\n        propsChild,\r\n        propsTabbable,\r\n        ...listNavReturn\r\n    } = useCompleteListNavigationChild<ChildElement, M>({ info, ...args });\r\n\r\n    return {\r\n        propsChild: useMergedProps(propsChild, { [disabledProp as never]: info.unselectable ? true : undefined }),\r\n        propsTabbable,\r\n        ...listNavReturn\r\n    }\r\n}","import { assertEmptyObject, ElementProps, focus, monitorCallCount, PressEventReason, returnFalse, TargetedPick, useMergedProps, usePress, UsePressParameters, UsePressReturnType, useStableCallback } from \"preact-prop-helpers\";\r\nimport { useCallback } from \"preact/hooks\";\r\nimport { OmitStrong } from \"./props.js\";\r\nimport { useToolbar, useToolbarChild, UseToolbarChildParameters, UseToolbarChildReturnType, UseToolbarContext, UseToolbarParameters, UseToolbarReturnType, UseToolbarSubInfo } from \"./use-toolbar.js\";\r\n\r\n\r\nexport interface UseMenubarContext<ContainerElement extends Element, ChildElement extends Element, M extends UseMenubarSubInfo<ChildElement>> extends UseToolbarContext<ContainerElement, ChildElement, M> { }\r\nexport interface UseMenubarSubInfo<ChildElement extends Element> extends UseToolbarSubInfo<ChildElement> { }\r\nexport interface UseMenubarParameters<MenuParentElement extends Element, MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends UseToolbarParameters<MenuParentElement, MenuItemElement, M> { }\r\n\r\nexport interface UseMenubarItemParametersSelf<MenuItemElement extends Element> {\r\n    role: \"menuitem\" | \"menuitemcheckbox\" | \"menuitemradio\";\r\n\r\n    /**\r\n     * Optional. Applies in addition to any single-selection behavior.\r\n     */\r\n    onPress: null | ((e: PressEventReason<MenuItemElement>) => void);\r\n}\r\n\r\nexport interface UseMenubarItemParameters<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends\r\n    OmitStrong<UseToolbarChildParameters<MenuItemElement, M>, \"toolbarChildParameters\">, \r\n    TargetedPick<UsePressParameters<MenuItemElement>, \"pressParameters\", \"onPressingChange\"> {\r\n    menuItemParameters: UseMenubarItemParametersSelf<MenuItemElement>;\r\n}\r\n\r\nexport interface UseMenubarReturnType<MenuParentElement extends Element, MenuItemElement extends Element, LabelElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends OmitStrong<UseToolbarReturnType<MenuParentElement, MenuItemElement, LabelElement, M>, \"propsToolbar\"> {\r\n    propsMenubar: ElementProps<MenuParentElement>;\r\n    context: UseMenubarContext<MenuParentElement, MenuItemElement, M>;\r\n}\r\nexport interface UseMenubarItemReturnType<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends OmitStrong<UseToolbarChildReturnType<MenuItemElement, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">, UsePressReturnType<MenuItemElement> { }\r\n\r\n/**\r\n * Implements a [Menubar](https://www.w3.org/WAI/ARIA/apg/patterns/menubar/) pattern.\r\n * \r\n * @remarks A menubar is identical to a toolbar, except that every item \r\n * in a menubar is a menuitem (or similar) and has some sort of \r\n * role and action when pressed besides just single selection (if applicable).\r\n * \r\n * (A toolbar child won't have a defined role, but every menubar child will)\r\n * \r\n * @compositeParams\r\n */\r\nexport function useMenubar<MenuParentElement extends Element, MenuItemElement extends Element, LabelElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>>(args: UseMenubarParameters<MenuParentElement, MenuItemElement, M>): UseMenubarReturnType<MenuParentElement, MenuItemElement, LabelElement, M> {\r\n\r\n    monitorCallCount(useMenubar);\r\n\r\n    const {\r\n        propsToolbar: propsMenubar,\r\n        ...restReturn\r\n    } = useToolbar<MenuParentElement, MenuItemElement, LabelElement, M>(args);\r\n\r\n    return {\r\n        propsMenubar,\r\n        ...restReturn\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useMenubarChild<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>>({\r\n    menuItemParameters: { onPress: opu, role },\r\n    pressParameters: { onPressingChange, ...void1 },\r\n    ...restParams\r\n}: UseMenubarItemParameters<MenuItemElement, M>): UseMenubarItemReturnType<MenuItemElement, M> {\r\n    monitorCallCount(useMenubarChild);\r\n\r\n    const focusSelf = useCallback((e: any) => focus(e as Element as HTMLElement), [])\r\n    assertEmptyObject(void1);\r\n    const {\r\n        propsChild,\r\n        propsTabbable,\r\n        pressParameters: { onPressSync, excludeSpace },\r\n        ...restRet\r\n    } = useToolbarChild<MenuItemElement, M>({\r\n        ...restParams,\r\n        toolbarChildParameters: { disabledProp: \"aria-disabled\" }\r\n    });\r\n\r\n    const { pressReturn, props: propsPress } = usePress<MenuItemElement>({\r\n        pressParameters: {\r\n            focusSelf,\r\n            excludeSpace,\r\n            onPressSync: useStableCallback((e) => {\r\n                onPressSync?.(e);\r\n                opu?.(e);\r\n            }),\r\n            allowRepeatPresses: false,\r\n            excludeEnter: returnFalse,\r\n            excludePointer: returnFalse,\r\n            longPressThreshold: null,\r\n            onPressingChange\r\n        }, refElementReturn: restRet.refElementReturn\r\n    });\r\n\r\n    propsChild.role = role;\r\n\r\n    return {\r\n        props: useMergedProps(propsChild, propsTabbable, propsPress),\r\n        pressReturn,\r\n        ...restRet\r\n    };\r\n}\r\n","import { TargetedOmit, monitorCallCount, useMemoObject, useMergedProps, useStableCallback } from \"preact-prop-helpers\";\r\nimport { OmitStrong } from \"./props.js\";\r\nimport { UseMenuSurfaceParameters, UseMenuSurfaceReturnType, useMenuSurface } from \"./use-menu-surface.js\";\r\nimport { UseMenubarContext, UseMenubarItemParameters, UseMenubarItemReturnType, UseMenubarParameters, UseMenubarReturnType, UseMenubarSubInfo, useMenubar, useMenubarChild } from \"./use-menubar.js\";\r\n\r\nexport interface UseMenuContext<ContainerElement extends Element, ChildElement extends Element, M extends UseMenubarSubInfo<ChildElement>> extends UseMenubarContext<ContainerElement, ChildElement, M> {\r\n    menu: { closeFromMenuItemClicked(): void; }\r\n}\r\nexport interface UseMenuParametersSelf {\r\n    /** This is called whenever the corresponding arrow key is pressed on the triggering button. */\r\n    onOpen(): void;\r\n\r\n    /**\r\n     * This is the **physical** direction that is pressed\r\n     * using the **arrow keys** on your keyboard.\r\n     * \r\n     * It has no effect on display, list navigation direction, etc.\r\n     * It solely controls the arrow key that's listened for.\r\n     */\r\n    openDirection: \"down\" | \"up\" | \"left\" | \"right\" | null;\r\n}\r\n\r\nexport interface UseMenuParameters<MenuSurfaceElement extends Element, MenuParentElement extends Element, MenuButtonElement extends Element, MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends\r\n    OmitStrong<UseMenubarParameters<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\" | \"labelParameters\">,\r\n    TargetedOmit<UseMenuSurfaceParameters<MenuSurfaceElement, MenuButtonElement>, \"menuSurfaceParameters\", \"role\" | \"surfaceId\">,\r\n    TargetedOmit<UseMenubarParameters<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\", \"role\">,\r\n    TargetedOmit<UseMenubarParameters<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\", \"role\"> {\r\n    dismissParameters: UseMenuSurfaceParameters<MenuSurfaceElement, MenuButtonElement>[\"dismissParameters\"] & {\r\n        onClose(reason: \"escape\" | \"backdrop\" | \"lost-focus\" | \"item-clicked\"): void;\r\n    }\r\n    escapeDismissParameters: UseMenuSurfaceParameters<MenuSurfaceElement, MenuButtonElement>[\"escapeDismissParameters\"];\r\n\r\n    menuParameters: UseMenuParametersSelf;\r\n}\r\nexport interface UseMenuItemParameters<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends UseMenubarItemParameters<MenuItemElement, M> {\r\n\r\n}\r\n\r\nexport interface UseMenuReturnType<MenuSurfaceElement extends Element, MenuParentElement extends Element, MenuItemElement extends Element, MenuButtonElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends UseMenuSurfaceReturnType<MenuSurfaceElement, MenuParentElement, MenuButtonElement>, OmitStrong<UseMenubarReturnType<MenuParentElement, MenuItemElement, MenuButtonElement, M>, \"propsMenubar\" | \"propsLabel\"> {\r\n    context: UseMenuContext<MenuParentElement, MenuItemElement, M>;\r\n}\r\n\r\nexport interface MenuItemReturnTypeSelf {\r\n    /**\r\n     * When a menu item is clicked, it's often expected that the menu closes itself immediately after.\r\n     * \r\n     * Use this function to do so.\r\n     */\r\n    closeMenu(): void;\r\n}\r\n\r\nexport interface UseMenuItemReturnType<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends UseMenubarItemReturnType<MenuItemElement, M> {\r\n    menuItemReturn: MenuItemReturnTypeSelf;\r\n}\r\n\r\n/**\r\n * Implements the [Menu](https://www.w3.org/WAI/ARIA/apg/patterns/menubar/) and [Menu Button](https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/) patterns.\r\n * \r\n * @remarks A menu is a specialization of a menubar (something that handles navigation among a set of menuitems) \r\n * and a menu surface (something that handles moving focus to/from an unrelated area of the page).\r\n * \r\n * Additionally, pressing the arrow key that corresponds to the direction that the menu opens\r\n * in will open it.\r\n * \r\n * @compositeParams \r\n */\r\nexport function useMenu<MenuSurfaceElement extends Element, MenuParentElement extends Element, MenuItemElement extends Element, MenuButtonElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>>({\r\n    dismissParameters,\r\n    escapeDismissParameters,\r\n    menuParameters: { openDirection, onOpen },\r\n    menuSurfaceParameters,\r\n    toolbarParameters,\r\n    ...restParams\r\n}: UseMenuParameters<MenuSurfaceElement, MenuParentElement, MenuButtonElement, MenuItemElement, M>): UseMenuReturnType<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M> {\r\n\r\n    monitorCallCount(useMenu);\r\n\r\n    const {\r\n        context,\r\n        propsLabel: propsButtonAsMenuLabel,\r\n        propsMenubar,\r\n        randomIdInputReturn,\r\n        rovingTabIndexReturn,\r\n        ...restRet\r\n    } = useMenubar<MenuParentElement, MenuItemElement, MenuButtonElement, M>({\r\n        toolbarParameters: { role: \"menu\", ...toolbarParameters },\r\n        labelParameters: { ariaLabel: null },\r\n        ...restParams\r\n    });\r\n\r\n    const onKeyDown = useStableCallback((e: KeyboardEvent) => {\r\n        const isOpen = dismissParameters.open;\r\n        if (!isOpen) {\r\n            switch (e.key) {\r\n                case \"ArrowUp\": {\r\n                    if (openDirection == 'up') {\r\n                        onOpen();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ArrowDown\": {\r\n                    if (openDirection == 'down') {\r\n                        onOpen();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ArrowLeft\": {\r\n                    if (openDirection == 'left') {\r\n                        onOpen();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    break;\r\n                }\r\n                case \"ArrowRight\": {\r\n                    if (openDirection == 'right') {\r\n                        onOpen();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    const {\r\n        propsTarget,\r\n        propsTrigger,\r\n        refElementSourceReturn,\r\n        ...restRet2\r\n    } = useMenuSurface<MenuSurfaceElement, MenuParentElement, MenuButtonElement>({\r\n        menuSurfaceParameters: {\r\n            ...menuSurfaceParameters,\r\n            surfaceId: randomIdInputReturn.id,\r\n            role: \"menu\",\r\n        },\r\n        dismissParameters,\r\n        escapeDismissParameters,\r\n        focusTrapParameters: {\r\n            focusPopup: () => { rovingTabIndexReturn.focusSelf() }\r\n        }\r\n    });\r\n\r\n\r\n    return {\r\n        ...restRet,\r\n        ...restRet2,\r\n        context: useMemoObject({\r\n            ...context,\r\n            menu: useMemoObject({\r\n                closeFromMenuItemClicked: useStableCallback(() => {\r\n                    dismissParameters.onClose(\"item-clicked\");\r\n                })\r\n            })\r\n        }),\r\n        refElementSourceReturn,\r\n        rovingTabIndexReturn,\r\n        randomIdInputReturn,\r\n        propsTarget: useMergedProps(propsTarget, propsMenubar),\r\n        propsTrigger: useMergedProps({ onKeyDown }, propsTrigger, propsButtonAsMenuLabel),\r\n    }\r\n}\r\n\r\nexport interface UseMenuItemParameters<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends UseMenubarItemParameters<MenuItemElement, M> {\r\n    context: UseMenuContext<any, MenuItemElement, M>;\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useMenuItem<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>>(p: UseMenuItemParameters<MenuItemElement, M>): UseMenuItemReturnType<MenuItemElement, M> {\r\n    monitorCallCount(useMenuItem);\r\n\r\n    const ret = useMenubarChild<MenuItemElement, M>(p);\r\n\r\n    return {\r\n        ...ret,\r\n        menuItemReturn: { closeMenu: p.context.menu.closeFromMenuItemClicked }\r\n    }\r\n}\r\n","import { createContext, monitorCallCount, usePortalChildren, VNode } from \"preact-prop-helpers\";\r\nimport { useCallback, useMemo } from \"preact/hooks\";\r\nimport { useContextWithWarning } from \"./props.js\";\r\n\r\nexport interface NotificationProviderProps {\r\n    targetAssertive: string | Element;\r\n    targetPolite: string | Element;\r\n}\r\n\r\nexport interface NotificationProviderReturnType {\r\n    children: VNode;\r\n    context: NotificationProviderContext;\r\n}\r\n\r\nexport interface NotificationProviderContext {\r\n    notify(mode: \"polite\" | \"assertive\", content: VNode): void;\r\n}\r\n\r\nexport const NotificationProviderContext = createContext<NotificationProviderContext>(null!);\r\n\r\n/**\r\n * Allows children to send notifications to a screen reader or other assistive technology.\r\n * \r\n * Please note that because some devices only check for `aria-live` regions *once* on page load,\r\n * they cannot be created dynamically. You must pass the ID of the **already-existing** elements to use (or the elements themselves).\r\n * \r\n * One *must* have `aria-live=polite` and one *must* have `aria-live=assertive`, but there aren't really any other requirements. \r\n * They shouldn't be visible, I suppose.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useNotify}\r\n */\r\nexport function useNotificationProvider({ targetAssertive, targetPolite }: NotificationProviderProps) {\r\n    monitorCallCount(useNotificationProvider);\r\n\r\n    const { children: childrenPolite, pushChild: notifyPolite, portalElement: politeElement } = usePortalChildren({ target: targetPolite });\r\n    const { children: childrenAssertive, pushChild: notifyAssertive, portalElement: assertiveElement } = usePortalChildren({ target: targetAssertive });\r\n    console.assert(politeElement?.getAttribute(\"aria-live\") == \"polite\");\r\n    console.assert(assertiveElement?.getAttribute(\"aria-live\") == \"assertive\");\r\n\r\n    const notify = useCallback((mode: \"polite\" | \"assertive\", child: VNode) => {\r\n        return mode == \"assertive\" ? notifyAssertive(child) : notifyPolite(child);\r\n    }, [notifyAssertive, notifyPolite])\r\n\r\n    return {\r\n        notify,\r\n        context: useMemo(() => ({ notify }), [notify]),\r\n        children: (\r\n            <>\r\n                {childrenPolite}\r\n                {childrenAssertive}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport function useNotify() {\r\n    monitorCallCount(useNotify);\r\n\r\n    return useContextWithWarning(NotificationProviderContext, \"notification provider\").notify;\r\n}\r\n","import { assertEmptyObject, ElementProps, monitorCallCount, TargetedOmit, TargetedPick, useAsyncHandler, UseAsyncHandlerParameters, UseAsyncHandlerReturnType, useMergedProps } from \"preact-prop-helpers\";\r\nimport { ElementToTag, OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelReturnType, useLabelSynthetic, UseLabelSyntheticParameters } from \"./use-label.js\";\r\n\r\n\r\nexport interface UseProgressParametersSelf<IndicatorElement extends Element> {\r\n    max: number;\r\n    value: number | \"indeterminate\" | \"disabled\";\r\n    valueText: string | null;\r\n    tagIndicator: ElementToTag<IndicatorElement>;\r\n}\r\n\r\nexport interface UseProgressParameters<IndicatorElement extends Element, _LabelElement extends Element> extends\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\"> {\r\n    progressIndicatorParameters: UseProgressParametersSelf<IndicatorElement>;\r\n}\r\n\r\nexport interface UseProgressReturnType<ProgressElement extends Element, ProgressLabelElement extends Element> extends OmitStrong<UseLabelReturnType<ProgressElement, ProgressLabelElement>, \"propsInput\" | \"propsLabel\"> {\r\n    propsIndicator: ElementProps<ProgressElement>;\r\n    propsLabel: ElementProps<ProgressLabelElement>;\r\n    propsRegion: ElementProps<any>;\r\n}\r\n\r\n/**\r\n * Provides the attributes and roles for a progress bar.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useProgress<ProgressElement extends Element, LabelElement extends Element>({\r\n    labelParameters,\r\n    progressIndicatorParameters: {\r\n        max,\r\n        value,\r\n        valueText,\r\n        tagIndicator,\r\n        ...void1\r\n    },\r\n    ...void2\r\n}: UseProgressParameters<ProgressElement, LabelElement>): UseProgressReturnType<ProgressElement, LabelElement> {\r\n\r\n    monitorCallCount(useProgress);\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel,\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n        pressReturn,\r\n        ...void3\r\n    } = useLabelSynthetic<ProgressElement, LabelElement>({\r\n        labelParameters: { ...labelParameters, onLabelClick: null },\r\n        randomIdInputParameters: { prefix: Prefices.progressIndicator },\r\n        randomIdLabelParameters: { prefix: Prefices.progressLabel }\r\n    });\r\n\r\n    // This isn't an input in the usual sense -- it's not tabbable.\r\n    // TODO: Make this an option in the hook itself\r\n    propsInput.tabIndex = -1;\r\n\r\n    const busy = value && value != \"disabled\"; //value == \"disabled\" || !value? false : true;// (!!value);\r\n    const disabled = (value == \"disabled\");\r\n    if (typeof value != \"number\") {\r\n        value = null!;\r\n        max ??= 100;\r\n    }\r\n    const indicatorProps: ElementProps<ProgressElement> = tagIndicator === \"progress\" ?\r\n        {\r\n            max,\r\n            value: (value ?? undefined),\r\n            \"aria-valuemin\": 0,\r\n            \"aria-valuenow\": value == null ? undefined : value,\r\n        } satisfies ElementProps<ProgressElement>\r\n        :\r\n        {\r\n            \"aria-valuemin\": 0,\r\n            \"aria-valuemax\": max == null ? undefined : max,\r\n            \"aria-valuetext\": valueText == null ? undefined : `${valueText}`,\r\n            \"aria-valuenow\": value == null ? undefined : value,\r\n            role: \"progressbar\"\r\n        } satisfies ElementProps<ProgressElement>;\r\n\r\n    if (disabled) {\r\n        indicatorProps[\"aria-hidden\"] = true;\r\n    }\r\n\r\n    const labelProps: ElementProps<LabelElement> = {\r\n        \"aria-hidden\": (!busy ? \"true\" : undefined)\r\n    };\r\n\r\n    const regionProps: ElementProps<any> = {\r\n        \"aria-busy\": !!(busy),\r\n        \"aria-describedby\": randomIdInputReturn.id\r\n    }\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    return {\r\n        propsIndicator: useMergedProps(indicatorProps, propsInput),\r\n        propsLabel: useMergedProps(labelProps, propsLabel),\r\n        propsRegion: regionProps,\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn,\r\n        pressReturn,\r\n    }\r\n}\r\n\r\nexport interface UseProgressWithHandlerParametersSelf {\r\n    forciblyPending: boolean | null;\r\n}\r\n\r\nexport interface UseProgressWithHandlerParameters<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element> extends\r\n    TargetedPick<UseProgressParameters<IndicatorElement, LabelElement>, \"progressIndicatorParameters\", \"tagIndicator\">,\r\n    Pick<UseProgressParameters<IndicatorElement, LabelElement>, \"labelParameters\"> {\r\n    progressWithHandlerParameters: UseProgressWithHandlerParametersSelf;\r\n    asyncHandlerParameters: UseAsyncHandlerParameters<EventType, CaptureType>;\r\n}\r\n\r\nexport interface UseProgressWithHandlerReturnType<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element> {\r\n    propsIndicator: UseProgressReturnType<IndicatorElement, LabelElement>[\"propsIndicator\"];\r\n    propsLabel: UseProgressReturnType<IndicatorElement, LabelElement>[\"propsLabel\"];\r\n    propsRegion: UseProgressReturnType<IndicatorElement, LabelElement>[\"propsRegion\"];\r\n    asyncHandlerReturn: UseAsyncHandlerReturnType<EventType, CaptureType>\r\n}\r\n\r\n/**\r\n * Provides props for a progress bar based on the progress of an async event handler.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useProgressWithHandler<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element>({\r\n    labelParameters,\r\n    progressIndicatorParameters,\r\n    asyncHandlerParameters,\r\n    progressWithHandlerParameters: { forciblyPending }\r\n}: UseProgressWithHandlerParameters<EventType, CaptureType, IndicatorElement, LabelElement>): UseProgressWithHandlerReturnType<EventType, CaptureType, IndicatorElement, LabelElement> {\r\n    monitorCallCount(useProgressWithHandler);\r\n\r\n    const asyncInfo = useAsyncHandler(asyncHandlerParameters);\r\n\r\n    const {\r\n        propsIndicator,\r\n        propsLabel,\r\n        propsRegion\r\n    } = useProgress<IndicatorElement, LabelElement>({\r\n        labelParameters,\r\n        progressIndicatorParameters: {\r\n            max: 1,\r\n            value: (forciblyPending || asyncInfo.pending) ? \"indeterminate\" : \"disabled\",\r\n            valueText: null,\r\n            ...progressIndicatorParameters\r\n        },\r\n    });\r\n\r\n    return {\r\n        propsIndicator,\r\n        propsLabel,\r\n        propsRegion,\r\n        asyncHandlerReturn: asyncInfo\r\n    }\r\n}\r\n\r\n\r\n","import { assertEmptyObject, CompleteListNavigationContext, ElementProps, EventDetail, EventType, focus, monitorCallCount, PressEventReason, TargetedOmit, useCompleteListNavigation, useCompleteListNavigationChild, UseCompleteListNavigationChildInfo, UseCompleteListNavigationChildParameters, UseCompleteListNavigationChildReturnType, UseCompleteListNavigationParameters, UseCompleteListNavigationReturnType, useMergedProps, useRefElement, useSingleSelectionDeclarative, useStableCallback, useStableGetter, useState } from \"preact-prop-helpers\";\r\nimport { useLayoutEffect, useMemo, useRef } from \"preact/hooks\";\r\nimport { EnhancedEventHandler, enhanceEvent, OmitStrong, Prefices, TargetedEnhancedEvent } from \"./props.js\";\r\nimport { useCheckboxLike, UseCheckboxLikeParameters, UseCheckboxLikeReturnType } from \"./use-checkbox-like.js\";\r\nimport { FocusableLabelElement, LabelPosition, useLabelSynthetic, UseLabelSyntheticParameters } from \"./use-label.js\";\r\n\r\nexport interface RadioChangeEventDetail<V extends number | string> { selectedValue: V | undefined };\r\n\r\nexport type TargetedRadioChangeEvent<V extends number | string> = TargetedEnhancedEvent<Event, RadioChangeEventDetail<V>>;\r\nexport type RadioChangeEventHandler<V extends number | string> = EnhancedEventHandler<Event, RadioChangeEventDetail<V>>;\r\n\r\nexport interface UseRadioGroupParametersSelf<V extends string | number> {\r\n    name: string;\r\n\r\n    selectedValue: V | null;\r\n    onSelectedValueChange: undefined | null | RadioChangeEventHandler<V>;\r\n}\r\n\r\nexport interface UseRadioGroupParameters<V extends string | number, GroupElement extends Element, _GroupLabelElement extends Element, TabbableChildElement extends Element, M extends RadioSubInfo<TabbableChildElement, V> = RadioSubInfo<TabbableChildElement, V>> extends \r\nOmitStrong<UseCompleteListNavigationParameters<GroupElement, TabbableChildElement, M>, \"rovingTabIndexParameters\" | \"paginatedChildrenParameters\" | \"singleSelectionParameters\">,\r\n    TargetedOmit<UseCompleteListNavigationParameters<GroupElement, TabbableChildElement, any>, \"rovingTabIndexParameters\", \"focusSelfParent\">,\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\"> {\r\n    radioGroupParameters: UseRadioGroupParametersSelf<V>;\r\n}\r\n\r\n\r\n\r\nexport interface UseRadioParametersSelf<V extends string | number> {\r\n    value: V;\r\n}\r\n\r\nexport interface UseRadioParameters<LP extends LabelPosition, V extends string | number, InputElement extends Element, LabelElement extends Element, M extends RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V>> extends\r\n    OmitStrong<UseCompleteListNavigationChildParameters<FocusableLabelElement<LP, InputElement, LabelElement>, M>, never>,\r\n    TargetedOmit<UseCheckboxLikeParameters<LP, InputElement, LabelElement>, \"labelParameters\", never>,\r\n    TargetedOmit<UseCheckboxLikeParameters<LP, InputElement, LabelElement>, \"pressParameters\", \"excludeSpace\">,\r\n    TargetedOmit<UseCheckboxLikeParameters<LP, InputElement, LabelElement>, \"checkboxLikeParameters\", \"checked\" | \"onInput\" | \"role\"> {\r\n    radioParameters: UseRadioParametersSelf<V>;\r\n    context: RadioContext<V, any, FocusableLabelElement<LP, InputElement, LabelElement>, M>; \r\n}\r\n\r\nexport interface RadioContextSelf<V extends number | string> {\r\n    name: string;\r\n    nameToIndex: Map<V, number>;\r\n    indexToName: Map<number, V>;\r\n}\r\n\r\nexport interface RadioContext<V extends number | string, ParentElement extends Element, ChildElement extends Element, M extends RadioSubInfo<ChildElement, V>> extends CompleteListNavigationContext<ParentElement, ChildElement, M> {\r\n    radioContext: RadioContextSelf<V>;\r\n}\r\n\r\n\r\n\r\nexport interface UseRadioGroupReturnTypeSelf {\r\n    selectedIndex: number | null;\r\n}\r\n\r\nexport interface UseRadioGroupReturnType<V extends string | number, GroupElement extends Element, GroupLabelElement extends Element, TabbableChildElement extends Element, M extends RadioSubInfo<TabbableChildElement, V> = RadioSubInfo<TabbableChildElement, V>> extends OmitStrong<UseCompleteListNavigationReturnType<GroupElement, TabbableChildElement, M>, \"props\"> {\r\n    radioGroupReturn: UseRadioGroupReturnTypeSelf;\r\n    propsRadioGroup: ElementProps<GroupElement>;\r\n    propsRadioGroupLabel: ElementProps<GroupLabelElement>;\r\n\r\n    // override\r\n    context: RadioContext<V, GroupElement, TabbableChildElement, M>;\r\n}\r\n\r\nexport interface RadioSubInfo<TabbableChildElement extends Element, V extends string | number> extends UseCompleteListNavigationChildInfo<TabbableChildElement> {\r\n    //getValue2(): V;\r\n}\r\n\r\n/**\r\n * Implements a [Radio Group](https://www.w3.org/WAI/ARIA/apg/patterns/radio/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useRadio}\r\n */\r\nexport function useRadioGroup<V extends string | number, G extends Element, GL extends Element, TCE extends Element, M extends RadioSubInfo<TCE, V> = RadioSubInfo<TCE, V>>({\r\n    labelParameters,\r\n    radioGroupParameters: { name, onSelectedValueChange, selectedValue },\r\n    rovingTabIndexParameters,\r\n    ...restParams\r\n}: UseRadioGroupParameters<V, G, GL, TCE, M>): UseRadioGroupReturnType<V, G, GL, TCE, M> {\r\n    monitorCallCount(useRadioGroup);\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState<number | null>(null);\r\n    const nameToIndex = useRef(new Map<V, number>());\r\n    const indexToName = useRef(new Map<number, V>());\r\n\r\n    const { propsInput: propsGroup1, propsLabel } = useLabelSynthetic<G, GL>({\r\n        labelParameters: {\r\n            onLabelClick: useStableCallback(() => {\r\n                rovingTabIndexReturn.focusSelf();\r\n            }),\r\n            ...labelParameters\r\n        },\r\n        randomIdLabelParameters: { prefix: Prefices.radioGroupLabel, },\r\n        randomIdInputParameters: { prefix: Prefices.radioGroup }\r\n    });\r\n\r\n    useLayoutEffect(() => {\r\n        if (selectedValue != null)\r\n            singleSelectionReturn.changeSelectedIndex(nameToIndex.current.get(selectedValue) ?? null);\r\n        else\r\n            singleSelectionReturn.changeSelectedIndex(null);\r\n    }, [selectedValue])\r\n\r\n    const {\r\n        context,\r\n        props: propsGroup2,\r\n        singleSelectionReturn,\r\n        managedChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        ...restRet\r\n    } = useCompleteListNavigation<G, TCE, M>({\r\n        singleSelectionParameters: { initiallySelectedIndex: selectedIndex, onSelectedIndexChange: useStableCallback((e) => { setSelectedIndex(e[EventDetail].selectedIndex); onSelectedIndexChange?.(e); }), selectionMode: \"focus\", ariaPropName: null },\r\n        paginatedChildrenParameters: { paginationMin: null, paginationMax: null },\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, focusSelfParent: focus },\r\n        ...restParams\r\n    });\r\n\r\n    const { singleSelectionParameters: { onSelectedIndexChange } } = useSingleSelectionDeclarative<G, TCE, M>({\r\n        singleSelectionReturn: {\r\n            changeSelectedIndex: useStableCallback((s, r) => {\r\n                singleSelectionReturn.changeSelectedIndex(s, r);\r\n\r\n                /*let next = typeof s == \"function\" ? s(selectedIndex) : s;\r\n                if (next != null) {\r\n                    const nextValue = indexToName.current.get(next); //managedChildrenReturn.getChildren().getAt(next)?.getValue2();\r\n                    onSelectedValueChange(nextValue as V, r);\r\n                }\r\n                else {\r\n                    onSelectedValueChange(null, r);\r\n                }*/\r\n            })\r\n        },\r\n        singleSelectionDeclarativeParameters: {\r\n            selectedIndex,\r\n            onSelectedIndexChange: useStableCallback((e) => {\r\n                let i = e[EventDetail].selectedIndex;\r\n                let value = i == undefined ? undefined : indexToName.current.get(i);\r\n                onSelectedValueChange?.(enhanceEvent(e, { selectedValue: value }));\r\n            })\r\n        }\r\n    })\r\n\r\n\r\n    const propsRadioGroup = useMergedProps(propsGroup1, propsGroup2, { role: \"radiogroup\" });\r\n\r\n    return {\r\n        propsRadioGroup,\r\n        propsRadioGroupLabel: propsLabel,\r\n        rovingTabIndexReturn,\r\n        context: useMemo(() => ({\r\n            ...context,\r\n            radioContext: { name, indexToName: indexToName.current, nameToIndex: nameToIndex.current }\r\n        }), [name]),\r\n        managedChildrenReturn,\r\n        radioGroupReturn: { selectedIndex },\r\n        singleSelectionReturn,\r\n        ...restRet,\r\n    }\r\n}\r\n\r\nexport interface UseRadioReturnType<LP extends LabelPosition, V extends string | number, I extends Element, IL extends Element, M extends RadioSubInfo<FocusableLabelElement<LP, I, IL>, V>> extends OmitStrong<UseCompleteListNavigationChildReturnType<FocusableLabelElement<LP, I, IL>, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">, UseCheckboxLikeReturnType<I, IL> {\r\n    propsInput: ElementProps<I>;\r\n    propsLabel: ElementProps<IL>;\r\n}\r\n\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useRadio<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element, V extends string | number, M extends RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V> = RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V>>({\r\n    radioParameters: { value },\r\n    checkboxLikeParameters: { disabled },\r\n    labelParameters,\r\n    info,\r\n    context,\r\n    textContentParameters,\r\n    pressParameters: { longPressThreshold, ...void3 },\r\n    ...void1\r\n\r\n}: UseRadioParameters<LP, V, InputElement, LabelElement, M>): UseRadioReturnType<LP, V, InputElement, LabelElement, M> {\r\n    monitorCallCount(useRadio);\r\n    type TabbableChildElement = FocusableLabelElement<LP, InputElement, LabelElement>;\r\n    const index = info.index;\r\n    const onInput = useStableCallback((e: EventType<InputElement, Event>) => {\r\n        onPressSync?.(e as PressEventReason<any>);\r\n    });\r\n\r\n    const { name, indexToName, nameToIndex } = context.radioContext\r\n\r\n    const { tagInput, labelPosition } = labelParameters;\r\n\r\n    const getValue = useStableGetter(value);\r\n    const {\r\n        propsChild: listNavigationSingleSelectionChildProps,\r\n        propsTabbable,\r\n        singleSelectionChildReturn,\r\n        pressParameters: { onPressSync, excludeSpace, ...void2 },\r\n        ...listNavRet\r\n    } = useCompleteListNavigationChild<TabbableChildElement, M>({\r\n        info,\r\n        context,\r\n        textContentParameters\r\n    });\r\n    \r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n\r\n    const { selected: checked } = singleSelectionChildReturn;\r\n\r\n    const { refElementReturn: refElementInputReturn, propsStable: propsRefInput } = useRefElement<InputElement>({ refElementParameters: {} });\r\n    const { refElementReturn: refElementLabelReturn, propsStable: propsRefLabel } = useRefElement<LabelElement>({ refElementParameters: {} });\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel,\r\n        ...checkboxLikeRet\r\n    } = useCheckboxLike<LabelPosition, InputElement, LabelElement>({\r\n        checkboxLikeParameters: {\r\n            checked: (checked ?? false),\r\n            disabled,\r\n            onInput: onInput,\r\n            role: \"radio\"\r\n        },\r\n        pressParameters: { excludeSpace, longPressThreshold },\r\n        labelParameters,\r\n        randomIdInputParameters: { prefix: Prefices.radio },\r\n        randomIdLabelParameters: { prefix: Prefices.radioLabel },\r\n        refElementInputReturn,\r\n        refElementLabelReturn\r\n    });\r\n    useLayoutEffect(() => {\r\n        nameToIndex.set(value, index);\r\n        indexToName.set(index, value);\r\n        return () => {\r\n            nameToIndex.delete(value);\r\n            indexToName.delete(index);\r\n        }\r\n    }, [value, index]);\r\n\r\n    if (tagInput == \"input\") {\r\n        propsInput.name = name;\r\n        propsInput.checked = (checked ?? false);\r\n        propsInput.type = \"radio\";\r\n    }\r\n    else {\r\n        propsInput[\"aria-checked\"] = (checked ?? false);\r\n    }\r\n\r\n    const propsIfInputHandlesFocus = useMergedProps<InputElement>(listNavigationSingleSelectionChildProps as ElementProps<any>, propsTabbable, propsInput);\r\n    const propsInput2: ElementProps<InputElement> = useMergedProps(propsRefInput, labelPosition != \"wrapping\" ? propsIfInputHandlesFocus : propsInput);\r\n\r\n    const propsIfLabelHandlesFocus = useMergedProps<LabelElement>(listNavigationSingleSelectionChildProps as ElementProps<any>, propsTabbable, propsLabel);\r\n    const propsLabel2: ElementProps<LabelElement> = useMergedProps(propsRefLabel, labelPosition == \"wrapping\" ? propsIfLabelHandlesFocus as any : propsLabel as any);\r\n\r\n    return {\r\n        propsInput: propsInput2,\r\n        propsLabel: propsLabel2,\r\n        singleSelectionChildReturn,\r\n        ...checkboxLikeRet,\r\n        ...listNavRet\r\n    }\r\n\r\n}","import { h } from \"preact\";\r\nimport { ElementProps, generateRandomId, ManagedChildInfo, monitorCallCount, useManagedChild, UseManagedChildParameters, useManagedChildren, UseManagedChildrenContext, UseManagedChildrenParameters, UseManagedChildrenReturnType, UseManagedChildReturnType } from \"preact-prop-helpers\";\r\nimport { useMemo, useRef } from \"preact/hooks\";\r\nimport { enhanceEvent, EventDetail, Prefices, TagSensitiveProps } from \"./props.js\";\r\n\r\n\r\n\r\n\r\nexport type RangeChangeEvent<E extends EventTarget> = { [EventDetail]: { value: number } } & Pick<h.JSX.TargetedEvent<E>, \"target\" | \"currentTarget\">;\r\n\r\nexport interface SliderThumbInfo extends ManagedChildInfo<number> {\r\n}\r\n\r\nexport interface UseSliderThumbParametersSelf<E extends Element> extends TagSensitiveProps<E> {\r\n    value: number;\r\n    valueText?: string;\r\n    onValueChange?: (e: RangeChangeEvent<E>) => void;\r\n    min?: number;\r\n    max?: number;\r\n\r\n    /**\r\n     * There's no, like, \"slider container\" for multi-thumb sliders defined,\r\n     * so each individual slider needs its own label.\r\n     * TODO: This is like a tab/tabpanel linking thing where each label is outside\r\n     * of the container. For now, it's easier to just \r\n     * assume a string-based label instead of an element-based one.\r\n     * \r\n     */\r\n    label: string;\r\n}\r\n\r\nexport interface UseSliderThumbParameters<E extends Element, M extends SliderThumbInfo> extends UseManagedChildParameters<M, \"index\"> {\r\n    sliderThumbParameters: UseSliderThumbParametersSelf<E>;\r\n    context: SliderContext<M>;\r\n}\r\n\r\n//export interface UseSliderThumbProps<E extends Element> extends ElementProps<E> {}\r\n\r\nexport interface UseSliderParametersSelf {\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport interface UseSliderParameters<M extends SliderThumbInfo> extends UseManagedChildrenParameters<M> {\r\n    sliderParameters: UseSliderParametersSelf;\r\n}\r\n\r\nexport interface UseSliderThumbReturnTypeSelf {\r\n    min: number;\r\n    max: number;\r\n}\r\n\r\nexport interface UseSliderThumbReturnType<E extends Element, M extends SliderThumbInfo> extends UseManagedChildReturnType<M> {\r\n    sliderThumbReturn: UseSliderThumbReturnTypeSelf;\r\n    propsSliderThumb: ElementProps<E>;\r\n}\r\n\r\n\r\n//export type UseSliderThumb<ThumbElement extends Element, M extends SliderThumbInfo> = (props: UseSliderThumbParameters<ThumbElement, M>) => UseSliderThumbReturnType<ThumbElement, M>;\r\n\r\nexport interface UseSliderReturnType<M extends SliderThumbInfo> extends UseManagedChildrenReturnType<M> {\r\n    context: SliderContext<M>;\r\n}\r\n\r\nexport interface SliderContextSelf {\r\n    min: number;\r\n    max: number;\r\n    baseId: string;\r\n}\r\n\r\nexport interface SliderContext<M extends SliderThumbInfo> extends UseManagedChildrenContext<M> {\r\n    sliderContext: SliderContextSelf;\r\n}\r\n\r\n\r\n/**\r\n * Implements a [Slider](https://www.w3.org/WAI/ARIA/apg/patterns/slider-multithumb/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useSliderThumb}\r\n */\r\nexport function useSlider<M extends SliderThumbInfo>({ sliderParameters: { max, min }, managedChildrenParameters }: UseSliderParameters<M>): UseSliderReturnType<M> {\r\n    monitorCallCount(useSlider);\r\n    const { context, managedChildrenReturn } = useManagedChildren<M>({ managedChildrenParameters });\r\n\r\n    const baseIdRef = useRef<string>(null! as \"\");\r\n    if (baseIdRef.current === null)\r\n        baseIdRef.current = generateRandomId(Prefices.sliderThumb);\r\n\r\n    return {\r\n        context: useMemo(() => ({\r\n            ...context,\r\n            sliderContext: {\r\n                min,\r\n                max,\r\n                baseId: baseIdRef.current\r\n            }\r\n        }), [min, max]),\r\n        managedChildrenReturn\r\n    };\r\n}\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useSliderThumb<ThumbElement extends Element, M extends SliderThumbInfo>({\r\n    info,\r\n    context: { sliderContext: { max: maxParent, min: minParent }, ...context },\r\n    sliderThumbParameters\r\n}: UseSliderThumbParameters<ThumbElement, M>): UseSliderThumbReturnType<ThumbElement, M> {\r\n    const { index } = info;\r\n    monitorCallCount(useSliderThumb);\r\n    const { managedChildReturn } = useManagedChild<M>({ info: info as M, context });\r\n    const { getChildren: _getThumbs } = managedChildReturn;\r\n\r\n    const { tag, value, max: maxOverride, min: minOverride, onValueChange, valueText, label } = sliderThumbParameters;\r\n\r\n    const min = (minOverride ?? minParent);\r\n    const max = (maxOverride ?? maxParent);\r\n\r\n    let newProps: ElementProps<ThumbElement> = (\r\n        tag == \"input\" ?\r\n            { min, max, value, type: \"range\" } :\r\n            { \"aria-valuemax\": max, \"aria-valuemin\": min, \"aria-valuenow\": value }\r\n    );\r\n    newProps = { ...newProps, \"aria-label\": label, \"aria-valuetext\": valueText, style: { \"--range-value\": `${value}`, \"--range-value-text\": `${valueText}` } };\r\n    if (tag == \"input\") {\r\n        newProps.onInput = e => {\r\n            onValueChange?.(enhanceEvent(e, { value: (e.currentTarget as Element as HTMLInputElement).valueAsNumber } ));\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Unimplemented\");\r\n    }\r\n\r\n    return {\r\n        sliderThumbReturn: {\r\n            min,\r\n            max\r\n        },\r\n        managedChildReturn,\r\n        propsSliderThumb: newProps\r\n    }\r\n}\r\n","import {\r\n    Compare,\r\n    CompleteGridNavigationCellContext,\r\n    CompleteGridNavigationRowContext,\r\n    ElementProps,\r\n    JSX,\r\n    PassiveStateUpdater,\r\n    TargetedOmit,\r\n    UseCompleteGridNavigationCellInfo, UseCompleteGridNavigationCellParameters, UseCompleteGridNavigationCellReturnType, UseCompleteGridNavigationParameters,\r\n    UseCompleteGridNavigationReturnType,\r\n    UseCompleteGridNavigationRowInfo, UseCompleteGridNavigationRowParameters, UseCompleteGridNavigationRowReturnType,\r\n    UseGridNavigationRowParameters,\r\n    assertEmptyObject,\r\n    focus,\r\n    monitorCallCount,\r\n    returnNull,\r\n    useCompleteGridNavigation,\r\n    useCompleteGridNavigationCell,\r\n    useCompleteGridNavigationRow,\r\n    useMemoObject,\r\n    useMergedProps, usePassiveState, useStableCallback\r\n} from \"preact-prop-helpers\";\r\nimport { useCallback, useEffect, useRef } from \"preact/hooks\";\r\nimport { ElementToTag, OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelSyntheticParameters, useLabelSynthetic } from \"./use-label.js\";\r\nimport { UseListboxParameters } from \"./use-listbox.js\";\r\n\r\nexport interface UseTableContextSelf {\r\n    setSortBodyFunction: PassiveStateUpdater<() => void, never>;\r\n    sortByColumn(column: number): SortInfo;\r\n    getCurrentSortColumn(): SortInfo;\r\n}\r\n\r\n\r\nexport interface UseTableContext {\r\n    tableContext: UseTableContextSelf;\r\n}\r\n\r\nexport interface UseTableSectionContext<TableSectionElement extends Element, TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>> extends CompleteGridNavigationRowContext<TableSectionElement, TableRowElement, TableCellElement, RM, CM>, UseTableContext { }\r\n\r\nexport interface UseTableSectionParametersSelf<TableSectionElement extends Element> {\r\n    location: \"head\" | \"body\" | \"foot\";\r\n    tagTableSection: ElementToTag<TableSectionElement>;\r\n}\r\n\r\nexport interface UseTableSectionParameters<TableSectionElement extends Element, TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>> extends\r\n    OmitStrong<UseCompleteGridNavigationParameters<TableSectionElement, TableRowElement, TableCellElement, RM>, \"rovingTabIndexParameters\" | \"sortableChildrenParameters\">,\r\n    TargetedOmit<UseCompleteGridNavigationParameters<TableSectionElement, TableRowElement, TableCellElement, RM>, \"rovingTabIndexParameters\", \"focusSelfParent\"> {\r\n    tableSectionParameters: UseTableSectionParametersSelf<TableSectionElement>;\r\n    context: UseTableContext;\r\n}\r\nexport interface UseTableSectionReturnType<TableSectionElement extends Element, TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>> extends OmitStrong<UseCompleteGridNavigationReturnType<TableSectionElement, TableRowElement, TableCellElement, RM, CM>, \"props\"> {\r\n    propsTableSection: ElementProps<TableSectionElement>;\r\n    context: UseTableSectionContext<TableSectionElement, TableRowElement, TableCellElement, RM, CM>;\r\n}\r\nexport interface UseTableRowReturnType<TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>> extends OmitStrong<UseCompleteGridNavigationRowReturnType<TableRowElement, TableCellElement, RM, CM>, \"context\"> {\r\n    context: UseTableRowContext<any, TableCellElement, CM>;\r\n}\r\nexport interface UseTableRowParametersSelf<TableRowElement extends Element> {\r\n    /**\r\n     * When the `selectionLimit` is `\"single\"`, this must be `null`.\r\n     */\r\n    selected: boolean | null;\r\n    tagTableRow: ElementToTag<TableRowElement>;\r\n}\r\nexport interface UseTableRowParameters<TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>> extends\r\n    OmitStrong<UseCompleteGridNavigationRowParameters<TableRowElement, TableCellElement, RM, CM>, \"rovingTabIndexParameters\" | \"typeaheadNavigationParameters\" | \"context\" | \"info\">,\r\n    TargetedOmit<UseGridNavigationRowParameters<TableRowElement, TableCellElement, RM, CM>, \"rovingTabIndexParameters\", never> {\r\n    context: UseTableSectionContext<any, TableRowElement, TableCellElement, RM, CM>;\r\n    tableRowParameters: UseTableRowParametersSelf<TableRowElement>;\r\n    info: Omit<UseCompleteGridNavigationRowParameters<TableRowElement, TableCellElement, RM, CM>[\"info\"], \"getSortValue\">;\r\n}\r\n\r\nexport interface UseTableRowContext<TableRowElement extends Element, TableCellElement extends Element, M extends TableCellInfo<TableCellElement>> extends CompleteGridNavigationCellContext<TableRowElement, TableCellElement, M> {\r\n    tableContext: UseTableContext[\"tableContext\"];\r\n}\r\n\r\n\r\nexport interface UseTableCellReturnTypeSelf {\r\n    sortByThisColumn(): SortInfo;\r\n}\r\n\r\nexport interface UseTableCellReturnType<TableCellElement extends Element, CM extends TableCellInfo<TableCellElement>> extends OmitStrong<UseCompleteGridNavigationCellReturnType<TableCellElement, CM>, \"props\"> {\r\n    propsCell: ElementProps<TableCellElement>;\r\n    propsFocus: ElementProps<any>;\r\n    tableCellReturn: UseTableCellReturnTypeSelf;\r\n}\r\nexport interface UseTableCellParametersSelf<TableCellElement extends Element> {\r\n    tagTableCell: ElementToTag<TableCellElement>;\r\n}\r\n\r\nexport interface UseTableCellParameters<TableCellElement extends Element, CM extends TableCellInfo<TableCellElement>> extends OmitStrong<UseCompleteGridNavigationCellParameters<TableCellElement, CM>, \"info\"> {\r\n    tableCellParameters: UseTableCellParametersSelf<TableCellElement>;\r\n    context: UseTableRowContext<any, TableCellElement, CM>;\r\n    info: OmitStrong<UseCompleteGridNavigationCellParameters<TableCellElement, CM>[\"info\"], never>;\r\n}\r\n\r\nexport interface TableRowInfo<TableRowElement extends Element, TableCellElement extends Element> extends UseCompleteGridNavigationRowInfo<TableRowElement, TableCellElement> { }\r\nexport interface TableCellInfo<TableCellElement extends Element> extends UseCompleteGridNavigationCellInfo<TableCellElement> {\r\n    getSortValue(): unknown;\r\n}\r\n\r\nexport interface UseTableParameters<TableElement extends Element, LabelElement extends Element> extends\r\n    TargetedOmit<UseLabelSyntheticParameters, \"labelParameters\", \"onLabelClick\"> {\r\n    tableParameters: UseTableParametersSelf<TableElement, LabelElement>;\r\n}\r\n\r\nexport interface UseTableParametersSelf<TableElement extends Element, LabelElement extends Element> extends Pick<UseListboxParameters<TableElement, any, LabelElement, any>[\"listboxParameters\"], \"selectionLimit\"> {\r\n    tagTable: ElementToTag<TableElement>;\r\n}\r\n\r\nexport interface UseTableReturnType<TableElement extends Element, LabelElement extends Element> {\r\n    propsTable: ElementProps<TableElement>;\r\n    propsLabel: ElementProps<LabelElement>;\r\n    context: UseTableContext;\r\n}\r\n\r\ninterface SortInfo { column: number, direction: \"ascending\" | \"descending\" }\r\n\r\n/**\r\n * Creates a sortable data table in a [Grid](https://www.w3.org/WAI/ARIA/apg/patterns/grid/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useTableSection}\r\n * @hasChild {@link useTableRow}\r\n * @hasChild {@link useTableCell}\r\n */\r\nexport function useTable<TableElement extends Element, LabelElement extends Element>({\r\n    labelParameters,\r\n    tableParameters: { selectionLimit, tagTable },\r\n}: UseTableParameters<TableElement, LabelElement>): UseTableReturnType<TableElement, LabelElement> {\r\n    monitorCallCount(useTable);\r\n\r\n    const [getSortBody, setSortBody] = usePassiveState<() => void, never>(null, returnNull as (() => never));\r\n    const sortQueue = useRef<number[]>([]);\r\n    const [getSortColumn, setSortColumn] = usePassiveState<SortInfo, Event>(useCallback((a: SortInfo) => { sortQueue.current.push(a.column); }, []), useCallback(() => { return { column: 0, direction: \"ascending\" } as const }, []))\r\n    const updateSortDirection = useCallback((column: number) => {\r\n        const { column: currentColumn, direction: currentDirection } = getSortColumn();\r\n        const next = { column, direction: column != currentColumn ? \"ascending\" : (currentDirection == \"ascending\" ? \"descending\" : \"ascending\") } as const;\r\n        setSortColumn(next);\r\n        return next;\r\n    }, []);\r\n    const sortByColumn = useCallback((column: number) => {\r\n        const next = updateSortDirection(column);\r\n        getSortBody()?.();\r\n        return next;\r\n    }, [])\r\n\r\n    const {\r\n        propsInput: propsLabelList,\r\n        propsLabel: propsLabelLabel\r\n    } = useLabelSynthetic<TableElement, LabelElement>({\r\n        labelParameters: { ...labelParameters, onLabelClick: null },\r\n        randomIdInputParameters: { prefix: Prefices.table },\r\n        randomIdLabelParameters: { prefix: Prefices.tableLabel }\r\n    });\r\n\r\n    return {\r\n        propsTable: useMergedProps({ role: tagTable == \"table\" ? undefined : \"grid\", \"aria-multiselectable\": (selectionLimit == \"multi\" ? \"true\" : undefined) }, propsLabelList),\r\n        propsLabel: propsLabelLabel,\r\n        context: useMemoObject({ tableContext: useMemoObject({ sortByColumn, setSortBodyFunction: setSortBody, getCurrentSortColumn: getSortColumn }) })\r\n    }\r\n}\r\nfunction fuzzyCompare(lhs: any, rhs: any): number {\r\n    if (lhs === rhs)\r\n        return 0;\r\n\r\n    if (lhs == null || rhs == null) {\r\n        if (lhs == null && rhs != null)\r\n            return -1;\r\n        if (lhs != null && rhs == null)\r\n            return 1;\r\n        if (lhs === null && rhs === undefined)\r\n            return 1;\r\n        if (lhs === undefined && rhs === null)\r\n            return -1;\r\n    }\r\n    else {\r\n        if (lhs == rhs)\r\n            return 0;\r\n        if (lhs < rhs)\r\n            return -1;\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n\r\n}\r\nconst naturalSectionTypes = new Set<keyof JSX.IntrinsicElements>([\"thead\", \"tbody\", \"tfoot\"]);\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useTableSection<TableSectionElement extends Element, TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>>({\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    singleSelectionParameters,\r\n    gridNavigationParameters,\r\n    rearrangeableChildrenParameters,\r\n    paginatedChildrenParameters,\r\n    staggeredChildrenParameters,\r\n    tableSectionParameters: { tagTableSection, location },\r\n    typeaheadNavigationParameters,\r\n    context: { tableContext }\r\n}: UseTableSectionParameters<TableSectionElement, TableRowElement, TableCellElement, RM>): UseTableSectionReturnType<TableSectionElement, TableRowElement, TableCellElement, RM, CM> {\r\n    monitorCallCount(useTableSection);\r\n\r\n    const {\r\n        childrenHaveFocusReturn,\r\n        context,\r\n        linearNavigationReturn,\r\n        managedChildrenReturn,\r\n        props: { ...props },\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        typeaheadNavigationReturn,\r\n        staggeredChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        paginatedChildrenReturn,\r\n        sortableChildrenReturn\r\n    } = useCompleteGridNavigation<TableSectionElement, TableRowElement, TableCellElement, RM, CM>({\r\n        linearNavigationParameters,\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, focusSelfParent: focus },\r\n        singleSelectionParameters,\r\n        paginatedChildrenParameters,\r\n        staggeredChildrenParameters,\r\n        sortableChildrenParameters: {\r\n            compare: useCallback<Compare<RM>>((lhs, rhs) => {\r\n                return fuzzyCompare(lhs?.getSortValue?.(), rhs?.getSortValue?.());\r\n            }, [])\r\n        },\r\n        typeaheadNavigationParameters,\r\n        gridNavigationParameters,\r\n        rearrangeableChildrenParameters,\r\n    });\r\n\r\n    if (!naturalSectionTypes.has(tagTableSection as any)) {\r\n        props.role = \"rowgroup\";\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (location == \"body\") {\r\n            tableContext.setSortBodyFunction(() => {\r\n                return () => { sortableChildrenReturn.sort(tableContext.getCurrentSortColumn().direction); }\r\n            })\r\n        }\r\n    });\r\n\r\n    return {\r\n        childrenHaveFocusReturn,\r\n        context: {\r\n            ...context,\r\n            tableContext\r\n        },\r\n        staggeredChildrenReturn,\r\n        linearNavigationReturn,\r\n        managedChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        rearrangeableChildrenReturn,\r\n        sortableChildrenReturn,\r\n        typeaheadNavigationReturn,\r\n        paginatedChildrenReturn,\r\n        propsTableSection: props\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useTableRow<TableRowElement extends Element, TableCellElement extends Element, RM extends TableRowInfo<TableRowElement, TableCellElement>, CM extends TableCellInfo<TableCellElement>>({\r\n    info,\r\n    textContentParameters,\r\n    context: cx1,\r\n    tableRowParameters: { selected },\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    ...void1\r\n\r\n}: UseTableRowParameters<TableRowElement, TableCellElement, RM, CM>): UseTableRowReturnType<TableRowElement, TableCellElement, RM, CM> {\r\n    monitorCallCount(useTableRow);\r\n    assertEmptyObject(void1);\r\n\r\n    const {\r\n        context: cx2,\r\n        managedChildrenReturn,\r\n        props: { ...props },\r\n        ...restRet\r\n\r\n        // props\r\n    } = useCompleteGridNavigationRow<TableRowElement, TableCellElement, RM, CM>({\r\n        textContentParameters,\r\n        context: { ...cx1 },\r\n        info: {\r\n            ...info,\r\n            getSortValue: useStableCallback((): unknown => {\r\n                const currentColumn = cx1.tableContext.getCurrentSortColumn().column;\r\n                const currentChild = managedChildrenReturn.getChildren().getAt(currentColumn ?? 0)\r\n                const sortValue = currentChild?.getSortValue();\r\n\r\n                return sortValue;\r\n            })\r\n        } as RM,\r\n        linearNavigationParameters,\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters },\r\n        typeaheadNavigationParameters: { noTypeahead: true, collator: null, typeaheadTimeout: Infinity, onNavigateTypeahead: null }\r\n    }\r\n    );\r\n\r\n    props.role = \"row\";\r\n    // TODO: Unneeded?\r\n    if (selected) {\r\n        switch (cx1.singleSelectionContext.ariaPropName) {\r\n            case \"aria-checked\":\r\n            case \"aria-pressed\":\r\n            case \"aria-selected\":\r\n                props[cx1.singleSelectionContext.ariaPropName ?? \"aria-selected\"] = \"true\";\r\n            default: {\r\n                console.assert(false, cx1.singleSelectionContext.ariaPropName + \" is not valid for multi-select -- prefer checked, selected, or pressed\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return {\r\n        context: useMemoObject({\r\n            ...cx2,\r\n            tableContext: cx1.tableContext\r\n        }),\r\n        props,\r\n        managedChildrenReturn,\r\n        ...restRet\r\n\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useTableCell<TableCellElement extends Element, CM extends TableCellInfo<TableCellElement>>({ tableCellParameters: { tagTableCell }, info, ...p }: UseTableCellParameters<TableCellElement, CM>): UseTableCellReturnType<TableCellElement, CM> {\r\n    monitorCallCount(useTableCell);\r\n\r\n    const { props, ...ret } = useCompleteGridNavigationCell<TableCellElement, CM>({\r\n        info,\r\n        ...p\r\n    });\r\n    return {\r\n        propsFocus: props,\r\n        propsCell: { role: (tagTableCell != \"th\" && tagTableCell != \"td\") ? \"gridcell\" : undefined },\r\n        ...ret,\r\n        tableCellReturn: {\r\n            sortByThisColumn: useStableCallback(() => {\r\n                return p.context.tableContext.sortByColumn(info.index);\r\n            }, [])\r\n        }\r\n    };\r\n}\r\n","import { CompleteListNavigationContext, ElementProps, EventType, ManagedChildInfo, OnChildrenMountChange, PersistentStates, TargetedOmit, UseCompleteListNavigationChildInfo, UseCompleteListNavigationChildParameters, UseCompleteListNavigationChildReturnType, UseCompleteListNavigationParameters, UseCompleteListNavigationReturnType, UseManagedChildParameters, UseManagedChildrenContext, UsePressParameters, UsePressReturnType, assertEmptyObject, focus, generateRandomId, monitorCallCount, returnFalse, returnTrue, useChildrenFlag, useCompleteListNavigation, useCompleteListNavigationChild, useManagedChild, useManagedChildren, useMemoObject, useMergedProps, usePersistentState, usePress, useStableCallback, useState } from \"preact-prop-helpers\";\r\nimport { useCallback, useLayoutEffect } from \"preact/hooks\";\r\nimport { EventDetail, OmitStrong, Prefices } from \"./props.js\";\r\nimport { UseLabelSyntheticParameters, useLabelSynthetic } from \"./use-label.js\";\r\n\r\n\r\nexport interface TabPanelInfo extends ManagedChildInfo<number> {\r\n    getVisible(): boolean;\r\n    setVisibleIndex: (newIndex: number | null, previousIndex: number | null) => void;\r\n}\r\n\r\nexport interface TabInfo<E extends Element> extends UseCompleteListNavigationChildInfo<E> { }\r\n\r\n\r\nexport type TabsChangeEvent<E extends Element> = { [EventDetail]: { selectedIndex: number } } & Pick<EventType<E, Event>, \"target\" | \"currentTarget\">;\r\n\r\nexport interface UseTabsParametersSelf {\r\n    localStorageKey: keyof PersistentStates | null;\r\n    orientation: \"horizontal\" | \"vertical\";\r\n    role?: \"tablist\" | string;\r\n}\r\n\r\nexport interface UseTabsParameters<TabContainerElement extends Element, TabElement extends Element, TabLabelElement extends Element, M extends TabInfo<TabElement>> extends \r\nUseTabListParameters<TabContainerElement, TabElement, M>,\r\nTargetedOmit<UseLabelSyntheticParameters,\"labelParameters\", \"onLabelClick\"> {\r\n    tabsParameters: UseTabsParametersSelf;\r\n}\r\nexport interface UseTabParameters<TabElement extends Element, M extends TabInfo<TabElement>> extends \r\nOmitStrong<UseCompleteListNavigationChildParameters<TabElement, M>, never>,\r\nTargetedOmit<UsePressParameters<TabElement>,\"pressParameters\",\"excludeEnter\" | \"excludePointer\" | \"excludeSpace\" | \"allowRepeatPresses\" | \"onPressSync\"> {\r\n    context: UseTabsContext<any, TabElement, M>;\r\n}\r\n\r\nexport interface UseTabPanelParameters<M extends TabPanelInfo> extends UseManagedChildParameters<M, \"index\"> {\r\n    context: UseTabPanelsContext<M>;\r\n}\r\n\r\nexport interface UseTabsContext<ParentElement extends Element, ChildElement extends Element, M extends TabInfo<ChildElement>> extends CompleteListNavigationContext<ParentElement, ChildElement, M> {\r\n    tabsContext: TC;\r\n}\r\n\r\nexport interface UseTabPanelsContext<M extends TabPanelInfo> extends UseManagedChildrenContext<M> {\r\n    tabPanelContext: TC;\r\n}\r\n\r\ninterface TC {\r\n    getVisibleIndex: () => number | null;\r\n    getPanelId: (index: number) => string;\r\n    getTabId: (index: number) => string;\r\n}\r\n\r\nexport interface UseTabReturnType<TabElement extends Element, M extends TabInfo<TabElement>> extends OmitStrong<UseCompleteListNavigationChildReturnType<TabElement, M>, \"pressParameters\" | \"propsChild\" | \"propsTabbable\">, UsePressReturnType<TabElement> {\r\n    props: ElementProps<TabElement>;\r\n }\r\n\r\n\r\nexport interface UseTabLabelParameters { }\r\nexport interface UseTabListParameters<TabContainerElement extends Element, TabElement extends Element, M extends TabInfo<TabElement>> extends \r\nOmitStrong<UseCompleteListNavigationParameters<TabContainerElement, TabElement, M>, \"rovingTabIndexParameters\" | \"paginatedChildrenParameters\" | \"linearNavigationParameters\" | \"singleSelectionParameters\">,\r\nTargetedOmit<UseCompleteListNavigationParameters<TabContainerElement, TabElement, M>,\"rovingTabIndexParameters\", \"focusSelfParent\">,\r\nTargetedOmit<UseCompleteListNavigationParameters<TabContainerElement, TabElement, M>,\"linearNavigationParameters\", \"arrowKeyDirection\">,\r\nTargetedOmit<UseCompleteListNavigationParameters<TabContainerElement, TabElement, M>,\"singleSelectionParameters\", \"ariaPropName\"> {\r\n\r\n}\r\nexport interface UseTabListReturnType<ParentElement extends Element, ChildElement extends Element, M extends TabInfo<ChildElement>> extends UseCompleteListNavigationReturnType<ParentElement, ChildElement, M> {\r\n}\r\nexport interface UseTabPanelReturnTypeSelf { \r\n    visibleOffset: number | null; \r\n    visible: boolean | null; \r\n    getVisible: () => boolean; \r\n}\r\n\r\nexport interface UseTabPanelReturnType<E extends Element> {\r\n    props: ElementProps<E>;\r\n    tabPanelReturn: UseTabPanelReturnTypeSelf;\r\n}\r\n\r\n\r\nexport interface UseTabListLabelReturnTypeInfo { }\r\nexport interface UseTabLabelReturnTypeWithHooks<LabelElement extends Element> extends UseTabListLabelReturnTypeInfo {\r\n    useTabListLabelProps: (props: ElementProps<LabelElement>) => ElementProps<LabelElement>;\r\n}\r\n\r\nexport interface UseTabsReturnType<TabContainerElement extends Element, TabElement extends Element, LabelElement extends Element, M extends TabInfo<TabElement>> extends OmitStrong<UseCompleteListNavigationReturnType<TabContainerElement, TabElement, M>, \"props\" | \"context\"> {\r\n    propsContainer: ElementProps<TabContainerElement>;\r\n    propsLabel: ElementProps<LabelElement>;\r\n    contextPanels: UseTabPanelsContext<TabPanelInfo>;\r\n    contextTabs: UseTabsContext<TabContainerElement, TabElement, M>;\r\n}\r\n\r\nexport type UseTab<_TabContainerElement extends Element, TabElement extends Element, M extends TabInfo<TabElement>> = (args: UseTabParameters<TabElement, M>) => UseTabReturnType<TabElement, M>;\r\nexport type UseTabList<TabContainerElement extends Element, TabElement extends Element, M extends TabInfo<TabElement>> = (args: UseTabListParameters<TabContainerElement, TabElement, M>) => UseTabListReturnType<TabContainerElement, TabElement, M>;\r\nexport type UseTabPanel<PanelElement extends Element, M extends TabPanelInfo> = (args: UseTabPanelParameters<M>) => UseTabPanelReturnType<PanelElement>;\r\nexport type UseTabListLabel<LabelElement extends Element> = (args: UseTabLabelParameters) => UseTabLabelReturnTypeWithHooks<LabelElement>;\r\n\r\n/**\r\n * Implements a [Tabs](https://www.w3.org/WAI/ARIA/apg/patterns/tabs/) pattern.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useTab}\r\n * @hasChild {@link useTabPanel}\r\n */\r\nexport function useTabs<TabListElement extends Element, TabElement extends Element, LabelElement extends Element, M extends TabInfo<TabElement>>({\r\n    labelParameters,\r\n    linearNavigationParameters,\r\n    singleSelectionParameters: { initiallySelectedIndex, onSelectedIndexChange: ssi, selectionMode, ...singleSelectionParameters },\r\n    tabsParameters: { orientation, role, localStorageKey },\r\n    rovingTabIndexParameters,\r\n    ...restParams\r\n}: UseTabsParameters<TabListElement, TabElement, LabelElement, M>): UseTabsReturnType<TabListElement, TabElement, LabelElement, M> {\r\n\r\n    monitorCallCount(useTabs);\r\n\r\n    const [localStorageIndex, setLocalStorageIndex] = usePersistentState<never, number | null>(localStorageKey ?? null, 0);\r\n    if (localStorageIndex != null)\r\n        initiallySelectedIndex = localStorageIndex;\r\n\r\n    const baseId = generateRandomId(\"aria-tabs-\");\r\n    const getTabId = useCallback((index: number) => { return baseId + \"-tab-\" + index; }, []);\r\n    const getPanelId = useCallback((index: number) => { return baseId + \"-panel-\" + index; }, []);\r\n\r\n    // Used for the panels, not the tabs in the tablist.\r\n    // Those are in useTabList itself.\r\n    const { context: managedChildContext, managedChildrenReturn: panelChildrenReturn } = useManagedChildren<TabPanelInfo>({\r\n        managedChildrenParameters: {\r\n\r\n            onChildrenMountChange: useStableCallback<OnChildrenMountChange<number>>((_m, _u) => { reevaluateClosestFit(); })\r\n        }\r\n    });\r\n\r\n    const { changeIndex: changeVisiblePanel, getCurrentIndex: getVisibleIndex, reevaluateClosestFit } = useChildrenFlag<TabPanelInfo, Event>({\r\n        getChildren: panelChildrenReturn.getChildren,\r\n        closestFit: false,\r\n        onClosestFit: null,\r\n        initialIndex: null,\r\n        getAt: useStableCallback((i) => { return i.getVisible() ?? false; /*getPanels().getAt(i)?.getVisible() ?? false)*/ }, []),\r\n        setAt: useStableCallback((i, b, n, p) => { return i.setVisibleIndex(n, p); /*(getPanels().getAt(i)?.setVisible(b));*/ }, []),\r\n        isValid: returnTrue,\r\n        onIndexChange: null\r\n    });\r\n\r\n    useLayoutEffect(() => {\r\n        changeVisiblePanel(initiallySelectedIndex ?? null);\r\n    }, [])\r\n\r\n    const {\r\n        propsInput,\r\n        propsLabel,\r\n        randomIdInputReturn: { id: _inputId },\r\n        randomIdLabelReturn: { id: _labelId },\r\n    } = useLabelSynthetic<TabListElement, LabelElement>({\r\n        labelParameters: { ...labelParameters, onLabelClick: useStableCallback(() => listNavRet1.rovingTabIndexReturn.focusSelf()) },\r\n        randomIdInputParameters: { prefix: Prefices.tablist },\r\n        randomIdLabelParameters: { prefix: Prefices.tablistLabel },\r\n    });\r\n\r\n\r\n    const {\r\n        props: listNavigationSingleSelectionProps,\r\n        context,\r\n        ...listNavRet1\r\n    } = useCompleteListNavigation<TabListElement, TabElement, M>({\r\n        linearNavigationParameters: { arrowKeyDirection: orientation, ...linearNavigationParameters },\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, focusSelfParent: focus },\r\n        singleSelectionParameters: {\r\n            onSelectedIndexChange: useStableCallback((e) => {\r\n                ssi?.(e);\r\n                changeVisiblePanel(e[EventDetail].selectedIndex);\r\n                setLocalStorageIndex(e[EventDetail].selectedIndex);\r\n                changeSelectedIndex(e[EventDetail].selectedIndex);\r\n            }),\r\n            ariaPropName: \"aria-selected\",\r\n            selectionMode: selectionMode ?? \"focus\",\r\n            initiallySelectedIndex: initiallySelectedIndex ?? null,\r\n            ...singleSelectionParameters\r\n        },\r\n        paginatedChildrenParameters: { paginationMax: null, paginationMin: null },\r\n        ...restParams\r\n    });\r\n\r\n\r\n    const { singleSelectionReturn: { changeSelectedIndex } } = listNavRet1;\r\n\r\n    return {\r\n        contextPanels: useMemoObject({\r\n            ...managedChildContext,\r\n            tabPanelContext: useMemoObject({\r\n                getPanelId,\r\n                getTabId,\r\n                getVisibleIndex,\r\n                setSelectedIndex: changeSelectedIndex\r\n            })\r\n        }),\r\n        contextTabs: useMemoObject({\r\n            ...context,\r\n            tabsContext: useMemoObject({ getTabId, getPanelId, getVisibleIndex, setSelectedIndex: changeSelectedIndex })\r\n        }),\r\n        propsContainer: useMergedProps(\r\n            listNavigationSingleSelectionProps,\r\n            propsInput,\r\n            {\r\n                role: (role ?? \"tablist\"),\r\n                \"aria-orientation\": orientation ?? \"horizontal\",\r\n            } as {}),\r\n        propsLabel,\r\n        ...listNavRet1\r\n    }\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useTab<TabElement extends Element, M extends TabInfo<TabElement>>({\r\n    info: { focusSelf: focusSelfParent, ...info },\r\n    textContentParameters,\r\n    pressParameters: { focusSelf: focusSelfChild, longPressThreshold, onPressingChange, ...void2 },\r\n    context\r\n}: UseTabParameters<TabElement, M>): UseTabReturnType<TabElement, M> {\r\n\r\n    const { propsChild: listNavigationSingleSelectionChildProps, propsTabbable, pressParameters: { onPressSync, excludeSpace, ...void1 }, refElementReturn, ...listNavRet2 } = useCompleteListNavigationChild({\r\n        context,\r\n        info: { focusSelf: focusSelfParent, ...info } as M,\r\n        textContentParameters,\r\n    });\r\n    \r\n    const { pressReturn, props: propsPressStable } = usePress<TabElement>({ pressParameters: { onPressSync, focusSelf: focusSelfChild, allowRepeatPresses: false, excludeEnter: returnFalse, excludePointer: returnFalse, excludeSpace: returnFalse, longPressThreshold, onPressingChange }, refElementReturn })\r\n    const { singleSelectionChildReturn: { selected }, rovingTabIndexChildReturn: { tabbable } } = listNavRet2;\r\n    const { getPanelId, getTabId } = context.tabsContext;\r\n\r\n    const panelId = getPanelId(info.index);\r\n    const tabId = getTabId(info.index);\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    monitorCallCount(useTab);\r\n    return {\r\n        pressReturn,\r\n        refElementReturn,\r\n        props: useMergedProps(\r\n            propsPressStable,\r\n            listNavigationSingleSelectionChildProps,\r\n            propsTabbable,\r\n            {\r\n                \"data-tabbable\": tabbable.toString(),\r\n                \"data-selected\": selected.toString(),\r\n                role: \"tab\",\r\n                \"aria-controls\": panelId,\r\n                id: tabId\r\n            } as {}),\r\n        ...listNavRet2\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useTabPanel<PanelElement extends Element, M extends TabPanelInfo>({ info, context }: UseTabPanelParameters<M>): UseTabPanelReturnType<PanelElement> {\r\n    const { index } = info;\r\n    monitorCallCount(useTabPanel);\r\n    const { tabPanelContext: { getVisibleIndex: g, getPanelId, getTabId } } = context;\r\n    //const [correspondingTabId, setCorrespondingTabId] = useState<string | null>(null);\r\n    const [lastKnownVisibleIndex, setLastKnownVisibleIndex, getLastKnownVisibleIndex] = useState(g());\r\n    const [isVisible, setIsVisible, getIsVisible] = useState(null as boolean | null);\r\n    //const visibleRef = useRef<ChildFlagOperations>({ get: getIsVisible, set: setIsVisible, isValid: returnTrue });\r\n    useManagedChild<TabPanelInfo>({\r\n        context, info: {\r\n            getVisible: useStableCallback(() => { return getLastKnownVisibleIndex() == index }),\r\n            setVisibleIndex: useStableCallback((newIndex, prevIndex) => {\r\n                // Similar logic is in singleSelection, but we need to duplicate it here\r\n                let changeIndex = (newIndex == index ? prevIndex : newIndex);\r\n                if (changeIndex != null)\r\n                    setLastKnownVisibleIndex(changeIndex);\r\n\r\n                if (newIndex == index) {\r\n                    setIsVisible(true);\r\n                }\r\n                else {\r\n                    setIsVisible(false);\r\n                }\r\n            }),\r\n            ...info\r\n        }\r\n    });\r\n    const panelId = getPanelId(info.index);\r\n    const tabId = getTabId(info.index);\r\n    //const isVisible = (lastKnownVisibleIndex === index);\r\n\r\n\r\n    return {\r\n        props: useMergedProps<PanelElement>({\r\n            role: \"tabpanel\",\r\n            \"aria-labelledby\": tabId,\r\n            id: panelId,\r\n            inert: !isVisible\r\n        } as {}),\r\n        tabPanelReturn: {\r\n            visibleOffset: lastKnownVisibleIndex == null ? null : (index - lastKnownVisibleIndex),\r\n            visible: isVisible,\r\n            getVisible: useStableCallback(() => { return getLastKnownVisibleIndex() === index; })\r\n        }\r\n    }\r\n}","import { ComponentChildren } from \"preact\";\r\nimport { ElementProps, ManagedChildInfo, UseManagedChildParameters, UseManagedChildrenContext, UseManagedChildrenParameters, UseManagedChildrenReturnType, findFirstFocusable, focus, monitorCallCount, useGlobalHandler, useManagedChild, useManagedChildren, useMergedProps, useRefElement, useStableCallback, useStableGetter, useState, useTimeout } from \"preact-prop-helpers\";\r\nimport { StateUpdater, useCallback, useEffect, useRef } from \"preact/hooks\";\r\nimport { OmitStrong } from \"./props.js\";\r\nimport { useNotify } from \"./use-notify.js\";\r\n\r\n\r\nexport interface UseToastsParametersSelf {\r\n    visibleCount: number;   // The maximum number of toasts that are shown at one time (used for automatic management of when to show toasts, i.e. don't show this toast if 2 are already on-screen -- 1 is a good default)\r\n}\r\n\r\nexport interface UseToastsParameters extends UseManagedChildrenParameters<ToastInfo> {\r\n    toastsParameters: UseToastsParametersSelf\r\n}\r\n\r\nexport interface UseToastParametersSelf {\r\n    politeness?: \"polite\" | \"assertive\";\r\n    timeout: number | null;\r\n    children: ComponentChildren;\r\n}\r\n\r\nexport interface UseToastParameters<M extends ToastInfo> extends UseManagedChildParameters<M, \"index\"> {\r\n    toastParameters: UseToastParametersSelf;\r\n    context: ToastsContext<M>;\r\n    info: OmitStrong<M, \"setNumberAheadOfMe\" | \"focus\" | \"show\">\r\n}\r\n\r\nexport interface ToastInfo extends ManagedChildInfo<number> {\r\n    setNumberAheadOfMe: StateUpdater<number>;\r\n    focus(): void;\r\n    show(): void;\r\n}\r\n\r\nexport interface UseToastReturnTypeSelf {\r\n    numberOfToastsAheadOfUs: number;\r\n    dismiss: () => void;\r\n    dismissed: boolean;\r\n    showing: boolean;\r\n    resetDismissTimer: () => void;\r\n}\r\n\r\nexport interface UseToastReturnType<ToastType extends Element> {\r\n    toastReturn: UseToastReturnTypeSelf\r\n    props: ElementProps<ToastType>;\r\n}\r\n\r\nexport interface UseToastsReturnType<ContainerType extends Element, M extends ToastInfo> extends UseManagedChildrenReturnType<ToastInfo> {\r\n    context: ToastsContext<M>\r\n    props: ElementProps<ContainerType>;\r\n}\r\n\r\nexport interface ToastsContextSelf {\r\n    onAnyToastDismissed: (_index: number) => void;\r\n    getMaxVisibleCount: () => number;\r\n    onAnyToastMounted: (toastIndex: number) => void;\r\n}\r\n\r\nexport interface ToastsContext<M extends ToastInfo> extends UseManagedChildrenContext<M> {\r\n    toastContext: ToastsContextSelf;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Allows any descendent children to push a visible (and/or audible) message to the user's attention.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useToast}\r\n */\r\nexport function useToasts<ContainerType extends Element>({ managedChildrenParameters: { onChildrenMountChange: ocmu, onAfterChildLayoutEffect }, toastsParameters: { visibleCount } }: UseToastsParameters): UseToastsReturnType<ContainerType, ToastInfo> {\r\n    monitorCallCount(useToasts);\r\n\r\n    // Normally, this does just look like [0, 1, 2, 3], etc\r\n    // so it could be just an index to the current toast,\r\n    // but if we dismiss toasts out of order, it's [0, 2, 3] or something.\r\n    // So just keep track of it all in a big ol', there's only one of these on a page anyway,\r\n    // and if you're pusing 10000 toasts at once an Array<number> isn't going to be your bottleneck.\r\n    const currentIndexQueue = useRef<number[]>([]);\r\n\r\n    const getMaxVisibleCount = useStableGetter(visibleCount);\r\n    const nextIndexToStartAt = useRef(0);\r\n\r\n    const { refElementReturn: { getElement }, propsStable } = useRefElement<ContainerType>({ refElementParameters: {} });\r\n    const { context, managedChildrenReturn, ..._childInfo } = useManagedChildren<ToastInfo>({ managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange: ocmu } });\r\n\r\n    const { getChildren: getToastQueue } = managedChildrenReturn;\r\n    const toastQueue = getToastQueue();\r\n\r\n    // When a toast is shown or hidden, always make sure that we're showing all the toasts that we should be.\r\n    const showHighestPriorityToast = useCallback(() => {\r\n        const max = Math.min(getMaxVisibleCount(), currentIndexQueue.current.length);\r\n        let start = nextIndexToStartAt.current;\r\n        for (let i = start; i < max; ++i) {\r\n\r\n            const highestPriorityToast = toastQueue.getAt(currentIndexQueue.current[i]);\r\n            console.assert(!!highestPriorityToast);\r\n            highestPriorityToast?.show();\r\n        }\r\n        nextIndexToStartAt.current = max;\r\n    }, [])\r\n\r\n    // Any time a new toast mounts, update our bottommostToastIndex to point to it if necessary\r\n    // (\"necessary\" just meaning if it's the first toast ever or all prior toasts have been dismissed)\r\n    const onAnyToastMounted = useCallback((toastIndex: number) => {\r\n        currentIndexQueue.current.push(toastIndex);\r\n        toastQueue.getAt(toastIndex)?.setNumberAheadOfMe(currentIndexQueue.current.length - 1);\r\n        showHighestPriorityToast();\r\n    }, []);\r\n\r\n    // Any time a toast is dismissed, update our bottommostToastIndex to point to the next toast in the queue, if one exists.\r\n    const onAnyToastDismissed = useCallback((_index: number) => {\r\n\r\n        // When we dismiss a toast, remove it from the \"to-display\" queue by actually splicing it out of the array.\r\n        // Then notify each toast of its change in position within that queue to keep the two in sync.\r\n        const removalIndex = currentIndexQueue.current.findIndex(i => i == _index);\r\n\r\n\r\n        // For all toasts that have already been dismissed, shift them even further back by one to \"make space\" \r\n        // (they're removed from the queue but this is the negative index they would have if we kept negatives in the queue)\r\n        // for the newly-dismissed toast.\r\n        toastQueue.forEach(c => {\r\n            c.setNumberAheadOfMe(prev => {\r\n                if (prev < 0)\r\n                    return prev - 1;\r\n                else\r\n                    return prev;\r\n            });\r\n        });\r\n        // Let this toast know that it's now the most recently dismissed toast\r\n        toastQueue.getAt(_index)?.setNumberAheadOfMe(-1);\r\n\r\n        // Notify all toasts waiting behind this one in the queue that they've moved up one slot\r\n        toastQueue.forEach(c => {\r\n            c.setNumberAheadOfMe(prev => {\r\n                if (prev > removalIndex)\r\n                    return prev - 1;\r\n                else\r\n                    return prev;\r\n            });\r\n        });\r\n\r\n        // Actually modify the queue itself\r\n        currentIndexQueue.current.splice(removalIndex, 1);\r\n\r\n        // And after all that, make sure that we're showing any toasts that have been waiting in the queue\r\n        showHighestPriorityToast();\r\n    }, []);\r\n\r\n\r\n\r\n    const [_mouseOver2, setMouseOver, _getMouseOver] = useState(false);\r\n\r\n    useGlobalHandler(document, \"pointermove\", e => {\r\n        const mouseOver = (e.target != null && e.target instanceof Node && (getElement()?.contains(e.target) || getElement() == e.target));\r\n        setMouseOver(mouseOver);\r\n    });\r\n\r\n    const toastContext = {\r\n        onAnyToastDismissed,\r\n        getMaxVisibleCount,\r\n        onAnyToastMounted\r\n    }\r\n\r\n    const props = useMergedProps<ContainerType>(useMergedProps(propsStable, { class: \"toasts-container\" } as ElementProps<ContainerType>));\r\n\r\n    return {\r\n        context: {\r\n            ...context,\r\n            toastContext\r\n        },\r\n        managedChildrenReturn,\r\n        props\r\n\r\n    };\r\n}\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport function useToast<E extends Element>({ toastParameters: { politeness, timeout, children }, info: { index, ...info }, context }: UseToastParameters<ToastInfo>): UseToastReturnType<E> {\r\n    const { getMaxVisibleCount, onAnyToastDismissed, onAnyToastMounted } = context.toastContext;\r\n    monitorCallCount(useToast);\r\n    const [numberOfToastsAheadOfUs, setNumberOfToastsAheadOfUs] = useState(Infinity);\r\n    const getIndex = useStableGetter(index);\r\n    const [dismissed2, setDismissed2, getDismissed2] = useState(false);\r\n    const [showing2, setShowing2, getShowing2] = useState(false);\r\n    const [triggerIndex, setTriggerIndex] = useState(1);\r\n\r\n    const notify = useNotify();\r\n\r\n    const dismiss = useCallback(() => {\r\n        if (!getDismissed2())\r\n            onAnyToastDismissed(getIndex());\r\n\r\n        setDismissed2(true);\r\n        setShowing2(false);\r\n    }, []);\r\n\r\n    const show = useStableCallback(() => {\r\n        notify(\"polite\", <p>{children}</p>);\r\n        setShowing2(true);\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!getDismissed2() && !getShowing2()) {\r\n            if (numberOfToastsAheadOfUs >= 0 && numberOfToastsAheadOfUs < getMaxVisibleCount()) {\r\n                show();\r\n            }\r\n        }\r\n    }, [numberOfToastsAheadOfUs]);\r\n\r\n    const focus2 = useCallback(() => {\r\n        const element = getElement();\r\n        if (element) {\r\n            const firstFocusable = findFirstFocusable(element) as (HTMLElement | null);\r\n            focus(firstFocusable);\r\n        }\r\n    }, []);\r\n\r\n    const { managedChildReturn: { getChildren: _getToasts } } = useManagedChild<ToastInfo>({ info: { index, focus: focus2, setNumberAheadOfMe: setNumberOfToastsAheadOfUs, show }, context });\r\n\r\n    const resetDismissTimer = useCallback(() => {\r\n        setTriggerIndex(i => ++i);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        onAnyToastMounted(index);\r\n    }, []);\r\n\r\n    const dismissTimeoutKey = (timeout == null || numberOfToastsAheadOfUs != 0) ? null : isFinite(timeout) ? timeout : timeout > 0 ? null : 0;\r\n\r\n    useTimeout({\r\n        timeout: dismissTimeoutKey,\r\n        callback: () => {\r\n            if (showing2)\r\n                dismiss();\r\n        },\r\n        triggerIndex: showing2 ? triggerIndex : false\r\n    });\r\n\r\n    const { refElementReturn: { getElement }, propsStable } = useRefElement<E>({ refElementParameters: {} })\r\n\r\n    return {\r\n        toastReturn: {\r\n            dismissed: dismissed2,\r\n            showing: showing2,\r\n            numberOfToastsAheadOfUs,\r\n            dismiss,\r\n            resetDismissTimer\r\n        },\r\n        props: propsStable\r\n    }\r\n}\r\n","import { DismissListenerTypes, ElementProps, focus, monitorCallCount, returnNull, TargetedPick, useDismiss, UseEscapeDismissParameters, useGlobalHandler, useHasCurrentFocus, useMergedProps, usePassiveState, useRandomId, useRefElement, useStableCallback, useState } from \"preact-prop-helpers\";\r\nimport { useCallback, useRef } from \"preact/hooks\";\r\nimport { Prefices } from \"./props.js\";\r\n\r\nexport type TooltipStatus = \"hover\" | \"focus\" | null;\r\n\r\nexport interface UseTooltipParametersSelf {\r\n\r\n    /**\r\n     * Called when the tooltip's content should be shown or hidden\r\n     * or when the manner in which it's shown should be changed.\r\n     * \r\n     * This can change from `\"hover\"` to `\"mouse\"`, but never the other way around.\r\n     * \r\n     * `\"null\"` means the tooltip should be hidden\r\n     * \r\n     * @param status C\r\n     */\r\n    onStatus(status: TooltipStatus): void;\r\n\r\n    /**\r\n     * This is whether `aria-describedby` or `aria-labelledby` is used.\r\n     * \r\n     * Certain situations require one or the other, so you need to specify for each circumstance. \r\n     */\r\n    tooltipSemanticType: \"label\" | \"description\";\r\n\r\n    /**\r\n     * How long should the tooltip wait to show itself if it was shown via hover?\r\n     * \r\n     * Default is 0.\r\n     */\r\n    hoverDelay: number | null;\r\n}\r\n\r\nexport interface UseTooltipParameters<TriggerType extends Element, PopupType extends Element> extends TargetedPick<UseEscapeDismissParameters<PopupType>,\"escapeDismissParameters\", \"getWindow\" | \"parentDepth\"> {\r\n    tooltipParameters: UseTooltipParametersSelf;\r\n}\r\n\r\nexport type TooltipState = `${\"hovering\" | \"focused\"}-${\"popup\" | \"trigger\"}` | null;\r\n\r\n/**\r\n * Implements a [Tooltip](https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/) pattern.\r\n * \r\n * @remarks Tooltips are remarkably under-specified, so some of this is speculative.\r\n * \r\n * @compositeParams\r\n */\r\nexport function useTooltip<TriggerType extends Element, PopupType extends Element>({ tooltipParameters: { onStatus, tooltipSemanticType, hoverDelay }, escapeDismissParameters }: UseTooltipParameters<TriggerType, PopupType>): UseTooltipReturnType<TriggerType, PopupType> {\r\n    monitorCallCount(useTooltip);\r\n\r\n\r\n    useGlobalHandler(window, \"mouseout\", useCallback((e: MouseEvent) => {\r\n        console.log(e);\r\n        if (e.relatedTarget == null)\r\n            onHoverChanged(false, \"popup\");\r\n    }, []));\r\n\r\n    /**\r\n     * Whether the hover/focus-popup/trigger state we have results in us showing this tooltip.\r\n     * \r\n     * This is used purely to attach global event handlers that should only be there when the tooltip is open (e.g. `useDismiss`)\r\n     */\r\n    const [openLocal, setOpenLocal] = useState(false);\r\n\r\n    const [getState, setState] = usePassiveState<TooltipState, never>(useStableCallback((nextState, prevState) => {\r\n        if (hoverTimeoutHandle.current) {\r\n            clearTimeout(hoverTimeoutHandle.current);\r\n            hoverTimeoutHandle.current = null;\r\n        }\r\n\r\n        switch (nextState) {\r\n            case \"focused-popup\":\r\n            case \"focused-trigger\":\r\n                onStatus(\"focus\");\r\n                break;\r\n            case \"hovering-popup\":\r\n            case \"hovering-trigger\":\r\n                onStatus(\"hover\");\r\n                break;\r\n            default:\r\n                onStatus(null);\r\n                break;\r\n        }\r\n\r\n        setOpenLocal(!!nextState);\r\n\r\n\r\n    }), returnNull);\r\n\r\n    let {\r\n        propsReferencer: propsTrigger,\r\n        propsSource: propsPopup\r\n    } = useRandomId<PopupType, TriggerType>({ randomIdParameters: { prefix: Prefices.tooltip, otherReferencerProp: (tooltipSemanticType == \"description\" ? \"aria-describedby\" : \"aria-labelledby\") } });\r\n\r\n    const { refElementReturn: { getElement: getTriggerElement }, propsStable: triggerRefProps } = useRefElement<TriggerType>({ refElementParameters: {} });\r\n    const { refElementReturn: { getElement: getPopupElement }, propsStable: popupRefProps } = useRefElement<PopupType>({ refElementParameters: {} });\r\n\r\n    const stateIsMouse = useCallback(() => (getState()?.startsWith(\"h\") || false), []);\r\n    const stateIsFocus = useCallback(() => (getState()?.startsWith(\"f\") || false), []);\r\n\r\n    let hoverTimeoutHandle = useRef(null as number | null);\r\n    const onHoverChanged = useStableCallback((hovering: boolean, which: \"popup\" | \"trigger\") => {\r\n        if (hoverTimeoutHandle.current)\r\n            clearTimeout(hoverTimeoutHandle.current);\r\n\r\n        if (hovering) {\r\n            hoverTimeoutHandle.current = setTimeout(() => {\r\n                setState(`hovering-${which}`);\r\n                hoverTimeoutHandle.current = null;\r\n            }, hoverDelay || 0)\r\n        }\r\n        else {\r\n            setState(null);\r\n        }\r\n    })\r\n\r\n    const onCurrentFocusedInnerChanged = useCallback((focused: boolean, which: \"popup\" | \"trigger\") => {\r\n        if (!stateIsMouse()) {\r\n            if (focused) {\r\n                setState(`focused-${which}`);\r\n            }\r\n            else {\r\n                setState(null);\r\n            }\r\n        }\r\n        else {\r\n            setState(null);\r\n        }\r\n    }, [stateIsMouse]);\r\n\r\n    const onTriggerCurrentFocusedInnerChanged = useCallback((focused: boolean) => onCurrentFocusedInnerChanged(focused, \"trigger\"), [onCurrentFocusedInnerChanged]);\r\n    const onPopupCurrentFocusedInnerChanged = useCallback((focused: boolean) => onCurrentFocusedInnerChanged(focused, \"popup\"), [onCurrentFocusedInnerChanged]);\r\n    const { hasCurrentFocusReturn: triggerFocusReturn } = useHasCurrentFocus<TriggerType>({ hasCurrentFocusParameters: { onCurrentFocusedChanged: null, onCurrentFocusedInnerChanged: onTriggerCurrentFocusedInnerChanged }, refElementReturn: { getElement: getTriggerElement } });\r\n    const { hasCurrentFocusReturn: popupFocusReturn } = useHasCurrentFocus<PopupType>({ hasCurrentFocusParameters: { onCurrentFocusedChanged: null, onCurrentFocusedInnerChanged: onPopupCurrentFocusedInnerChanged }, refElementReturn: { getElement: getPopupElement } });\r\n\r\n    const {\r\n        refElementPopupReturn,\r\n        refElementSourceReturn,\r\n        propsStablePopup,\r\n        propsStableSource\r\n    } = useDismiss<DismissListenerTypes, TriggerType, PopupType>({\r\n        dismissParameters: {\r\n            closeOnBackdrop: true,     // we handle this ourselves, but for mobile devices with a sorta virtualish cursor this helps. \r\n            closeOnLostFocus: false,    // and it interferes with our own focus logic (or, our onClose there does)\r\n            closeOnEscape: true,\r\n            open: openLocal,\r\n            onClose: useStableCallback((reason) => {\r\n                setState(null);\r\n            }),\r\n        },\r\n        escapeDismissParameters,\r\n    });\r\n\r\n\r\n\r\n    const otherPopupProps = {\r\n        onPointerEnter: useCallback(() => { onHoverChanged(true, \"popup\") }, []),\r\n        //onPointerLeave: useCallback(() => { onHoverChanged(false, \"popup\") }, [])\r\n    }\r\n    const otherTriggerProps = {\r\n        onPointerEnter: useCallback(() => { onHoverChanged(true, \"trigger\") }, []),\r\n        onClick: useCallback((e: MouseEvent) => { if (e.currentTarget && \"focus\" in e.currentTarget) focus(e.currentTarget as HTMLElement); }, []),\r\n        //onPointerLeave: useCallback(() => { onHoverChanged(false, \"trigger\") }, [])\r\n    }\r\n\r\n    useGlobalHandler(document, \"pointermove\", !openLocal ? null : (e => {\r\n        const popupElement = getPopupElement();\r\n        const triggerElement = getTriggerElement();\r\n        const mouseElement = e.target as Node | null;\r\n        let overPopup = (popupElement?.contains(mouseElement))\r\n        let overTrigger = (triggerElement?.contains(mouseElement))\r\n        if (!overPopup && !overTrigger && stateIsMouse()) {\r\n            onHoverChanged(false, \"popup\");\r\n        }\r\n    }), { capture: true, passive: true })\r\n\r\n\r\n    return {\r\n        propsPopup: useMergedProps<PopupType>(popupRefProps, propsPopup, popupFocusReturn.propsStable, { role: \"tooltip\" }, otherPopupProps, propsStablePopup),\r\n        propsTrigger: useMergedProps<TriggerType>(triggerRefProps, propsTrigger, triggerFocusReturn.propsStable, { onClick: useStableCallback(e => focus(e.currentTarget as Element as HTMLElement)) }, otherTriggerProps, propsStableSource),\r\n        tooltipReturn: {\r\n            getState,\r\n            stateIsFocus,\r\n            stateIsMouse\r\n        }\r\n    }\r\n}\r\n\r\nexport interface UseTooltipReturnTypeSelf {\r\n    getState(): TooltipState;\r\n    stateIsFocus(): boolean;\r\n    stateIsMouse(): boolean;\r\n}\r\n\r\nexport interface UseTooltipReturnType<TriggerType extends Element, PopupType extends Element> {\r\n    propsPopup: ElementProps<PopupType>;\r\n    propsTrigger: ElementProps<TriggerType>;\r\n    tooltipReturn: UseTooltipReturnTypeSelf\r\n}","import { Context, createContext } from \"preact\";\r\nimport { GetIndex, UseSingleSelectionParameters, focus } from \"preact-prop-helpers\";\r\nimport { ForwardFn, forwardRef, memo, useContext } from \"preact/compat\";\r\n\r\nexport function memoForwardRef<T extends ForwardFn<any, any>>(fn: T): T {\r\n    return memo(forwardRef(fn)) as T;\r\n}\r\n\r\nexport const ContextDefaults = {\r\n    collator: createContext<Intl.Collator | null>(null),\r\n    pageNavigationSize: createContext<number>(0.1),\r\n    typeaheadTimeout: createContext(1000),\r\n    noTypeahead: createContext(false),\r\n    getIndex: createContext<GetIndex>(v => v.props.index),\r\n    disableArrowKeys: createContext(false),\r\n    disableHomeEndKeys: createContext(false),\r\n    getWindow: createContext(() => globalThis.window as Window),\r\n    focusOpener: createContext((e: any) => focus(e)),\r\n    getText: createContext((e: any) => (e?.textContent ?? \"\") as string | null),\r\n    selectionMode: createContext<UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"][\"selectionMode\"]>(\"activation\"),\r\n}\r\n\r\ntype DefaultExcepts = keyof typeof ContextDefaults;\r\n\r\ntype ContextType<T extends Context<any>> = T extends Context<infer C> ? C : unknown;\r\n\r\nexport function useDefault<K extends DefaultExcepts>(context: K, userValue: null | undefined | ContextType<(typeof ContextDefaults)[K]>): ContextType<(typeof ContextDefaults)[K]> {\r\n    const defaultValue = useContext<ContextType<(typeof ContextDefaults)[K]>>(ContextDefaults[context] as Context<any>);\r\n    return userValue ?? defaultValue;\r\n}\r\n\r\nexport const ParentDepthContext = createContext(0);\r\n\r\ntype PartialExceptD<T, KeepRequired extends keyof T> = Partial<Pick<T, Exclude<keyof T, KeepRequired>>> & Pick<T, KeepRequired>;\r\n\r\n/**\r\n * Like `Partial<T>`, but the properties given by `K` will **NOT** be made partial -- they'll remain required.\r\n */\r\nexport type PartialExcept<T, K extends keyof T> = PartialExceptD<T, K>;\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { assertEmptyObject, returnTrue } from \"preact-prop-helpers\";\r\nimport { memo } from \"preact/compat\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get4, useContextWithWarning } from \"../props.js\";\r\nimport { useAccordion, UseAccordionContext, UseAccordionParameters, UseAccordionReturnType, useAccordionSection, UseAccordionSectionInfo, UseAccordionSectionParameters, UseAccordionSectionReturnType } from \"../use-accordion.js\";\r\nimport { PartialExcept, useDefault } from \"./util.js\";\r\n\r\n\r\ninterface AccordionPropsBase<HeaderButtonElement extends Element> extends\r\n    Get4<UseAccordionParameters<HeaderButtonElement, UseAccordionSectionInfo>, \"accordionParameters\", \"typeaheadNavigationParameters\", \"linearNavigationParameters\", \"managedChildrenParameters\"> {\r\n    imperativeHandle?: Ref<UseAccordionReturnType<HeaderButtonElement, UseAccordionSectionInfo>>;\r\n}\r\n\r\ninterface AccordionSectionPropsBase<HeaderElement extends Element, HeaderButtonElement extends Element, BodyElement extends Element> extends\r\n    Get4<UseAccordionSectionParameters<HeaderButtonElement, UseAccordionSectionInfo>, \"info\", \"accordionSectionParameters\", \"buttonParameters\", \"textContentParameters\"> {\r\n    imperativeHandle?: Ref<UseAccordionSectionReturnType<HeaderElement, HeaderButtonElement, BodyElement>>;\r\n}\r\n\r\n\r\nexport interface AccordionProps<HeaderButtonElement extends Element> extends PartialExcept<AccordionPropsBase<HeaderButtonElement>, never> {\r\n    render(info: UseAccordionReturnType<HeaderButtonElement, UseAccordionSectionInfo>): VNode<any>;\r\n}\r\n\r\nexport interface AccordionSectionProps<HeaderElement extends Element, HeaderButtonElement extends Element, BodyElement extends Element> extends PartialExcept<AccordionSectionPropsBase<HeaderElement, HeaderButtonElement, BodyElement>, \"index\" | \"tagButton\"> {\r\n    render(info: UseAccordionSectionReturnType<HeaderElement, HeaderButtonElement, BodyElement>): VNode<any>;\r\n}\r\n\r\n\r\nconst AccordionSectionContext = createContext<UseAccordionContext<any, any>>(null!);\r\nexport const Accordion = memo(function Accordion<HeaderButtonElement extends Element>({\r\n    disableHomeEndKeys,\r\n    initialIndex,\r\n    onAfterChildLayoutEffect,\r\n    onChildrenMountChange,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    pageNavigationSize,\r\n    localStorageKey,\r\n    collator,\r\n    noTypeahead,\r\n    typeaheadTimeout,\r\n    onChildrenCountChange,\r\n    isValid,\r\n    render,\r\n    imperativeHandle,\r\n    orientation,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    ...rest\r\n}: AccordionProps<HeaderButtonElement>) {\r\n    assertEmptyObject(rest);\r\n\r\n    const info = useAccordion<HeaderButtonElement, UseAccordionSectionInfo>({\r\n        accordionParameters: { orientation, initialIndex, localStorageKey: localStorageKey ?? null },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            isValid: isValid || returnTrue,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange },\r\n    });\r\n    useImperativeHandle(imperativeHandle!, () => info);\r\n\r\n    return (\r\n        <AccordionSectionContext.Provider value={info.context}>{render(info)}</AccordionSectionContext.Provider>\r\n    )\r\n})\r\n\r\nexport const AccordionSection = memo(function AccordionSection<HeaderContainerElement extends Element, HeaderButtonElement extends Element, BodyElement extends Element>({\r\n    open,\r\n    index,\r\n    tagButton,\r\n    disabled,\r\n    bodyRole,\r\n    onPress,\r\n    untabbable,\r\n    getText,\r\n    imperativeHandle,\r\n    render,\r\n    ...rest\r\n}: AccordionSectionProps<HeaderContainerElement, HeaderButtonElement, BodyElement>) {\r\n    assertEmptyObject(rest);\r\n    const context = useContextWithWarning(AccordionSectionContext, \"accordion section\");\r\n    const info = useAccordionSection<HeaderContainerElement, HeaderButtonElement, BodyElement>({\r\n        buttonParameters: { disabled: disabled ?? false, tagButton, onPress: onPress ?? null },\r\n        accordionSectionParameters: { open, bodyRole: bodyRole ?? \"region\" },\r\n        info: { index, untabbable: untabbable || false },\r\n        refElementParameters: {},\r\n        context,\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n    });\r\n\r\n    useImperativeHandle(imperativeHandle!, () => info);\r\n\r\n    return render(info);\r\n});\r\n","import { Ref, VNode } from \"preact\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get3 } from \"../props.js\";\r\nimport { UseButtonParameters, UseButtonReturnType, useButton } from \"../use-button.js\";\r\nimport { PartialExcept, memoForwardRef } from \"./util.js\";\r\n\r\n\r\ninterface ButtonPropsBase<E extends Element> extends\r\n    Get3<UseButtonParameters<E>, \"buttonParameters\", \"pressParameters\", \"refElementParameters\"> {\r\n    ref?: Ref<UseButtonReturnType<E>>;\r\n}\r\n\r\nexport interface ButtonProps<E extends Element> extends PartialExcept<ButtonPropsBase<E>, \"tagButton\"> {\r\n    render(info: UseButtonReturnType<E>): VNode<any>;\r\n}\r\n\r\nexport const Button = memoForwardRef(function Button<E extends Element>({ \r\n    tagButton, \r\n    onPress, \r\n    pressed, \r\n    render, \r\n    disabled, \r\n    onElementChange, \r\n    onMount, \r\n    onUnmount, \r\n    allowRepeatPresses, \r\n    longPressThreshold,\r\n    excludeEnter,\r\n    excludePointer,\r\n    excludeSpace,\r\n    onPressingChange\r\n}: ButtonProps<E>, ref: Ref<any>) {\r\n    const info = useButton<E>({\r\n        buttonParameters: {\r\n            role: \"button\",\r\n            tagButton: tagButton,\r\n            onPress: onPress ?? null,\r\n            pressed,\r\n            disabled: disabled ?? false\r\n        },\r\n        pressParameters: { longPressThreshold, allowRepeatPresses, excludeEnter, excludePointer, excludeSpace, onPressingChange },\r\n        refElementParameters: { onElementChange, onMount, onUnmount }\r\n    });\r\n    useImperativeHandle(ref!, () => info);\r\n    return render(info);\r\n})\r\n","import { createContext, Ref, RenderableProps, VNode } from \"preact\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get2, Get8, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { CheckboxGroupContext, CheckboxGroupInfo, useCheckboxGroup, useCheckboxGroupChild, UseCheckboxGroupChildParameters, UseCheckboxGroupChildReturnType, UseCheckboxGroupParameters, useCheckboxGroupParent, UseCheckboxGroupParentParameters, UseCheckboxGroupParentReturnType, UseCheckboxGroupReturnType } from \"../use-checkbox-group.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\nexport interface CheckboxGroupPropsBase<ParentElement extends Element, TabbableChildElement extends Element, M extends CheckboxGroupInfo<TabbableChildElement>> extends\r\n    Get8<UseCheckboxGroupParameters<ParentElement, TabbableChildElement, M>, \"linearNavigationParameters\", \"checkboxGroupParameters\", \"rearrangeableChildrenParameters\", \"sortableChildrenParameters\", \"typeaheadNavigationParameters\", \"staggeredChildrenParameters\", \"rovingTabIndexParameters\", \"rovingTabIndexParameters\">,\r\n    RenderableProps<{}> {\r\n    ref?: Ref<UseCheckboxGroupReturnType<ParentElement, TabbableChildElement, M>>;\r\n}\r\n\r\nexport interface CheckboxGroupParentPropsBase<TCE extends Element> extends\r\n    Pick<CheckboxGroupInfo<TCE>, \"index\" | \"getSortValue\">,\r\n    Get<UseCheckboxGroupParentParameters<TCE, CheckboxGroupInfo<TCE>>, \"textContentParameters\">,\r\n    OmitStrong<Get<UseCheckboxGroupParentParameters<TCE, CheckboxGroupInfo<TCE>>, \"info\">, \"checkboxInfo\"> {\r\n    ref?: Ref<UseCheckboxGroupParentReturnType<TCE, CheckboxGroupInfo<TCE>>>;\r\n}\r\n\r\nexport interface CheckboxGroupChildPropsBase<TCE extends Element> extends\r\n    Get2<UseCheckboxGroupChildParameters<TCE, CheckboxGroupInfo<TCE>>, \"checkboxGroupChildParameters\", \"textContentParameters\">,\r\n    Pick<CheckboxGroupInfo<TCE>, \"index\" | \"untabbable\" | \"unselectable\" | \"getSortValue\"> {\r\n    focusSelf: UseCheckboxGroupChildParameters<TCE, CheckboxGroupInfo<TCE>>[\"info\"][\"focusSelf\"];\r\n    ref?: Ref<UseCheckboxGroupChildReturnType<TCE, CheckboxGroupInfo<TCE>>>;\r\n}\r\n\r\n\r\n\r\nexport interface CheckboxGroupProps<ParentElement extends Element, TabbableChildElement extends Element, M extends CheckboxGroupInfo<TabbableChildElement>> extends PartialExcept<CheckboxGroupPropsBase<ParentElement, TabbableChildElement, M>, never> {\r\n    render(info: UseCheckboxGroupReturnType<ParentElement, TabbableChildElement, M>): VNode<any>;\r\n}\r\nexport interface CheckboxGroupParentProps<TCE extends Element> extends PartialExcept<CheckboxGroupParentPropsBase<TCE>, \"index\" | \"getSortValue\" | \"focusSelf\"> {\r\n    render(parentCheckboxInfo: UseCheckboxGroupParentReturnType<TCE, CheckboxGroupInfo<TCE>>): VNode<any>;\r\n}\r\nexport interface CheckboxGroupChildProps<TCE extends Element> extends PartialExcept<CheckboxGroupChildPropsBase<TCE>, \"index\" | \"checked\" | \"onChangeFromParent\" | \"getSortValue\" | \"focusSelf\"> {\r\n    render(info: UseCheckboxGroupChildReturnType<TCE, CheckboxGroupInfo<TCE>>): VNode<any>;\r\n}\r\n\r\n\r\nconst UseCheckboxGroupChildContext = createContext<CheckboxGroupContext<any, any, any>>(null!);\r\n\r\nexport const CheckboxGroup = memoForwardRef(function CheckboxGroup<ParentElement extends Element, TabbableChildElement extends Element>({\r\n    render,\r\n    collator,\r\n    disableHomeEndKeys,\r\n    noTypeahead,\r\n    typeaheadTimeout,\r\n    onTabbableIndexChange,\r\n    compare,\r\n    staggered,\r\n    getIndex,\r\n    untabbable,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    pageNavigationSize,\r\n    orientation,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    ..._rest\r\n}: CheckboxGroupProps<ParentElement, TabbableChildElement, CheckboxGroupInfo<TabbableChildElement>>, ref?: Ref<any>) {\r\n    untabbable ||= false;\r\n    const info = useCheckboxGroup<ParentElement, TabbableChildElement>({\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        checkboxGroupParameters: { orientation: orientation ?? \"vertical\" },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, untabbable },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <UseCheckboxGroupChildContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </UseCheckboxGroupChildContext.Provider>\r\n    )\r\n});\r\n\r\nexport const CheckboxGroupParent = memoForwardRef(function CheckboxGroupParent<TCE extends Element>({ \r\n    render, \r\n    index, \r\n    focusSelf, \r\n    untabbable, \r\n    getText, \r\n    getSortValue, \r\n    unselectable, \r\n    ..._rest\r\n}: CheckboxGroupParentProps<TCE>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(UseCheckboxGroupChildContext, \"checkbox group\");\r\n    console.assert(context != null, `This CheckboxGroupParent is not contained within a CheckboxGroup`);\r\n\r\n    const info = useCheckboxGroupParent<TCE>({\r\n        info: { \r\n            index, \r\n            unselectable: unselectable || false, \r\n            untabbable: untabbable || false, \r\n            focusSelf, \r\n            getSortValue, \r\n            checkboxInfo: { checkboxChildType: \"parent\" } \r\n        },\r\n        context,\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n    return render(info);\r\n})\r\n\r\nexport const CheckboxGroupChild = memoForwardRef(function CheckboxGroupChild<TCE extends Element>({\r\n    index,\r\n    render,\r\n    checked,\r\n    onChangeFromParent,\r\n    getSortValue,\r\n    untabbable,\r\n    getText,\r\n    focusSelf,\r\n    unselectable,\r\n    ..._rest\r\n}: CheckboxGroupChildProps<TCE>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(UseCheckboxGroupChildContext, \"checkbox group\");\r\n    console.assert(context != null, `This CheckboxGroupChild is not contained within a CheckboxGroup`);\r\n    const info = useCheckboxGroupChild<TCE>({\r\n        checkboxGroupChildParameters: { checked, onChangeFromParent },\r\n        info: { index, untabbable: untabbable || false, unselectable: unselectable || false, focusSelf, getSortValue },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        context,\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n});\r\n","import { createElement, Ref, VNode } from \"preact\";\r\nimport { ElementProps } from \"preact-prop-helpers\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { ElementToTag, Get4 } from \"../props.js\";\r\nimport { useCheckbox, UseCheckboxParameters, UseCheckboxReturnType } from \"../use-checkbox.js\";\r\nimport { LabelPosition } from \"../use-label.js\";\r\nimport { memoForwardRef, PartialExcept } from \"./util.js\";\r\n\r\ninterface CheckboxPropsBase<I extends Element, L extends Element> extends\r\n    Get4<UseCheckboxParameters<LabelPosition, I, L>, \"checkboxLikeParameters\", \"checkboxParameters\", \"labelParameters\", \"pressParameters\"> {\r\n    ref?: Ref<UseCheckboxReturnType<I, L>>;\r\n}\r\n\r\nexport interface CheckboxProps<I extends Element, L extends Element> extends PartialExcept<CheckboxPropsBase<I, L>, \"tagInput\" | \"tagLabel\" | \"labelPosition\" | \"ariaLabel\" | \"checked\" | \"onCheckedChange\"> {\r\n    render(info: UseCheckboxReturnType<I, L>): VNode<any>;\r\n}\r\n\r\nexport function defaultRenderCheckboxLike<I extends Element, L extends Element, InfoType>({ labelPosition, tagInput, tagLabel, makePropsInput, makePropsLabel }: DefaultRenderCheckboxLikeParameters<I, L, InfoType>) {\r\n    return function (info: InfoType): VNode<any> {\r\n\r\n        const inputProps = (makePropsInput(info))\r\n        const { children, ...labelProps } = (makePropsLabel(info))\r\n        if (labelPosition == \"wrapping\") {\r\n\r\n            const input = createElement(tagInput as never, inputProps);\r\n            const label = createElement(tagLabel as never, { ...labelProps, children: <>{input}{children}</> });\r\n\r\n            return (\r\n                <>\r\n                    {label}\r\n                </>\r\n            )\r\n        }\r\n        else if (labelPosition == \"separate\") {\r\n\r\n            const input = createElement(tagInput as never, inputProps);\r\n            const label = createElement(tagLabel as never, { children, ...labelProps });\r\n\r\n            return (\r\n                <>\r\n                    {input}\r\n                    {label}\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            console.assert(!!inputProps[\"aria-label\"]);\r\n            return createElement(tagInput as never, inputProps);\r\n        }\r\n    }\r\n}\r\n\r\nexport interface DefaultRenderCheckboxLikeParameters<I extends Element, L extends Element, InfoType> {\r\n    labelPosition: \"wrapping\" | \"separate\" | \"hidden\",\r\n    tagInput: ElementToTag<I>,\r\n    tagLabel: ElementToTag<L>,\r\n    makePropsInput: (info: InfoType) => ElementProps<I>,\r\n    makePropsLabel: (info: InfoType) => ElementProps<L>\r\n}\r\n\r\nexport const Checkbox = memoForwardRef(function Checkbox<I extends Element, L extends Element>({\r\n    checked,\r\n    disabled,\r\n    tagLabel,\r\n    labelPosition,\r\n    tagInput,\r\n    ariaLabel,\r\n    onCheckedChange,\r\n    longPressThreshold,\r\n    excludeSpace,\r\n    render\r\n}: CheckboxProps<I, L>, ref: Ref<any>) {\r\n\r\n    const checkbox = useCheckbox<LabelPosition, I, L>({\r\n        checkboxLikeParameters: { checked: checked ?? false, disabled: disabled ?? false },\r\n        checkboxParameters: { onCheckedChange },\r\n        labelParameters: { ariaLabel: ariaLabel, labelPosition, tagInput, tagLabel },\r\n        pressParameters: { excludeSpace, longPressThreshold }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => checkbox);\r\n\r\n    return render(checkbox);\r\n});\r\n","import { Ref, VNode } from \"preact-prop-helpers\";\r\nimport { createPortal } from \"preact/compat\";\r\nimport { useContext, useImperativeHandle, useRef } from \"preact/hooks\";\r\nimport { Get4 } from \"../props.js\";\r\nimport { UseDialogParameters, UseDialogReturnType, useDialog } from \"../use-dialog.js\";\r\nimport { ParentDepthContext, PartialExcept, memoForwardRef, useDefault } from \"./util.js\";\r\n\r\ninterface DialogPropsBase<FocusContainerElement extends Element, SourceElement extends Element, DialogElement extends Element, TitleElement extends Element> extends\r\n    Get4<UseDialogParameters<DialogElement, TitleElement>, \"dismissParameters\",\"escapeDismissParameters\",\"labelParameters\",\"focusTrapParameters\"> {\r\n    ref?: Ref<UseDialogReturnType<FocusContainerElement, SourceElement, DialogElement, TitleElement>>;\r\n}\r\n\r\nexport interface DialogProps<FocusContainerElement extends Element, SourceElement extends Element, DialogElement extends Element, TitleElement extends Element> extends PartialExcept<DialogPropsBase<FocusContainerElement, SourceElement, DialogElement, TitleElement>, \"ariaLabel\" | \"onClose\" | \"open\" | \"focusPopup\"> {\r\n\r\n    render(dialogInfo: UseDialogReturnType<FocusContainerElement, SourceElement, DialogElement, TitleElement>): VNode;\r\n}\r\n\r\nexport function defaultRenderPortal({ portalId, children }: { portalId: string, children: VNode }): VNode {\r\n    const portalRef = useRef<HTMLElement>(null!);\r\n    portalRef.current ??= document.getElementById(portalId)!;\r\n    if (portalRef.current)\r\n        return createPortal(children, portalRef.current);\r\n    else\r\n        return children;\r\n}\r\n\r\nexport const Dialog = memoForwardRef(function Dialog<FocusContainerElement extends Element, SourceElement extends Element, DialogElement extends Element, TitleElement extends Element>({\r\n    onClose,\r\n    open,\r\n    closeOnBackdrop,\r\n    closeOnEscape,\r\n    focusOpener,\r\n    getWindow,\r\n    parentDepth,\r\n    focusPopup,\r\n    ariaLabel,\r\n    render\r\n}: DialogProps<FocusContainerElement, SourceElement, DialogElement, TitleElement>, ref?: Ref<any>) {\r\n    const defaultParentDepth = useContext(ParentDepthContext);\r\n    let myDepth = (parentDepth ?? defaultParentDepth) + 1;\r\n\r\n    const info = useDialog<FocusContainerElement, SourceElement, DialogElement, TitleElement>({\r\n        dismissParameters: {\r\n            closeOnBackdrop: closeOnBackdrop ?? true,\r\n            closeOnEscape: closeOnEscape ?? true,\r\n            onClose,\r\n            open\r\n        },\r\n        escapeDismissParameters: {\r\n            getWindow: useDefault(\"getWindow\", getWindow),\r\n            parentDepth: parentDepth ?? defaultParentDepth\r\n        },\r\n        focusTrapParameters: {\r\n            focusOpener: useDefault(\"focusOpener\", focusOpener),\r\n            focusPopup\r\n        },\r\n        labelParameters: { ariaLabel }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <ParentDepthContext.Provider value={myDepth}>\r\n            {render(info)}\r\n        </ParentDepthContext.Provider>\r\n    );\r\n\r\n});\r\n","import { Ref, VNode } from \"preact\";\r\nimport { useContext, useImperativeHandle } from \"preact/hooks\";\r\nimport { Get4 } from \"../props.js\";\r\nimport { UseDrawerParameters, UseDrawerReturnType, useDrawer } from \"../use-drawer.js\";\r\nimport { ParentDepthContext, PartialExcept, memoForwardRef, useDefault } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\ninterface DrawerPropsBase<FocusContainerElement extends Element, SourceElement extends Element, DrawerElement extends Element, TitleElement extends Element> extends\r\n    Get4<UseDrawerParameters<DrawerElement, TitleElement>, \"dismissParameters\", \"escapeDismissParameters\", \"labelParameters\", \"focusTrapParameters\"> {\r\n    ref?: Ref<UseDrawerReturnType<FocusContainerElement, SourceElement, DrawerElement, TitleElement>>;\r\n    render(drawerInfo: UseDrawerReturnType<FocusContainerElement, SourceElement, DrawerElement, TitleElement>): VNode<any>;\r\n}\r\n\r\nexport interface DrawerProps<FocusContainerElement extends Element, SourceElement extends Element, DialogElement extends Element, TitleElement extends Element> extends PartialExcept<DrawerPropsBase<FocusContainerElement, SourceElement, DialogElement, TitleElement>, \"ariaLabel\" | \"onClose\" | \"open\" | \"focusPopup\"> {\r\n    render(dialogInfo: UseDrawerReturnType<FocusContainerElement, SourceElement, DialogElement, TitleElement>): VNode<any>;\r\n}\r\n\r\nexport const Drawer = memoForwardRef(function Drawer<FocusContainerElement extends Element, SourceElement extends Element, DrawerElement extends Element, TitleElement extends Element>({\r\n\r\n    closeOnBackdrop,\r\n    closeOnEscape,\r\n    closeOnLostFocus,\r\n    focusOpener,\r\n    focusPopup,\r\n    getWindow,\r\n    onClose,\r\n    open,\r\n    parentDepth,\r\n    render,\r\n    trapActive,\r\n    ariaLabel,\r\n}: DrawerProps<FocusContainerElement, SourceElement, DrawerElement, TitleElement>, ref: Ref<any>) {\r\n    const defaultParentDepth = useContext(ParentDepthContext);\r\n    let myDepth = (parentDepth ?? defaultParentDepth) + 1;\r\n\r\n    const info = useDrawer<FocusContainerElement, SourceElement, DrawerElement, TitleElement>({\r\n        dismissParameters: {\r\n            closeOnBackdrop: closeOnBackdrop ?? true,\r\n            closeOnEscape: closeOnEscape ?? true,\r\n            closeOnLostFocus: closeOnLostFocus ?? true,\r\n            onClose,\r\n            open\r\n        },\r\n        escapeDismissParameters: {\r\n            getWindow: useDefault(\"getWindow\", getWindow),\r\n            parentDepth: parentDepth ?? defaultParentDepth\r\n        },\r\n        focusTrapParameters: {\r\n            focusOpener: useDefault(\"focusOpener\", focusOpener),\r\n            focusPopup,\r\n            trapActive: trapActive ?? false\r\n        },\r\n        labelParameters: { ariaLabel }\r\n    });\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <ParentDepthContext.Provider value={myDepth}>\r\n            {render(info)}\r\n        </ParentDepthContext.Provider>\r\n    )\r\n\r\n});\r\n","import { createContext, createElement, Ref, VNode } from \"preact\";\r\nimport { ElementProps, focus, useStableCallback } from \"preact-prop-helpers\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { ElementToTag, Get11, Get3, Get5, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { GridlistCellInfo, GridlistRowInfo, useGridlist, useGridlistCell, UseGridlistCellParameters, UseGridlistCellReturnType, UseGridlistContext, UseGridlistParameters, UseGridlistReturnType, useGridlistRow, UseGridlistRowContext, UseGridlistRowParameters, UseGridlistRowReturnType } from \"../use-gridlist.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ninterface GridlistPropsBase<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends\r\n    Get11<UseGridlistParameters<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>, \"linearNavigationParameters\",\"rovingTabIndexParameters\",\"typeaheadNavigationParameters\",\"gridNavigationParameters\",\"rearrangeableChildrenParameters\",\"sortableChildrenParameters\",\"paginatedChildrenParameters\",\"staggeredChildrenParameters\",\"labelParameters\",\"listboxParameters\",\"singleSelectionParameters\"> {\r\n    ref?: Ref<UseGridlistReturnType<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>>;\r\n}\r\n\r\ninterface GridlistRowPropsBase<GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends\r\n    Pick<RM, \"index\" | \"unselectable\" | \"getSortValue\">,\r\n    Get5<UseGridlistRowParameters<GridlistRowElement, GridlistCellElement, RM, CM>, \"textContentParameters\",\"linearNavigationParameters\",\"rovingTabIndexParameters\",\"typeaheadNavigationParameters\",\"gridlistRowParameters\"> {\r\n    info?: OmitStrong<RM, keyof GridlistRowInfo<GridlistRowElement, GridlistCellElement>>;\r\n    ref?: Ref<UseGridlistRowReturnType<GridlistRowElement, GridlistCellElement, RM, CM>>;\r\n}\r\n\r\ninterface GridlistChildPropsBase<CellElement extends Element, M extends GridlistCellInfo<CellElement>> extends\r\n    Get3<UseGridlistCellParameters<CellElement, M>, \"gridNavigationCellParameters\",\"textContentParameters\",\"pressParameters\">,\r\n    Pick<M, \"index\" | \"untabbable\"> {\r\n    focusSelf?: M[\"focusSelf\"];\r\n    info?: OmitStrong<M, \"focusSelf\">;\r\n    ref?: Ref<UseGridlistCellReturnType<CellElement, M>>;\r\n}\r\n\r\n\r\n\r\n\r\nexport interface GridlistProps<GridlistElement extends Element, GridlistRowElement extends Element, GridlistCellElement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends PartialExcept<GridlistPropsBase<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>, \"selectionLimit\" | \"groupingType\" | \"ariaLabel\" | \"selectedIndex\"> {\r\n    render(info: UseGridlistReturnType<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>): VNode;\r\n}\r\n\r\nexport interface GridlistRowProps<GridlistRowElement extends Element, GridlistCellElement extends Element, RM extends GridlistRowInfo<GridlistRowElement, GridlistCellElement>, CM extends GridlistCellInfo<GridlistCellElement>> extends PartialExcept<GridlistRowPropsBase<GridlistRowElement, GridlistCellElement, RM, CM>, \"index\" | \"getSortValue\"> {\r\n    render(info: UseGridlistRowReturnType<GridlistRowElement, GridlistCellElement, RM, CM>): VNode;\r\n}\r\n\r\nexport interface GridlistChildProps<CellElement extends Element, M extends GridlistCellInfo<CellElement>> extends PartialExcept<GridlistChildPropsBase<CellElement, M>, \"index\" | \"focusSelf\"> {\r\n    render(info: UseGridlistCellReturnType<CellElement, M>): VNode;\r\n}\r\n\r\nconst GridlistContext = createContext<UseGridlistContext<any, any, any, any, any>>(null!);\r\nconst GridlistRowContext = createContext<UseGridlistRowContext<any, any, any>>(null!);\r\n\r\n\r\nexport function defaultRenderGridlistRow<RowElement extends Element, CellElement extends Element, RM extends GridlistRowInfo<RowElement, CellElement>, CM extends GridlistCellInfo<CellElement>>({ tagGridlistRow, makePropsGridlistRow }: { tagGridlistRow: ElementToTag<RowElement>, makePropsGridlistRow: (info: UseGridlistRowReturnType<RowElement, CellElement, RM, CM>) => ElementProps<RowElement> }) {\r\n    return function (info: UseGridlistRowReturnType<RowElement, CellElement, RM, CM>) {\r\n        return createElement(tagGridlistRow as never, (makePropsGridlistRow(info)));\r\n    }\r\n}\r\n\r\nexport function defaultRenderGridlistChild<CellElement extends Element, CM extends GridlistCellInfo<CellElement>>({ tagGridlistChild, makePropsGridlistChild }: { tagGridlistChild: ElementToTag<CellElement>, makePropsGridlistChild: (info: UseGridlistCellReturnType<CellElement, CM>) => ElementProps<CellElement> }) {\r\n    return function (info: UseGridlistCellReturnType<CellElement, CM>) {\r\n        return createElement(tagGridlistChild as never, (makePropsGridlistChild(info)));\r\n    }\r\n}\r\n\r\nexport const Gridlist = memoForwardRef(function GridlistU<GridlistElement extends Element, RowElement extends Element, Cellement extends Element, LabelElement extends Element, RM extends GridlistRowInfo<RowElement, Cellement> = GridlistRowInfo<RowElement, Cellement>, CM extends GridlistCellInfo<Cellement> = GridlistCellInfo<Cellement>>({\r\n    collator,\r\n    disableHomeEndKeys,\r\n    noTypeahead,\r\n    onTabbableIndexChange,\r\n    groupingType,\r\n    typeaheadTimeout,\r\n    selectedIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    onSelectedIndexChange,\r\n    pageNavigationSize,\r\n    selectionLimit,\r\n    untabbable,\r\n    paginationMax,\r\n    paginationMin,\r\n    staggered,\r\n    compare,\r\n    getIndex,\r\n    onTabbableColumnChange,\r\n    ariaLabel,\r\n    orientation,\r\n    ariaPropName,\r\n    selectionMode,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    render\r\n}: GridlistProps<GridlistElement, RowElement, Cellement, LabelElement, RM, CM>, ref?: Ref<any>) {\r\n    untabbable ??= false;\r\n    ariaPropName ??= \"aria-selected\";\r\n    selectionMode ??= \"activation\";\r\n\r\n    const info = useGridlist<GridlistElement, RowElement, Cellement, LabelElement, RM, CM>({\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: (navigatePastEnd ?? \"wrap\"),\r\n            navigatePastStart: (navigatePastStart ?? \"wrap\"),\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize),\r\n        },\r\n        rovingTabIndexParameters: {\r\n            onTabbableIndexChange: onTabbableIndexChange ?? null,\r\n            untabbable\r\n        },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout),\r\n        },\r\n        listboxParameters: {\r\n            selectionLimit,\r\n            groupingType,\r\n            selectedIndex,\r\n            onSelectedIndexChange: onSelectedIndexChange ?? null,\r\n            orientation: orientation ?? \"vertical\"\r\n        },\r\n        gridNavigationParameters: {\r\n            onTabbableColumnChange: onTabbableColumnChange ?? null\r\n        },\r\n        labelParameters: {\r\n            ariaLabel\r\n        },\r\n        rearrangeableChildrenParameters: {\r\n            getIndex: useDefault(\"getIndex\", getIndex)\r\n        },\r\n        sortableChildrenParameters: {\r\n            compare: compare ?? null\r\n        },\r\n        paginatedChildrenParameters: {\r\n            paginationMax: paginationMax ?? null,\r\n            paginationMin: paginationMin ?? null\r\n        },\r\n        singleSelectionParameters: { ariaPropName, selectionMode }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <GridlistContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </GridlistContext.Provider>\r\n    )\r\n});\r\n\r\nexport const GridlistRow = memoForwardRef(function GridlistRowU<RowElement extends Element, Cellement extends Element, RM extends GridlistRowInfo<RowElement, Cellement> = GridlistRowInfo<RowElement, Cellement>, CM extends GridlistCellInfo<Cellement> = GridlistCellInfo<Cellement>>({\r\n    index,\r\n    collator,\r\n    unselectable,\r\n    untabbable,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    noTypeahead,\r\n    onTabbableIndexChange,\r\n    selected,\r\n    typeaheadTimeout,\r\n    getSortValue,\r\n    getText,\r\n    render,\r\n    initiallyTabbedIndex,\r\n    onNavigateTypeahead,\r\n    info: uinfo\r\n}: GridlistRowProps<RowElement, Cellement, RM, CM>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(GridlistContext, \"gridlist\");\r\n    console.assert(context != null, `This GridlistRow is not contained within a Gridlist`);\r\n    untabbable ||= false;\r\n\r\n    const info = useGridlistRow<RowElement, Cellement, RM, CM>({\r\n        info: { index, untabbable, unselectable, getSortValue, ...uinfo } as RM,\r\n        context,\r\n        gridlistRowParameters: { selected: selected ?? null },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        linearNavigationParameters: {\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\"\r\n        },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, initiallyTabbedIndex: initiallyTabbedIndex ?? null, untabbable },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return <GridlistRowContext.Provider value={info.context}>{render(info)}</GridlistRowContext.Provider>\r\n})\r\n\r\nexport const GridlistChild = memoForwardRef(function GridlistChild<CellElement extends Element, CM extends GridlistCellInfo<CellElement> = GridlistCellInfo<CellElement>>({\r\n    index,\r\n    colSpan,\r\n    focusSelf,\r\n    untabbable,\r\n    getText,\r\n    onPressSync,\r\n    longPressThreshold,\r\n    onPressingChange,\r\n    render,\r\n    info: subInfo\r\n}: GridlistChildProps<CellElement, CM>, ref?: Ref<any>) {\r\n    const context = (useContextWithWarning(GridlistRowContext, \"gridlist row\") as UseGridlistRowContext<any, CellElement, CM>);\r\n    console.assert(context != null, `This GridlistChild is not contained within a GridlistRow that is contained within a Gridlist`);\r\n    const defaultFocusSelf = useStableCallback((e: CellElement) => { focus(e as Element as HTMLElement); }, []);\r\n    const info = useGridlistCell<CellElement, CM>({\r\n        info: { index, untabbable: untabbable || false, focusSelf: (focusSelf ?? defaultFocusSelf), ...subInfo } as CM,\r\n        context,\r\n        gridNavigationCellParameters: { colSpan: colSpan ?? 1 },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        pressParameters: { onPressSync, longPressThreshold, onPressingChange }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n});\r\n","import { ComponentChildren, createContext, createElement, RenderableProps } from \"preact\";\r\nimport { ElementProps } from \"preact-prop-helpers\";\r\nimport { memo } from \"preact/compat\";\r\nimport { useContext } from \"preact/hooks\";\r\n\r\ntype ElementToTag<A> = any;\r\nfunction overwriteWithWarning(a: any, ...t: any[]) { return a; }\r\n\r\nconst HeadingLevelContext = createContext(0);\r\n\r\nexport interface HeadingProps<T extends Element> extends RenderableProps<ElementProps<T>> {\r\n    /**\r\n     * The contents of the heading.\r\n     * \r\n     * Separate from the children, which become the content described by this heading.\r\n     */\r\n    heading: ComponentChildren;\r\n\r\n    tag?: ElementToTag<T>;\r\n}\r\n\r\n/**\r\n * Utility component that creates a heading `h1`, `h2`, `h3`, etc.\r\n * \r\n * Which one is chosen depends on a parent `Heading`, with the root-most `Heading`\r\n * starting at 1, or the value specified by `HeadingReset`.\r\n * \r\n * Specify the actual contents of the heading with the `heading` prop.\r\n * \r\n */\r\nexport const Heading = memo(function Heading<T extends Element>({ children, heading, tag, ...props }: HeadingProps<T>) {\r\n    const headingLevelBeforeUs = useContext(HeadingLevelContext);\r\n    const newHeadingLevel = headingLevelBeforeUs + 1;\r\n\r\n    if (tag == null) {\r\n        if (newHeadingLevel <= 6) {\r\n            tag = `h${newHeadingLevel}` as never;\r\n        }\r\n        else {\r\n            tag = 'div' as never;\r\n            overwriteWithWarning(\"Heading\", props, \"aria-level\", `${newHeadingLevel}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <HeadingReset newLevel={headingLevelBeforeUs + 1}>\r\n                {createElement(tag as any, props, heading)}\r\n                {children}\r\n            </HeadingReset>\r\n        </>\r\n    )\r\n})\r\n\r\n/**\r\n * Set the value that the next `Heading` will use as its base.\r\n * \r\n * Minimum of 1.\r\n */\r\nexport const HeadingReset = memo(function HeadingReset({ newLevel, children }: { newLevel: number, children: ComponentChildren }) {\r\n    return (\r\n        <HeadingLevelContext.Provider value={newLevel - 1}>\r\n            {children}\r\n        </HeadingLevelContext.Provider>\r\n    )\r\n})\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus } from \"preact-prop-helpers\";\r\nimport { memo } from \"preact/compat\";\r\nimport { useCallback, useContext } from \"preact/hooks\";\r\nimport { Get, Get2, Get9, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { ListboxInfo, useListbox, UseListboxContext, useListboxItem, UseListboxItemParameters, UseListboxItemReturnType, UseListboxParameters, UseListboxReturnType } from \"../use-listbox.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\n\r\ninterface ListboxPropsBase<ListElement extends Element, ListItemElement extends Element, LabelElement extends Element, M extends ListboxInfo<ListItemElement>> extends\r\n    Get9<UseListboxParameters<ListElement, ListItemElement, LabelElement, M>, \"labelParameters\",\"linearNavigationParameters\",\"rearrangeableChildrenParameters\",\"rovingTabIndexParameters\",\"sortableChildrenParameters\",\"staggeredChildrenParameters\",\"paginatedChildrenParameters\",\"typeaheadNavigationParameters\",\"singleSelectionParameters\">,\r\n    OmitStrong<Get<UseListboxParameters<ListElement, ListItemElement, LabelElement, M>, \"listboxParameters\">, \"groupingType\"> {\r\n    ref?: Ref<UseListboxReturnType<ListElement, ListItemElement, LabelElement, M>>;\r\n}\r\n\r\ninterface ListboxItemPropsBase<ListItemElement extends Element, M extends ListboxInfo<ListItemElement>> extends\r\n    Get2<UseListboxItemParameters<ListItemElement, ListboxInfo<ListItemElement>>, \"listboxParameters\", \"textContentParameters\">,\r\n    Pick<M, \"index\" | \"untabbable\" | \"unselectable\" | \"getSortValue\">,\r\n    OmitStrong<NonNullable<Get<UseListboxItemParameters<ListItemElement, ListboxInfo<ListItemElement>>, \"pressParameters\">>, \"focusSelf\"> {\r\n    focusSelf?: UseListboxItemParameters<ListItemElement, ListboxInfo<ListItemElement>>[\"info\"][\"focusSelf\"];\r\n    subInfo?: OmitStrong<UseListboxItemParameters<ListItemElement, ListboxInfo<ListItemElement>>[\"info\"], \"focusSelf\">;\r\n    ref?: Ref<UseListboxItemReturnType<ListItemElement, M>>;\r\n}\r\n\r\nexport interface ListboxProps<ListElement extends Element, ListItemElement extends Element, LabelElement extends Element, M extends ListboxInfo<ListItemElement>> extends PartialExcept<ListboxPropsBase<ListElement, ListItemElement, LabelElement, M>, \"ariaLabel\" | \"selectionLimit\" | \"selectedIndex\"> {\r\n    render(info: UseListboxReturnType<ListElement, ListItemElement, LabelElement, M>): VNode;\r\n}\r\nexport interface ListboxItemProps<ListItemElement extends Element, M extends ListboxInfo<ListItemElement>> extends PartialExcept<ListboxItemPropsBase<ListItemElement, M>, \"index\" | \"getSortValue\"> {\r\n    render(info: UseListboxItemReturnType<ListItemElement, ListboxInfo<ListItemElement>>): VNode;\r\n}\r\n\r\nconst ListboxContext = createContext<UseListboxContext<any, any, any>>(null!);\r\n\r\nconst ListboxGroupContext = createContext<null | UseListboxReturnType<any, any, any, any>>(null);\r\nexport const GroupedListbox = memo(function GroupedListbox<LabelElement extends Element>({ ariaLabel, selectionLimit, orientation, render }: Pick<ListboxProps<any, any, LabelElement, any>, \"orientation\" | \"ariaLabel\" | \"selectionLimit\" | \"render\">) {\r\n\r\n    const info = useListbox<any, any, LabelElement, any>({\r\n        labelParameters: { ariaLabel },\r\n        linearNavigationParameters: {\r\n            navigatePastEnd: \"passthrough\",\r\n            navigatePastStart: \"passthrough\",\r\n\r\n            disableHomeEndKeys: true,\r\n            pageNavigationSize: 1,\r\n            onNavigateLinear: null\r\n        },\r\n        staggeredChildrenParameters: { staggered: false },\r\n        paginatedChildrenParameters: { paginationMax: null, paginationMin: null },\r\n        listboxParameters: { selectionLimit, groupingType: \"with-groups\", selectedIndex: null, onSelectedIndexChange: null, orientation: orientation ?? \"vertical\" },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", undefined) },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: null, untabbable: false },\r\n        sortableChildrenParameters: { compare: null },\r\n        typeaheadNavigationParameters: {\r\n            collator: null,\r\n            noTypeahead: true,\r\n            typeaheadTimeout: Infinity,\r\n            onNavigateTypeahead: null\r\n        },\r\n        singleSelectionParameters: { ariaPropName: null, selectionMode: \"disabled\" }\r\n    });\r\n    info.context;\r\n    return (\r\n        <ListboxGroupContext.Provider value={info}>{render(info)}</ListboxGroupContext.Provider>\r\n    );\r\n\r\n})\r\n\r\nexport const Listbox = memoForwardRef(function Listbox<ListElement extends Element, ListItemElement extends Element, LabelElement extends Element, M extends ListboxInfo<ListItemElement> = ListboxInfo<ListItemElement>>({\r\n    ariaLabel,\r\n    collator,\r\n    compare,\r\n    disableHomeEndKeys,\r\n    getIndex,\r\n    selectedIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    noTypeahead,\r\n    onSelectedIndexChange,\r\n    onTabbableIndexChange,\r\n    staggered,\r\n    pageNavigationSize,\r\n    paginationMax,\r\n    paginationMin,\r\n    selectionLimit,\r\n    untabbable,\r\n    typeaheadTimeout,\r\n    orientation,\r\n    ariaPropName,\r\n    selectionMode,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    render\r\n}: ListboxProps<ListElement, ListItemElement, LabelElement, M>) {\r\n    const listboxGroupInfo = useContext(ListboxGroupContext);\r\n    ariaPropName ||= \"aria-selected\";\r\n    selectionMode ||= \"activation\";\r\n    untabbable ||= false;\r\n\r\n    const info = useListbox<ListElement, ListItemElement, LabelElement, M>({\r\n        labelParameters: { ariaLabel },\r\n        staggeredChildrenParameters: {\r\n            staggered: staggered || false\r\n        },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        paginatedChildrenParameters: {\r\n            paginationMax: paginationMax ?? null,\r\n            paginationMin: paginationMin ?? null\r\n        },\r\n        listboxParameters: { selectionLimit, groupingType: listboxGroupInfo == null ? \"without-groups\" : \"group\", selectedIndex, onSelectedIndexChange: onSelectedIndexChange ?? null, orientation: orientation ?? \"vertical\" },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, untabbable: untabbable ?? false },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        singleSelectionParameters: { ariaPropName, selectionMode }\r\n    });\r\n\r\n    return (\r\n        <ListboxContext.Provider value={info.context}>{render(info)}</ListboxContext.Provider>\r\n    );\r\n})\r\n\r\nexport const ListboxItem = memoForwardRef(function ListboxItem<ListboxItemElement extends Element, M extends ListboxInfo<ListboxItemElement> = ListboxInfo<ListboxItemElement>>({\r\n    unselectable,\r\n    focusSelf,\r\n    getText,\r\n    untabbable,\r\n    index,\r\n    render,\r\n    selected,\r\n    getSortValue,\r\n    allowRepeatPresses,\r\n    excludeEnter,\r\n    excludePointer,\r\n    longPressThreshold,\r\n    onPressingChange,\r\n    onMultiSelect,\r\n    ...subInfo\r\n}: ListboxItemProps<ListboxItemElement, M>) {\r\n    const context = useContextWithWarning(ListboxContext, \"listbox\");\r\n    console.assert(context != null, `This ListboxItem is not contained within a Listbox`);\r\n    const focusSelfDefault = useCallback((e: any) => { focus(e); }, []);\r\n    focusSelf ??= focusSelfDefault;\r\n\r\n    const info = useListboxItem<ListboxItemElement, M>({\r\n        info: { index, untabbable: untabbable || false, unselectable: unselectable || false, focusSelf, getSortValue, ...subInfo } as M,\r\n        context,\r\n        listboxParameters: { selected: selected ?? null, onMultiSelect: onMultiSelect || null },\r\n        pressParameters: { focusSelf, allowRepeatPresses, excludeEnter, excludePointer, longPressThreshold, onPressingChange },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n    });\r\n\r\n    return render(info);\r\n})\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus } from \"preact-prop-helpers\";\r\nimport { useCallback, useContext, useImperativeHandle } from \"preact/hooks\";\r\nimport { Get12, useContextWithWarning } from \"../props.js\";\r\nimport { useMenu, UseMenuContext, useMenuItem, UseMenuItemReturnType, UseMenuParameters, UseMenuReturnType } from \"../use-menu.js\";\r\nimport { UseMenubarSubInfo } from \"../use-menubar.js\";\r\nimport { MenubarItemProps } from \"./menubar.js\";\r\nimport { memoForwardRef, ParentDepthContext, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ninterface MenuPropsBase<MenuSurfaceElement extends Element, MenuParentElement extends Element, MenuItemElement extends Element, MenuButtonElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends //Omit<UseMenuParameters<E, K, I>, \"indexMangler\" | \"indexDemangler\" | \"onAfterChildLayoutEffect\" | \"onChildrenMountChange\" | \"onTabbableIndexChange\" | \"onTabbableRender\" | \"onTabbedInTo\" | \"onTabbedOutOf\"> & {\r\n    Get12<UseMenuParameters<MenuSurfaceElement, MenuParentElement, MenuButtonElement, MenuItemElement, M>, \"menuParameters\",\"menuSurfaceParameters\",\"linearNavigationParameters\",\"rovingTabIndexParameters\",\"typeaheadNavigationParameters\",\"dismissParameters\",\"staggeredChildrenParameters\",\"escapeDismissParameters\",\"rearrangeableChildrenParameters\",\"sortableChildrenParameters\",\"toolbarParameters\",\"singleSelectionParameters\"> {\r\n}\r\n\r\nexport interface MenuProps<MenuSurfaceElement extends Element, MenuParentElement extends Element, MenuItemElement extends Element, MenuButtonElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends PartialExcept<MenuPropsBase<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M>, \"open\" | \"onClose\" | \"onOpen\" | \"openDirection\" | \"orientation\"> {\r\n    render(menuInfo: UseMenuReturnType<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M>): VNode;\r\n}\r\n\r\nexport interface MenuItemProps<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends MenubarItemProps<MenuItemElement, M> {\r\n    render(info: UseMenuItemReturnType<MenuItemElement, M>): VNode<any>;\r\n}\r\n\r\nconst UntabbableContext = createContext(false);\r\nconst AriaPropNameContext = createContext<UseMenuParameters<any, any, any, any, any>[\"singleSelectionParameters\"][\"ariaPropName\"]>(\"aria-selected\")\r\nconst SelectionModeContext = createContext<UseMenuParameters<any, any, any, any, any>[\"singleSelectionParameters\"][\"selectionMode\"]>(\"focus\");\r\nconst MenuItemContext = createContext<UseMenuContext<any, any, any>>(null!);\r\n\r\nexport const Menu = memoForwardRef(function Menu<SurfaceElement extends Element, ParentElement extends Element, ChildElement extends Element, ButtonElement extends Element, M extends UseMenubarSubInfo<ChildElement> = UseMenubarSubInfo<ChildElement>>({\r\n    collator,\r\n    disableHomeEndKeys,\r\n    noTypeahead,\r\n    typeaheadTimeout,\r\n    orientation,\r\n    ariaPropName,\r\n    selectionMode,\r\n    untabbable,\r\n\r\n    onClose,\r\n    open,\r\n\r\n    openDirection,\r\n\r\n    onTabbableIndexChange,\r\n    closeOnBackdrop,\r\n    closeOnEscape,\r\n    closeOnLostFocus,\r\n    compare,\r\n    getIndex,\r\n    selectedIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    onSelectedIndexChange,\r\n    pageNavigationSize,\r\n    parentDepth,\r\n    disabled,\r\n    staggered,\r\n    onOpen,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n\r\n    getWindow,\r\n\r\n    render\r\n\r\n}: MenuProps<SurfaceElement, ParentElement, ChildElement, ButtonElement, M>, ref?: Ref<any>) {\r\n\r\n    const defaultParentDepth = useContext(ParentDepthContext);\r\n    let myDepth = (parentDepth ?? defaultParentDepth) + 1;\r\n    ariaPropName ||= \"aria-selected\";\r\n    selectionMode ||= \"activation\";\r\n    untabbable ||= false;\r\n\r\n\r\n    const info = useMenu<SurfaceElement, ParentElement, ChildElement, ButtonElement, M>({\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\"\r\n        },\r\n        staggeredChildrenParameters: {\r\n            staggered: staggered || false\r\n        },\r\n        dismissParameters: {\r\n            closeOnBackdrop: closeOnBackdrop ?? true,\r\n            closeOnEscape: closeOnEscape ?? true,\r\n            closeOnLostFocus: closeOnLostFocus ?? true,\r\n            onClose,\r\n            open\r\n        },\r\n        escapeDismissParameters: {\r\n            getWindow: useDefault(\"getWindow\", getWindow),\r\n            parentDepth: parentDepth ?? defaultParentDepth\r\n        },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        menuParameters: { openDirection, onOpen },\r\n        menuSurfaceParameters: {},\r\n        rovingTabIndexParameters: {\r\n            onTabbableIndexChange: onTabbableIndexChange ?? null,\r\n            untabbable: untabbable\r\n        },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        toolbarParameters: { orientation, selectedIndex: selectedIndex ?? null, onSelectedIndexChange: onSelectedIndexChange ?? null, disabled: disabled || false },\r\n        singleSelectionParameters: { ariaPropName: ariaPropName || \"aria-selected\", selectionMode: selectionMode || \"activation\" }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <AriaPropNameContext.Provider value={ariaPropName}>\r\n            <SelectionModeContext.Provider value={selectionMode}>\r\n                <UntabbableContext.Provider value={untabbable}>\r\n                    <ParentDepthContext.Provider value={myDepth}>\r\n                        <MenuItemContext.Provider value={info.context}>\r\n                            {render(info)}\r\n                        </MenuItemContext.Provider>\r\n                    </ParentDepthContext.Provider>\r\n                </UntabbableContext.Provider>\r\n            </SelectionModeContext.Provider>\r\n        </AriaPropNameContext.Provider >\r\n    )\r\n})\r\n\r\n\r\nexport const MenuItem = memoForwardRef(function MenuItem<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement> = UseMenubarSubInfo<MenuItemElement>>({\r\n    index,\r\n    untabbable,\r\n    getSortValue,\r\n    onPress,\r\n    getText,\r\n    role,\r\n    focusSelf,\r\n    unselectable,\r\n    onPressingChange,\r\n    render,\r\n    info: uinfo\r\n}: MenuItemProps<MenuItemElement, M>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(MenuItemContext, \"menu\");\r\n    const defaultFocusSelf = useCallback((e: MenuItemElement | null) => focus(e as Element as HTMLElement), []);\r\n    const info = useMenuItem<MenuItemElement, M>({\r\n        info: { index, untabbable, unselectable, focusSelf: focusSelf ?? defaultFocusSelf, getSortValue, ...uinfo } as M,\r\n        context,\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        menuItemParameters: { onPress: onPress ?? null, role: role ?? \"menuitem\" },\r\n        pressParameters: { onPressingChange }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <>{render(info)}</>\r\n    )\r\n});\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus } from \"preact-prop-helpers\";\r\nimport { useCallback, useImperativeHandle } from \"preact/hooks\";\r\nimport { Get3, Get9, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { useMenubar, useMenubarChild, UseMenubarContext, UseMenubarItemParameters, UseMenubarItemReturnType, UseMenubarParameters, UseMenubarReturnType, UseMenubarSubInfo } from \"../use-menubar.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\n\r\ninterface MenubarPropsBase<MenuParentElement extends Element, MenuItemElement extends Element, LabelElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends\r\n    Get9<UseMenubarParameters<MenuParentElement, MenuItemElement, M>, \"linearNavigationParameters\" , \"rovingTabIndexParameters\" , \"typeaheadNavigationParameters\" , \"rearrangeableChildrenParameters\" , \"sortableChildrenParameters\" , \"staggeredChildrenParameters\" , \"labelParameters\" , \"toolbarParameters\", \"singleSelectionParameters\"> {\r\n    ref?: Ref<UseMenubarReturnType<MenuParentElement, MenuItemElement, LabelElement, M>>;\r\n}\r\n\r\n\r\ninterface MenubarItemPropsBase<MenuItemElement extends Element> extends\r\n    Get3<UseMenubarItemParameters<MenuItemElement, UseMenubarSubInfo<MenuItemElement>>, \"menuItemParameters\", \"textContentParameters\", \"pressParameters\">,\r\n    Pick<UseMenubarSubInfo<MenuItemElement>, \"index\" | \"untabbable\" | \"unselectable\" | \"getSortValue\"> {\r\n    focusSelf?: UseMenubarItemParameters<MenuItemElement, UseMenubarSubInfo<MenuItemElement>>[\"info\"][\"focusSelf\"];\r\n    ref?: Ref<UseMenubarItemReturnType<MenuItemElement, UseMenubarSubInfo<MenuItemElement>>>;\r\n}\r\n\r\nexport interface MenubarProps<MenuParentElement extends Element, MenuItemElement extends Element, LabelElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends PartialExcept<MenubarPropsBase<MenuParentElement, MenuItemElement, LabelElement, M>, \"orientation\" | \"ariaLabel\"> {\r\n    render(info: UseMenubarReturnType<MenuParentElement, MenuItemElement, LabelElement, M>): VNode<any>;\r\n}\r\nexport interface MenubarItemProps<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>> extends PartialExcept<MenubarItemPropsBase<MenuItemElement>, \"index\" | \"getSortValue\"> {\r\n\r\n    render(info: UseMenubarItemReturnType<MenuItemElement, M>): VNode<any>;\r\n    info?: OmitStrong<M, keyof UseMenubarSubInfo<MenuItemElement>>;\r\n}\r\n\r\nexport const MenubarItemContext = createContext<UseMenubarContext<any, any, any>>(null!);\r\n\r\nexport const Menubar = memoForwardRef(function MenubarU<ContainerElement extends Element, ChildElement extends Element, LabelElement extends Element, M extends UseMenubarSubInfo<ChildElement> = UseMenubarSubInfo<ChildElement>>({\r\n    render,\r\n    collator,\r\n    disableHomeEndKeys,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    pageNavigationSize,\r\n    orientation,\r\n    staggered,\r\n    noTypeahead,\r\n    untabbable,\r\n    onTabbableIndexChange,\r\n    compare,\r\n    getIndex,\r\n    disabled,\r\n    selectedIndex,\r\n    onSelectedIndexChange,\r\n    typeaheadTimeout,\r\n    role,\r\n    ariaLabel,\r\n    ariaPropName,\r\n    selectionMode,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead\r\n}: MenubarProps<ContainerElement, ChildElement, LabelElement, M>, ref?: Ref<any>) {\r\n    ariaPropName ||= \"aria-selected\";\r\n    selectionMode ||= \"activation\";\r\n    untabbable ||= false;\r\n\r\n    const info = useMenubar<ContainerElement, ChildElement, LabelElement, M>({\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        toolbarParameters: { orientation, selectedIndex: selectedIndex ?? null, onSelectedIndexChange: onSelectedIndexChange ?? null, role: role ?? \"menubar\", disabled: disabled || false },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, untabbable },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        labelParameters: { ariaLabel },\r\n        singleSelectionParameters: { ariaPropName, selectionMode }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info)\r\n\r\n    return (\r\n        <MenubarItemContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </MenubarItemContext.Provider>\r\n    )\r\n})\r\n\r\n\r\nexport const MenubarItem = memoForwardRef(function MenuItemU<MenuItemElement extends Element, M extends UseMenubarSubInfo<MenuItemElement>>({\r\n    index,\r\n    render,\r\n    focusSelf,\r\n    untabbable,\r\n    getText,\r\n    unselectable,\r\n    onPress,\r\n    getSortValue,\r\n    onPressingChange,\r\n    role,\r\n    info: uinfo\r\n}: MenubarItemProps<MenuItemElement, M>, ref?: Ref<any>) {\r\n    const context = (useContextWithWarning(MenubarItemContext, \"menubar\"));\r\n    const defaultFocusSelf = useCallback((e: MenuItemElement | null) => focus(e as Element as HTMLElement), [])\r\n\r\n    const info = useMenubarChild<MenuItemElement, M>({\r\n        info: { index, untabbable: untabbable || false, unselectable: unselectable || false, focusSelf: focusSelf ?? defaultFocusSelf, getSortValue, ...uinfo } as M,\r\n        context,\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        menuItemParameters: { onPress: onPress ?? null, role: role ?? \"menuitem\" },\r\n        pressParameters: { onPressingChange }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <>{render(info)}</>\r\n    )\r\n});\r\n","import { Ref, VNode } from \"preact\";\r\nimport { UseAsyncHandlerParameters } from \"preact-prop-helpers\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get3 } from \"../props.js\";\r\nimport { UseProgressParameters, UseProgressReturnType, UseProgressWithHandlerParameters, UseProgressWithHandlerReturnType, useProgress, useProgressWithHandler } from \"../use-progress.js\";\r\nimport { PartialExcept, memoForwardRef } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\ninterface ProgressPropsBase<IndicatorElement extends Element, LabelElement extends Element> extends Get<UseProgressParameters<IndicatorElement, LabelElement>, \"labelParameters\">, Get<UseProgressParameters<IndicatorElement, LabelElement>, \"progressIndicatorParameters\"> {\r\n    ref?: Ref<UseProgressReturnType<IndicatorElement, LabelElement>>;\r\n}\r\n\r\ninterface ProgressWithHandlerPropsBase<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element> extends\r\n    Get3<UseProgressWithHandlerParameters<EventType, CaptureType, IndicatorElement, LabelElement>, \"labelParameters\",\"progressIndicatorParameters\",\"progressWithHandlerParameters\">,\r\n    UseAsyncHandlerParameters<EventType, CaptureType> {\r\n    ref?: Ref<UseProgressReturnType<IndicatorElement, LabelElement>>;\r\n}\r\n\r\nexport interface ProgressProps<IndicatorElement extends Element, LabelElement extends Element> extends PartialExcept<ProgressPropsBase<IndicatorElement, LabelElement>, \"tagIndicator\" | \"ariaLabel\"> {\r\n    render(info: UseProgressReturnType<IndicatorElement, LabelElement>): VNode<any>;\r\n}\r\n\r\nexport interface ProgressWithHandlerProps<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element> extends PartialExcept<ProgressWithHandlerPropsBase<EventType, CaptureType, IndicatorElement, LabelElement>, \"capture\" | \"tagIndicator\" | \"ariaLabel\" | \"asyncHandler\"> {\r\n    render(info: UseProgressWithHandlerReturnType<EventType, CaptureType, IndicatorElement, LabelElement>): VNode<any>;\r\n}\r\n\r\nexport const Progress = memoForwardRef(function Progress<IndicatorElement extends Element, LabelElement extends Element>({ tagIndicator, ariaLabel, max, render, value, valueText }: ProgressProps<IndicatorElement, LabelElement>, ref?: Ref<any>) {\r\n    const info = useProgress<IndicatorElement, LabelElement>({\r\n        labelParameters: { ariaLabel },\r\n        progressIndicatorParameters: {\r\n            max: max ?? 100,\r\n            value: value ?? \"indeterminate\",\r\n            valueText: valueText ?? null,\r\n            tagIndicator\r\n        }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n})\r\n\r\nexport const ProgressWithHandler = memoForwardRef(function ProgressWithHandler<EventType, CaptureType, IndicatorElement extends Element, LabelElement extends Element>({ ariaLabel, forciblyPending, render, tagIndicator, asyncHandler, capture, debounce, throttle }: ProgressWithHandlerProps<EventType, CaptureType, IndicatorElement, LabelElement>, ref?: Ref<any>) {\r\n    const info = useProgressWithHandler<EventType, CaptureType, IndicatorElement, LabelElement>({\r\n        asyncHandlerParameters: { asyncHandler, capture, debounce, throttle },\r\n        labelParameters: { ariaLabel },\r\n        progressIndicatorParameters: { tagIndicator },\r\n        progressWithHandlerParameters: { forciblyPending: forciblyPending ?? false }\r\n    })\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (render(info))\r\n});\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { useStableGetter } from \"preact-prop-helpers\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get5, Get9, useContextWithWarning } from \"../props.js\";\r\nimport { FocusableLabelElement, LabelPosition } from \"../use-label.js\";\r\nimport { RadioContext, RadioSubInfo, useRadio, useRadioGroup, UseRadioGroupParameters, UseRadioGroupReturnType, UseRadioParameters, UseRadioReturnType } from \"../use-radio-group.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ninterface RadioGroupPropsBase<V extends string | number, GroupElement extends Element, GroupLabelElement extends Element, TabbableChildElement extends Element> extends\r\n    Get9<UseRadioGroupParameters<V, GroupElement, GroupLabelElement, TabbableChildElement>, \"radioGroupParameters\", \"linearNavigationParameters\", \"labelParameters\", \"radioGroupParameters\", \"rearrangeableChildrenParameters\", \"staggeredChildrenParameters\", \"sortableChildrenParameters\", \"rovingTabIndexParameters\", \"typeaheadNavigationParameters\"> {\r\n    ref?: Ref<UseRadioGroupReturnType<V, GroupElement, GroupLabelElement, TabbableChildElement>>;\r\n}\r\n\r\ninterface RadioPropsBase<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element, V extends string | number> extends\r\n    Get5<UseRadioParameters<LP, V, InputElement, LabelElement, RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V>>, \"radioParameters\", \"checkboxLikeParameters\", \"labelParameters\", \"textContentParameters\", \"pressParameters\">,\r\n    Pick<RadioSubInfo<any, V>, \"index\" | \"untabbable\" | \"unselectable\"> {\r\n    focusSelf?: UseRadioParameters<LP, V, InputElement, LabelElement, RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V>>[\"info\"][\"focusSelf\"];\r\n}\r\n\r\nexport interface RadioGroupProps<V extends string | number, GroupElement extends Element, GroupLabelElement extends Element, TabbableChildElement extends Element> extends PartialExcept<RadioGroupPropsBase<V, GroupElement, GroupLabelElement, TabbableChildElement>, \"ariaLabel\" | \"name\" | \"selectedValue\" | \"onSelectedValueChange\"> {\r\n    render(info: UseRadioGroupReturnType<V, GroupElement, GroupLabelElement, TabbableChildElement>): VNode<any>;\r\n}\r\nexport interface RadioProps<LP extends LabelPosition, InputElement extends Element, LabelElement extends Element, V extends string | number> extends PartialExcept<RadioPropsBase<LP, InputElement, LabelElement, V>, \"index\" | \"value\" | \"ariaLabel\" | \"labelPosition\" | \"tagInput\" | \"tagLabel\"> {\r\n    render(info: UseRadioReturnType<LP, V, InputElement, LabelElement, RadioSubInfo<FocusableLabelElement<LP, InputElement, LabelElement>, V>>): VNode<any>;\r\n}\r\n\r\nconst RadioContext = createContext<RadioContext<any, any, any, any>>(null!);\r\nexport const RadioGroup = memoForwardRef(function RadioGroup<V extends string | number, GroupElement extends HTMLElement, GroupLabelElement extends HTMLElement, TabbableChildElement extends HTMLElement>({\r\n    render,\r\n    name,\r\n    onSelectedValueChange,\r\n    collator,\r\n    disableHomeEndKeys,\r\n    arrowKeyDirection,\r\n    noTypeahead,\r\n    typeaheadTimeout,\r\n    ariaLabel,\r\n    compare,\r\n    staggered,\r\n    getIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    selectedValue,\r\n    untabbable,\r\n    onTabbableIndexChange,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    pageNavigationSize,\r\n    ...rest\r\n}: RadioGroupProps<V, GroupElement, GroupLabelElement, TabbableChildElement>, ref?: Ref<any>) {\r\n    untabbable ??= false;\r\n\r\n    const info = useRadioGroup<V, GroupElement, GroupLabelElement, TabbableChildElement>({\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            arrowKeyDirection: arrowKeyDirection ?? \"either\",\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        labelParameters: { ariaLabel },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        radioGroupParameters: { name, onSelectedValueChange, selectedValue },\r\n        rovingTabIndexParameters: {\r\n            onTabbableIndexChange: onTabbableIndexChange ?? null,\r\n            untabbable\r\n        },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <RadioContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </RadioContext.Provider>\r\n    )\r\n});\r\n\r\nexport const Radio = memoForwardRef(function Radio<LP extends LabelPosition, V extends string | number, InputElement extends Element, LabelElement extends Element>({\r\n    unselectable,\r\n    disabled,\r\n    index,\r\n    render,\r\n    value,\r\n    ariaLabel,\r\n    focusSelf,\r\n    labelPosition,\r\n    untabbable,\r\n    tagInput,\r\n    tagLabel,\r\n    getText,\r\n    longPressThreshold\r\n}: RadioProps<LP, InputElement, LabelElement, V>, ref?: Ref<any>) {\r\n    const defaultFocusSelf = () => info.checkboxLikeReturn.focusSelf();\r\n    focusSelf ??= defaultFocusSelf;\r\n\r\n    const context = useContextWithWarning(RadioContext, \"radio group\");\r\n    console.assert(context != null, `This Radio is not contained within a RadioGroup`);\r\n    const getValue = useStableGetter(value);\r\n    const info = useRadio<LP, InputElement, LabelElement, V>({\r\n        radioParameters: { value },\r\n        checkboxLikeParameters: { disabled: disabled ?? false },\r\n        info: { index, focusSelf, untabbable: untabbable || false, unselectable: !!unselectable, getSortValue: getValue },\r\n        context,\r\n        labelParameters: { ariaLabel, labelPosition, tagInput, tagLabel },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n        pressParameters: { longPressThreshold }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n});\r\n","import { ComponentChildren, createContext, Ref, VNode } from \"preact\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { useContextWithWarning } from \"../props.js\";\r\nimport { SliderContext, SliderThumbInfo, useSlider, UseSliderParameters, UseSliderReturnType, useSliderThumb, UseSliderThumbParameters, UseSliderThumbReturnType } from \"../use-slider.js\";\r\nimport { memoForwardRef } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\nexport interface SliderProps extends Get<UseSliderParameters<SliderThumbInfo>, \"managedChildrenParameters\">, Get<UseSliderParameters<SliderThumbInfo>, \"sliderParameters\"> {\r\n    children: ComponentChildren;\r\n    ref?: Ref<UseSliderReturnType<SliderThumbInfo>>;\r\n}\r\n\r\nexport interface SliderThumbProps<ThumbElement extends Element> extends Pick<SliderThumbInfo, \"index\">, Get<UseSliderThumbParameters<ThumbElement, SliderThumbInfo>, \"sliderThumbParameters\"> {\r\n    render(info: UseSliderThumbReturnType<ThumbElement, SliderThumbInfo>): VNode;\r\n}\r\n\r\nconst SliderThumbContext = createContext<SliderContext<any>>(null!);\r\n\r\nexport const Slider = memoForwardRef(function Slider({ max, min, onAfterChildLayoutEffect, onChildrenMountChange, children }: SliderProps, ref?: Ref<any>) {\r\n    const info = useSlider({\r\n        managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange },\r\n        sliderParameters: { max, min }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <SliderThumbContext.Provider value={info.context}>{children}</SliderThumbContext.Provider>\r\n    );\r\n})\r\n\r\nexport const SliderThumb = memoForwardRef(function SliderThumbU<ThumbElement extends Element>({ label, tag, value, max, min, onValueChange, index, render, valueText }: SliderThumbProps<ThumbElement>, ref?: Ref<any>) {\r\n    const context = (useContextWithWarning(SliderThumbContext, \"slider\") as SliderContext<SliderThumbInfo>);\r\n    console.assert(context != null, `This SliderThumb is not contained within a Slider`);\r\n\r\n    const info = useSliderThumb<ThumbElement, SliderThumbInfo>({\r\n        context,\r\n        info: { index },\r\n        sliderThumbParameters: { label, tag, value, max, min, onValueChange, valueText },\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n});\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus, useStableCallback } from \"preact-prop-helpers\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { Get3, Get4, Get9, useContextWithWarning } from \"../props.js\";\r\nimport { TableCellInfo, TableRowInfo, useTable, useTableCell, UseTableCellParameters, UseTableCellReturnType, UseTableContext, UseTableParameters, UseTableReturnType, useTableRow, UseTableRowContext, UseTableRowParameters, UseTableRowReturnType, useTableSection, UseTableSectionContext, UseTableSectionParameters, UseTableSectionReturnType } from \"../use-table.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\ntype Get2<T, K extends keyof T, K2 extends keyof T[K]> = T[K][K2];\r\n\r\ninterface TablePropsBase<TableElement extends Element, LabelElement extends Element> extends\r\n    Get<UseTableParameters<TableElement, LabelElement>, \"labelParameters\">,\r\n    Get<UseTableParameters<TableElement, LabelElement>, \"tableParameters\"> {\r\n    ref?: Ref<UseTableReturnType<TableElement, LabelElement>>;\r\n}\r\n\r\ninterface TableSectionPropsBase<SectionElement extends Element, RowElement extends Element, CellElement extends Element, RM extends TableRowInfo<RowElement, CellElement>, CM extends TableCellInfo<CellElement>> extends\r\n    Get9<UseTableSectionParameters<SectionElement, RowElement, CellElement, RM>, \"gridNavigationParameters\", \"linearNavigationParameters\", \"rearrangeableChildrenParameters\", \"rovingTabIndexParameters\", \"singleSelectionParameters\", \"typeaheadNavigationParameters\", \"paginatedChildrenParameters\", \"staggeredChildrenParameters\", \"tableSectionParameters\"> {\r\n    ref?: Ref<UseTableSectionReturnType<SectionElement, RowElement, CellElement, RM, CM>>;\r\n}\r\n\r\ninterface TableRowPropsBase<RowElement extends Element, CellElement extends Element, RM extends TableRowInfo<RowElement, CellElement>, CM extends TableCellInfo<CellElement>> extends\r\n    Pick<RM, \"index\" | \"unselectable\">,\r\n    Get4<UseTableRowParameters<RowElement, CellElement, RM, CM>, \"textContentParameters\", \"tableRowParameters\", \"linearNavigationParameters\", \"rovingTabIndexParameters\"> {\r\n    ref?: Ref<UseTableRowReturnType<RowElement, CellElement, RM, CM>>;\r\n}\r\n\r\ninterface TableCellPropsBase<CellElement extends Element, CM extends TableCellInfo<CellElement>> extends\r\n    Pick<CM, \"index\" | \"untabbable\">,\r\n    Get3<UseTableCellParameters<CellElement, CM>, \"tableCellParameters\", \"gridNavigationCellParameters\", \"textContentParameters\"> {\r\n    focusSelf: CM[\"focusSelf\"];\r\n    getSortValue: CM[\"getSortValue\"];\r\n    ref?: Ref<UseTableCellReturnType<CellElement, CM>>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport interface TableProps<TableElement extends Element, LabelElement extends Element> extends PartialExcept<TablePropsBase<TableElement, LabelElement>, \"tagTable\" | \"selectionLimit\" | \"ariaLabel\"> {\r\n    render(info: UseTableReturnType<TableElement, LabelElement>): VNode;\r\n}\r\n\r\nexport interface TableSectionProps<SectionElement extends Element, RowElement extends Element, CellElement extends Element, RM extends TableRowInfo<RowElement, CellElement>, CM extends TableCellInfo<CellElement>> extends PartialExcept<TableSectionPropsBase<SectionElement, RowElement, CellElement, RM, CM>, \"tagTableSection\" | \"location\"> {\r\n    render(info: UseTableSectionReturnType<SectionElement, RowElement, CellElement, RM, CM>): VNode;\r\n}\r\n\r\nexport interface TableRowProps<RowElement extends Element, CellElement extends Element, RM extends TableRowInfo<RowElement, CellElement>, CM extends TableCellInfo<CellElement>> extends PartialExcept<TableRowPropsBase<RowElement, CellElement, RM, CM>, \"index\" | \"tagTableRow\"> {\r\n    render(info: UseTableRowReturnType<RowElement, CellElement, RM, CM>): VNode;\r\n}\r\n\r\nexport interface TableCellProps<CellElement extends Element, CM extends TableCellInfo<CellElement>> extends PartialExcept<TableCellPropsBase<CellElement, CM>, \"getSortValue\" | \"tagTableCell\" | \"index\" | \"focusSelf\"> {\r\n    render(info: UseTableCellReturnType<CellElement, CM>): VNode;\r\n}\r\n\r\n\r\nconst TableContext = createContext<UseTableContext>(null!);\r\nconst TableSectionContext = createContext<UseTableSectionContext<any, any, any, TableRowInfo<any, any>, TableCellInfo<any>>>(null!);\r\nconst TableRowContext = createContext<UseTableRowContext<any, any, TableCellInfo<any>>>(null!);\r\n\r\nexport const Table = memoForwardRef(function TableU<TableElement extends Element, LabelElement extends Element>({\r\n    ariaLabel,\r\n    selectionLimit,\r\n    tagTable,\r\n    render\r\n}: TableProps<TableElement, LabelElement>, ref?: Ref<any>) {\r\n    const info = useTable<TableElement, LabelElement>({\r\n        labelParameters: { ariaLabel },\r\n        tableParameters: { selectionLimit, tagTable,  }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return <TableContext.Provider value={info.context}>{render(info)}</TableContext.Provider>\r\n})\r\n\r\nexport const TableSection = memoForwardRef(function TableSection<SectionElement extends Element, RowElement extends Element, CellElement extends Element>({\r\n    disableHomeEndKeys,\r\n    getIndex,\r\n    initiallySelectedIndex,\r\n    untabbable,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    onSelectedIndexChange,\r\n    onTabbableColumnChange,\r\n    onTabbableIndexChange,\r\n    pageNavigationSize,\r\n    paginationMax,\r\n    paginationMin,\r\n    staggered,\r\n    render,\r\n    location,\r\n    ariaPropName,\r\n    selectionMode,\r\n    onNavigateLinear,\r\n    collator,\r\n    noTypeahead,\r\n    onNavigateTypeahead,\r\n    typeaheadTimeout,\r\n    tagTableSection\r\n}: TableSectionProps<SectionElement, RowElement, CellElement, TableRowInfo<RowElement, CellElement>, TableCellInfo<CellElement>>) {\r\n    untabbable = (untabbable ?? false);\r\n    ariaPropName ??= \"aria-selected\";\r\n    selectionMode ??= \"activation\";\r\n\r\n    const info = useTableSection<SectionElement, RowElement, CellElement, TableRowInfo<RowElement, CellElement>, TableCellInfo<CellElement>>({\r\n        gridNavigationParameters: { onTabbableColumnChange: onTabbableColumnChange ?? null },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        paginatedChildrenParameters: {\r\n            paginationMax: paginationMax ?? null,\r\n            paginationMin: paginationMin ?? null\r\n        },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, untabbable },\r\n        singleSelectionParameters: { initiallySelectedIndex: initiallySelectedIndex ?? null, onSelectedIndexChange: onSelectedIndexChange ?? null, ariaPropName, selectionMode },\r\n        context: useContextWithWarning(TableContext, \"table\"),\r\n        tableSectionParameters: { tagTableSection, location },\r\n    })\r\n\r\n    return (\r\n        <TableSectionContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </TableSectionContext.Provider>\r\n    )\r\n});\r\n\r\nexport const TableRow = memoForwardRef(function TableRowU<RowElement extends Element, Cellement extends Element>({\r\n    index,\r\n    getText,\r\n    tagTableRow,\r\n    onTabbableIndexChange,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    selected,\r\n    unselectable,\r\n    initiallyTabbedIndex,\r\n    untabbable,\r\n    render\r\n}: TableRowProps<RowElement, Cellement, TableRowInfo<RowElement, Cellement>, TableCellInfo<Cellement>>, ref?: Ref<any>) {\r\n\r\n    const cx1 = useContextWithWarning(TableSectionContext, \"table section\");\r\n    console.assert(cx1 != null, `This TableRow is not contained within a TableSection`);\r\n    untabbable ||= (false || cx1.rovingTabIndexContext.untabbable);\r\n\r\n    const info = useTableRow<RowElement, Cellement, TableRowInfo<RowElement, Cellement>, TableCellInfo<Cellement>>({\r\n        info: { index, unselectable: unselectable || false, untabbable: untabbable || false },\r\n        context: cx1,\r\n        textContentParameters: {\r\n            getText: useDefault(\"getText\", getText)\r\n        },\r\n        tableRowParameters: {\r\n            selected: selected ?? null,\r\n            tagTableRow\r\n        },\r\n        linearNavigationParameters: {\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\"\r\n        },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, initiallyTabbedIndex: initiallyTabbedIndex ?? null, untabbable },\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <TableRowContext.Provider value={info.context}>{render(info)}</TableRowContext.Provider>\r\n    )\r\n})\r\n\r\nexport const TableCell = memoForwardRef(function TableCell<CellElement extends Element>({\r\n    index,\r\n    getText,\r\n    focusSelf,\r\n    untabbable,\r\n    tagTableCell,\r\n    render,\r\n    colSpan,\r\n    getSortValue,\r\n}: TableCellProps<CellElement, TableCellInfo<CellElement>>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(TableRowContext, \"table row\");\r\n    console.assert(context != null, `This TableCell is not contained within a TableRow`);\r\n    const defaultFocusSelf = useStableCallback((e: CellElement) => { focus(e as Element as HTMLElement) }, []);\r\n    const info = useTableCell<CellElement, TableCellInfo<CellElement>>({\r\n        info: { index, focusSelf: focusSelf ?? defaultFocusSelf, untabbable: untabbable || false, getSortValue },\r\n        context,\r\n        gridNavigationCellParameters: { colSpan: colSpan ?? 1 },\r\n        tableCellParameters: { tagTableCell },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n})\r\n\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus } from \"preact-prop-helpers\";\r\nimport { useCallback, useImperativeHandle } from \"preact/hooks\";\r\nimport { Get10, Get2, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { TabInfo, TabPanelInfo, useTab, useTabPanel, UseTabPanelReturnType, UseTabPanelsContext, UseTabParameters, UseTabReturnType, useTabs, UseTabsContext, UseTabsParameters, UseTabsReturnType } from \"../use-tabs.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\ninterface TabsPropsBase<TabContainerElement extends Element, TabElement extends Element, TabLabelElement extends Element, M extends TabInfo<TabElement>> extends\r\n    Get10<UseTabsParameters<TabContainerElement, TabElement, TabLabelElement, M>, \"labelParameters\",\"linearNavigationParameters\",\"rearrangeableChildrenParameters\",\"rovingTabIndexParameters\",\"singleSelectionParameters\",\"sortableChildrenParameters\",\"staggeredChildrenParameters\",\"tabsParameters\",\"typeaheadNavigationParameters\", \"singleSelectionParameters\"> {\r\n}\r\n\r\ninterface TabPropsBase<TabElement extends Element, M extends TabInfo<TabElement>> extends\r\n    Pick<M, \"index\" | \"untabbable\" | \"unselectable\" | \"getSortValue\">,\r\n    Get2<UseTabParameters<TabElement, M>, \"pressParameters\",\"textContentParameters\"> {\r\n    focusSelf: M[\"focusSelf\"];\r\n    info?: OmitStrong<M, keyof TabInfo<TabElement>>\r\n}\r\n\r\ninterface TabPanelPropsBase<M extends TabPanelInfo> extends Pick<M, \"index\"> {\r\n    info?: OmitStrong<M, keyof TabPanelInfo>\r\n}\r\n\r\nexport interface TabsProps<TabContainerElement extends Element, TabElement extends Element, TabLabelElement extends Element, M extends TabInfo<TabElement>> extends PartialExcept<TabsPropsBase<TabContainerElement, TabElement, TabLabelElement, M>, \"orientation\" | \"ariaLabel\"> {\r\n    render(info: UseTabsReturnType<TabContainerElement, TabElement, TabLabelElement, M>): VNode<any>;\r\n}\r\n\r\nexport interface TabProps<TabElement extends Element, M extends TabInfo<TabElement>> extends PartialExcept<TabPropsBase<TabElement, M>, \"index\" | \"getSortValue\"> {\r\n    render(info: UseTabReturnType<TabElement, M>): VNode<any>;\r\n}\r\n\r\nexport interface TabPanelProps<PanelElement extends Element, M extends TabPanelInfo> extends PartialExcept<TabPanelPropsBase<M>, \"index\"> {\r\n    render(info: UseTabPanelReturnType<PanelElement>): VNode<any>;\r\n}\r\n\r\nconst TabsContext = createContext<UseTabsContext<any, any, any>>(null!);\r\nconst TabPanelsContext = createContext<UseTabPanelsContext<any>>(null!);\r\nconst UntabbableContext = createContext(false);\r\nconst SelectionModeContext = createContext<NonNullable<UseTabsParameters<any, any, any, any>[\"singleSelectionParameters\"][\"selectionMode\"]>>(\"focus\");\r\n\r\nexport const Tabs = memoForwardRef(function Tabs<TabContainerElement extends Element, TabElement extends Element, TabLabelElement extends Element, M extends TabInfo<TabElement> = TabInfo<TabElement>>({\r\n    ariaLabel,\r\n    collator,\r\n    compare,\r\n    disableHomeEndKeys,\r\n    getIndex,\r\n    initiallySelectedIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    noTypeahead,\r\n    onSelectedIndexChange,\r\n    onTabbableIndexChange,\r\n    orientation,\r\n    staggered,\r\n    pageNavigationSize,\r\n    localStorageKey,\r\n    selectionMode,\r\n    untabbable,\r\n    typeaheadTimeout,\r\n    role,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead,\r\n    render\r\n}: TabsProps<TabContainerElement, TabElement, TabLabelElement, M>, ref?: Ref<any>) {\r\n    untabbable ??= false;\r\n    selectionMode ??= \"focus\";\r\n\r\n    const info = useTabs<TabContainerElement, TabElement, TabLabelElement, M>({\r\n        labelParameters: { ariaLabel },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        rovingTabIndexParameters: {\r\n            onTabbableIndexChange: onTabbableIndexChange ?? null,\r\n            untabbable\r\n        },\r\n        singleSelectionParameters: { initiallySelectedIndex: initiallySelectedIndex ?? 0, onSelectedIndexChange: onSelectedIndexChange ?? null, selectionMode },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        tabsParameters: { orientation, role, localStorageKey: localStorageKey ?? null },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        }\r\n    });\r\n\r\n    const { contextPanels, contextTabs } = info;\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n\r\n    return (\r\n        <UntabbableContext.Provider value={untabbable}>\r\n            <SelectionModeContext.Provider value={selectionMode}>\r\n                <TabsContext.Provider value={contextTabs}>\r\n                    <TabPanelsContext.Provider value={contextPanels}>\r\n                        {render(info)}\r\n                    </TabPanelsContext.Provider>\r\n                </TabsContext.Provider>\r\n            </SelectionModeContext.Provider>\r\n        </UntabbableContext.Provider>\r\n    )\r\n})\r\n\r\nexport const Tab = memoForwardRef(function Tab<E extends Element, M extends TabInfo<E> = TabInfo<E>>({\r\n    unselectable,\r\n    focusSelf,\r\n    untabbable,\r\n    index,\r\n    getText,\r\n    getSortValue,\r\n    render,\r\n    longPressThreshold,\r\n    onPressingChange,\r\n    info: uinfo\r\n}: TabProps<E, M>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(TabsContext, \"tabs\");\r\n    console.assert(context != null, `This Tab is not contained within a Tabs component`);\r\n    const focusSelfDefault = useCallback((e: any) => { focus(e); }, []);\r\n    const info = useTab<E, M>({\r\n        info: { index, unselectable, untabbable, focusSelf: focusSelf ?? focusSelfDefault, getSortValue, ...uinfo } as M,\r\n        context,\r\n        pressParameters: { focusSelf: focusSelfDefault, longPressThreshold, onPressingChange },\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) }\r\n    });\r\n    useImperativeHandle(ref!, () => info);\r\n    return render(info);\r\n})\r\n\r\nexport function TabPanel<E extends Element, M extends TabPanelInfo = TabPanelInfo>({\r\n    index,\r\n    render,\r\n    info: uinfo\r\n}: TabPanelProps<E, M>) {\r\n    const context = useContextWithWarning(TabPanelsContext, \"tabs\");\r\n    const info = useTabPanel<E, M>({\r\n        context,\r\n        info: { index, ...uinfo } as M\r\n    });\r\n    return render(info);\r\n}\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { useImperativeHandle } from \"preact/hooks\";\r\nimport { useContextWithWarning } from \"../props.js\";\r\nimport { ToastInfo, ToastsContext, useToast, UseToastParameters, UseToastReturnType, useToasts, UseToastsParameters, UseToastsReturnType } from \"../use-toasts.js\";\r\nimport { memoForwardRef } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\nexport interface ToastsProps<ContainerType extends Element> extends Get<UseToastsParameters, \"managedChildrenParameters\">, Get<UseToastsParameters, \"toastsParameters\"> {\r\n    ref?: Ref<UseToastsReturnType<ContainerType, ToastInfo>>;\r\n    render(info: UseToastsReturnType<ContainerType, ToastInfo>): VNode;\r\n}\r\n\r\nexport interface ToastProps<E extends Element> extends Get<UseToastParameters<ToastInfo>, \"info\">, Get<UseToastParameters<ToastInfo>, \"toastParameters\"> {\r\n    ref?: Ref<UseToastReturnType<E>>;\r\n    render(args: UseToastReturnType<E>): VNode;\r\n}\r\n\r\n\r\nconst ToastContext = createContext<ToastsContext<ToastInfo>>(null!);\r\n\r\nexport const Toasts = memoForwardRef(function Toasts<ContainerType extends Element>({ onAfterChildLayoutEffect, onChildrenMountChange, render, visibleCount }: ToastsProps<ContainerType>, ref?: Ref<any>) {\r\n    const info = useToasts<ContainerType>({ managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange }, toastsParameters: { visibleCount } });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <ToastContext.Provider value={info.context}>\r\n            {render(info)}\r\n        </ToastContext.Provider>\r\n    );\r\n})\r\n\r\nexport const Toast = memoForwardRef(function Toast<E extends Element>({ render, index, timeout, politeness, children }: ToastProps<E>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(ToastContext, \"toasts provider\");\r\n    console.assert(context != null, `This Toast was not rendered within a Toasts provider`);\r\n    const info = useToast<E>({\r\n        info: { index },\r\n        toastParameters: { timeout, politeness, children },\r\n        context\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return render(info);\r\n})\r\n","import { createContext, Ref, VNode } from \"preact\";\r\nimport { focus } from \"preact-prop-helpers\";\r\nimport { useCallback, useImperativeHandle } from \"preact/hooks\";\r\nimport { Get, Get9, OmitStrong, useContextWithWarning } from \"../props.js\";\r\nimport { useToolbar, useToolbarChild, UseToolbarChildParameters, UseToolbarChildReturnType, UseToolbarContext, UseToolbarParameters, UseToolbarReturnType, UseToolbarSubInfo } from \"../use-toolbar.js\";\r\nimport { memoForwardRef, PartialExcept, useDefault } from \"./util.js\";\r\n\r\n\r\nexport interface ToolbarPropsBase<ToolbarContainerElement extends Element, ToolbarChildElement extends Element, LabelElement extends Element, M extends UseToolbarSubInfo<ToolbarChildElement>> extends\r\n    Get9<UseToolbarParameters<ToolbarContainerElement, ToolbarChildElement, M>, \"linearNavigationParameters\", \"rovingTabIndexParameters\", \"typeaheadNavigationParameters\", \"sortableChildrenParameters\", \"rearrangeableChildrenParameters\", \"labelParameters\", \"staggeredChildrenParameters\", \"toolbarParameters\", \"singleSelectionParameters\"> {\r\n    ref?: Ref<UseToolbarReturnType<ToolbarContainerElement, ToolbarChildElement, LabelElement, M>>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport interface ToolbarChildPropsBase<ToolbarChildElement extends Element, M extends UseToolbarSubInfo<ToolbarChildElement>> extends\r\n    Get<UseToolbarChildParameters<ToolbarChildElement, M>, \"textContentParameters\">,\r\n    Get<UseToolbarChildParameters<ToolbarChildElement, M>, \"toolbarChildParameters\">,\r\n    Pick<Get<UseToolbarChildParameters<any, any>, \"info\">, \"getSortValue\" | \"index\" | \"untabbable\" | \"unselectable\"> {\r\n    focusSelf?: M[\"focusSelf\"];\r\n    info?: OmitStrong<Get<UseToolbarChildParameters<ToolbarChildElement, M>, \"info\">, never>\r\n    ref?: Ref<UseToolbarChildReturnType<ToolbarChildElement, M>>;\r\n}\r\n\r\nexport interface ToolbarProps<ToolbarContainerElement extends Element, ToolbarChildElement extends Element, LabelElement extends Element, M extends UseToolbarSubInfo<ToolbarChildElement>> extends PartialExcept<ToolbarPropsBase<ToolbarContainerElement, ToolbarChildElement, LabelElement, M>, \"orientation\" | \"ariaLabel\"> {\r\n    render(info: UseToolbarReturnType<ToolbarContainerElement, ToolbarChildElement, LabelElement, M>): VNode<any>;\r\n}\r\n\r\nexport interface ToolbarChildProps<ToolbarChildElement extends Element, M extends UseToolbarSubInfo<ToolbarChildElement>> extends PartialExcept<ToolbarChildPropsBase<ToolbarChildElement, M>, \"getSortValue\" | \"index\" | \"disabledProp\"> {\r\n    render(info: UseToolbarChildReturnType<ToolbarChildElement, M>): VNode<any>;\r\n}\r\n\r\n// TODO: Are there performance/sanity implications for having one context per primitive?\r\nconst UntabbableContext = createContext(false);\r\nconst AriaPropNameContext = createContext<UseToolbarParameters<any, any, any>[\"singleSelectionParameters\"][\"ariaPropName\"]>(\"aria-selected\")\r\nconst SelectionModeContext = createContext<UseToolbarParameters<any, any, any>[\"singleSelectionParameters\"][\"selectionMode\"]>(\"focus\");\r\nconst ToolbarContext = createContext<UseToolbarContext<any, any, any>>(null!);\r\n\r\nexport const Toolbar = memoForwardRef(function ToolbarU<ContainerElement extends Element, ChildElement extends Element, LabelElement extends Element, M extends UseToolbarSubInfo<ChildElement> = UseToolbarSubInfo<ChildElement>>({\r\n    render,\r\n    role,\r\n    collator,\r\n    disableHomeEndKeys,\r\n    disabled,\r\n    compare,\r\n    getIndex,\r\n    navigatePastEnd,\r\n    navigatePastStart,\r\n    pageNavigationSize,\r\n    selectedIndex,\r\n    onSelectedIndexChange,\r\n    orientation,\r\n    noTypeahead,\r\n    onTabbableIndexChange,\r\n    typeaheadTimeout,\r\n    staggered,\r\n    ariaLabel,\r\n    ariaPropName,\r\n    selectionMode,\r\n    untabbable,\r\n    onNavigateLinear,\r\n    onNavigateTypeahead\r\n}: ToolbarProps<ContainerElement, ChildElement, LabelElement, M>, ref?: Ref<any>) {\r\n    ariaPropName ??= \"aria-selected\";\r\n    selectionMode ??= \"activation\";\r\n    untabbable ||= false\r\n\r\n    const listboxReturnType = useToolbar<ContainerElement, ChildElement, LabelElement, M>({\r\n        rearrangeableChildrenParameters: { getIndex: useDefault(\"getIndex\", getIndex) },\r\n        sortableChildrenParameters: { compare: compare ?? null },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear,\r\n            disableHomeEndKeys: useDefault(\"disableHomeEndKeys\", disableHomeEndKeys),\r\n            navigatePastEnd: navigatePastEnd ?? \"wrap\",\r\n            navigatePastStart: navigatePastStart ?? \"wrap\",\r\n            pageNavigationSize: useDefault(\"pageNavigationSize\", pageNavigationSize)\r\n        },\r\n        toolbarParameters: {\r\n            orientation,\r\n            disabled: disabled || false,\r\n            role: role ?? \"toolbar\",\r\n            selectedIndex: selectedIndex ?? null,\r\n            onSelectedIndexChange: onSelectedIndexChange ?? null\r\n        },\r\n        staggeredChildrenParameters: { staggered: staggered || false },\r\n        rovingTabIndexParameters: { onTabbableIndexChange: onTabbableIndexChange ?? null, untabbable },\r\n        typeaheadNavigationParameters: {\r\n            onNavigateTypeahead,\r\n            collator: useDefault(\"collator\", collator),\r\n            noTypeahead: useDefault(\"noTypeahead\", noTypeahead),\r\n            typeaheadTimeout: useDefault(\"typeaheadTimeout\", typeaheadTimeout)\r\n        },\r\n        labelParameters: { ariaLabel },\r\n        singleSelectionParameters: { ariaPropName: ariaPropName, selectionMode }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => listboxReturnType);\r\n\r\n    return (\r\n        <AriaPropNameContext.Provider value={ariaPropName}>\r\n            <SelectionModeContext.Provider value={selectionMode}>\r\n                <UntabbableContext.Provider value={untabbable}>\r\n                    <ToolbarContext.Provider value={listboxReturnType.context}>\r\n                        {render(listboxReturnType)}\r\n                    </ToolbarContext.Provider>\r\n                </UntabbableContext.Provider>\r\n            </SelectionModeContext.Provider>\r\n        </AriaPropNameContext.Provider>\r\n    )\r\n})\r\n\r\n\r\nexport const ToolbarChild = memoForwardRef(function ToolbarChildU<ToolbarChildElement extends Element, M extends UseToolbarSubInfo<ToolbarChildElement> = UseToolbarSubInfo<ToolbarChildElement>>({\r\n    index,\r\n    render,\r\n    focusSelf,\r\n    getSortValue,\r\n    getText,\r\n    unselectable,\r\n    disabledProp,\r\n    untabbable,\r\n    info: uinfo\r\n}: ToolbarChildProps<ToolbarChildElement, M>, ref?: Ref<any>) {\r\n    const context = useContextWithWarning(ToolbarContext, \"toolbar\") as UseToolbarContext<any, ToolbarChildElement, M>;\r\n    console.assert(context != null, `This ToolbarChild is not contained within a Toolbar`);\r\n    const focusSelfDefault = useCallback((e: any) => { focus(e); }, []);\r\n    focusSelf ??= focusSelfDefault;\r\n\r\n    const info = useToolbarChild<ToolbarChildElement, M>({\r\n        context,\r\n        toolbarChildParameters: { disabledProp },\r\n        info: { index, focusSelf, unselectable, untabbable, getSortValue, ...uinfo } as M,\r\n        textContentParameters: { getText: useDefault(\"getText\", getText) },\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <>{render(info)}</>\r\n    )\r\n});\r\n","import { Ref, VNode } from \"preact\";\r\nimport { useContext, useImperativeHandle } from \"preact/compat\";\r\nimport { UseTooltipParameters, UseTooltipReturnType, useTooltip } from \"../use-tooltip.js\";\r\nimport { ParentDepthContext, PartialExcept, memoForwardRef, useDefault } from \"./util.js\";\r\n\r\ntype Get<T, K extends keyof T> = T[K];\r\n\r\ninterface TooltipPropsBase<TriggerType extends Element, PopupType extends Element> extends Get<UseTooltipParameters<TriggerType, PopupType>, \"escapeDismissParameters\">, Get<UseTooltipParameters<TriggerType, PopupType>, \"tooltipParameters\"> {\r\n    render(info: UseTooltipReturnType<TriggerType, PopupType>): VNode;\r\n    ref?: Ref<UseTooltipReturnType<TriggerType, PopupType>>;\r\n}\r\n\r\nexport type TooltipProps<TriggerType extends Element, PopupType extends Element> = PartialExcept<TooltipPropsBase<TriggerType, PopupType>, \"render\" | \"tooltipSemanticType\" | \"onStatus\">\r\n\r\nexport const Tooltip = memoForwardRef(function TooltipU<TriggerType extends Element, PopupType extends Element>({ onStatus, getWindow, parentDepth, hoverDelay, render, tooltipSemanticType }: TooltipProps<TriggerType, PopupType>, ref?: Ref<any>) {\r\n\r\n    const defaultParentDepth = useContext(ParentDepthContext);\r\n    let myDepth = (parentDepth ?? defaultParentDepth) + 1;\r\n\r\n    const info = useTooltip<TriggerType, PopupType>({\r\n        escapeDismissParameters: {\r\n            getWindow: useDefault(\"getWindow\", getWindow),\r\n            parentDepth: parentDepth ?? defaultParentDepth\r\n        },\r\n        tooltipParameters: {\r\n            onStatus,\r\n            tooltipSemanticType,\r\n            hoverDelay: hoverDelay ?? null\r\n        }\r\n    });\r\n\r\n    useImperativeHandle(ref!, () => info);\r\n\r\n    return (\r\n        <ParentDepthContext.Provider value={myDepth}>\r\n            {render(info)}\r\n        </ParentDepthContext.Provider>\r\n    );\r\n})\r\n\r\n"],"names":["useContext","useCallback","useRef","useLayoutEffect","useEffect","useMemo","_jsxs","_Fragment","_jsx","memo","forwardRef","createContext","useImperativeHandle","createElement","createPortal","UntabbableContext","AriaPropNameContext","SelectionModeContext"],"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"}