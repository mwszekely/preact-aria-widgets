import { Ref } from "preact";
import { OmitStrong } from "preact-prop-helpers";
import { Get10, Get2, Get4, Get6 } from "../props.js";
import { TableCellInfo, TableRowInfo, UseTableCellParameters, UseTableCellReturnType, UseTableParameters, UseTableReturnType, UseTableRowParameters, UseTableRowReturnType, UseTableSectionParameters, UseTableSectionReturnType } from "../use-table.js";
import { GenericComponentProps } from "./util.js";
export type TableProps<TableElement extends Element, LabelElement extends Element> = GenericComponentProps<UseTableReturnType<TableElement, LabelElement>, Get2<UseTableParameters<TableElement, LabelElement>, "labelParameters", "tableParameters">, "selectionLimit" | "tagTable">;
export type TableSectionProps<SectionElement extends Element, RowElement extends Element, RM extends TableRowInfo<RowElement> = TableRowInfo<RowElement>> = GenericComponentProps<UseTableSectionReturnType<SectionElement, RowElement, RM>, Get10<UseTableSectionParameters<SectionElement, RowElement, RM>, "gridNavigationParameters", "linearNavigationParameters", "rearrangeableChildrenParameters", "rovingTabIndexParameters", "singleSelectionParameters", "typeaheadNavigationParameters", "paginatedChildrenParameters", "staggeredChildrenParameters", "tableSectionParameters", "refElementParameters">, "tagTableSection" | "location">;
export type TableRowProps<RowElement extends Element, CellElement extends Element, RM extends TableRowInfo<RowElement>, CM extends TableCellInfo<CellElement>> = GenericComponentProps<UseTableRowReturnType<RowElement, CellElement, RM, CM>, Get6<UseTableRowParameters<RowElement, CellElement, TableRowInfo<RowElement>, CM>, "textContentParameters", "tableRowParameters", "linearNavigationParameters", "rovingTabIndexParameters", "info", "hasCurrentFocusParameters">, "index" | "tagTableRow"> & {
    info?: OmitStrong<RM, keyof TableRowInfo<RowElement>>;
};
export type TableCellProps<CellElement extends Element, CM extends TableCellInfo<CellElement>> = GenericComponentProps<UseTableCellReturnType<CellElement, CM>, Get4<UseTableCellParameters<CellElement, TableCellInfo<CellElement>>, "tableCellParameters", "gridNavigationCellParameters", "textContentParameters", "info">, "index" | "tagTableCell" | "getSortValue"> & {
    info?: OmitStrong<CM, keyof TableCellInfo<CellElement>>;
};
export declare const Table: <TableElement extends Element, LabelElement extends Element>({ ariaLabel, selectionLimit, tagTable, imperativeHandle, render }: TableProps<TableElement, LabelElement>) => import("preact").JSX.Element;
export declare const TableSection: <SectionElement extends Element, RowElement extends Element, CellElement extends Element>({ disableHomeEndKeys, getIndex, initiallySelectedIndex, untabbable, navigatePastEnd, navigatePastStart, onSelectedIndexChange, onTabbableColumnChange, onTabbableIndexChange, pageNavigationSize, paginationMax, paginationMin, staggered, render, location, ariaPropName, selectionMode, onNavigateLinear, collator, noTypeahead, onNavigateTypeahead, typeaheadTimeout, tagTableSection, onElementChange, onMount, onUnmount }: TableSectionProps<SectionElement, RowElement, TableRowInfo<RowElement>>) => import("preact").JSX.Element;
export declare const TableRow: <RowElement extends Element, CellElement extends Element>({ index, getText, tagTableRow, onTabbableIndexChange, navigatePastEnd, navigatePastStart, selected, unselectable, initiallyTabbedIndex, untabbable, info, imperativeHandle, onCurrentFocusedChanged, onCurrentFocusedInnerChanged, render }: TableRowProps<RowElement, CellElement, TableRowInfo<RowElement>, TableCellInfo<CellElement>>, ref?: Ref<any>) => import("preact").JSX.Element;
export declare const TableCell: <CellElement extends Element>({ index, getText, focusSelf, untabbable, tagTableCell, render, colSpan, imperativeHandle, getSortValue, info }: TableCellProps<CellElement, TableCellInfo<CellElement>>) => import("preact").JSX.Element;
//# sourceMappingURL=table.d.ts.map