{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.36.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@include",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@hasChild",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@compositeParams",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@tableOfContents",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@stable",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@nonstable",
          "syntaxKind": "modifier"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "preact-aria-widgets!",
  "docComment": "/**\n * # Preact Aria Widgets\n *\n * Preact props that implement ARIA-compliant widgets in the style of `preact-prop-helpers` (i.e. hooks that swizzle parameters and returns back and forth). **No CSS is provided** &ndash; this library is intended for wiring up event handlers, HTML/ARIA attributes, labels, and so on, but each hook gives you the information you need to create appropriate e.g. `class` values to style your own components.\n *\n * This library is split into two parts: hook implementations and component implementations. They are near identical, with the components providing a nicer user interface. When using a component, you must specify a `render` prop that takes all the information the hook version returns and gives back the markup to use. As an example, `Checkbox` components can be rendered as `<label /><input />` or `<label><input /></label>` based on the function you pass to that `render` prop. You can even do just plain `<input>`, though `aria-label` usually needs to be handled manually in all cases.\n *\n * The intent is to help ensure that individual widgets on a given page are accessible, but it is still up to you to ensure that the page as a whole is too, and that things *actually make sense* in practice. Don't forget to do lots of testing. *\n *\n * {@tableOfContents start} {@include} {@link useAccordion} {@include} {@link useButton} {@include} {@link useCheckbox} {@include} {@link useCheckboxGroup} {@include} {@link useDialog} {@include} {@link useDrawer} {@include} {@link useGridlist} {@include} {@link useListbox} {@include} {@link useMenuSurface} {@include} {@link useMenu} {@include} {@link useMenubar} {@include} {@link useProgress} {@include} {@link useRadioGroup} {@include} {@link useSlider} {@include} {@link useTable} {@include} {@link useTabs} {@include} {@link useToolbar} {@include} {@link useTooltip} {@tableOfContents end}\n *\n * @packageDocumentation\n */\n",
  "name": "preact-aria-widgets",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "preact-aria-widgets!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Accordion:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Accordion: "
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ disableHomeEndKeys, initialIndex, onAfterChildLayoutEffect, onChildrenMountChange, navigatePastEnd, navigatePastStart, pageNavigationSize, localStorageKey, collator, noTypeahead, typeaheadTimeout, onChildrenCountChange, isValid, render, imperativeHandle, orientation, onNavigateLinear, onNavigateTypeahead, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "AccordionProps",
              "canonicalReference": "preact-aria-widgets!AccordionProps:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/accordion.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Accordion",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!AccordionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AccordionProps<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AccordionPropsBase",
              "canonicalReference": "preact-aria-widgets!~AccordionPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "AccordionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!AccordionProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionReturnType",
                  "canonicalReference": "preact-aria-widgets!UseAccordionReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement, "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionSectionInfo",
                  "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!AccordionSection:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "AccordionSection: "
            },
            {
              "kind": "Content",
              "text": "<HeaderContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", BodyElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ open, index, tagButton, disabled, bodyRole, onPress, untabbable, getText, imperativeHandle, render, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "AccordionSectionProps",
              "canonicalReference": "preact-aria-widgets!AccordionSectionProps:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderContainerElement, HeaderButtonElement, BodyElement>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/accordion.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "AccordionSection",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!AccordionSectionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AccordionSectionProps<HeaderElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", BodyElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AccordionSectionPropsBase",
              "canonicalReference": "preact-aria-widgets!~AccordionSectionPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderElement, HeaderButtonElement, BodyElement>, \"index\" | \"tagButton\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BodyElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "AccordionSectionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!AccordionSectionProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionSectionReturnType",
                  "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderElement, HeaderButtonElement, BodyElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Button:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Button: "
            },
            {
              "kind": "Content",
              "text": "<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ tagButton, onPress, pressed, render, disabled, onElementChange, onMount, onUnmount, allowRepeatPresses, longPressThreshold, excludeEnter, excludePointer, excludeSpace, onPressingChange }: "
            },
            {
              "kind": "Reference",
              "text": "ButtonProps",
              "canonicalReference": "preact-aria-widgets!ButtonProps:interface"
            },
            {
              "kind": "Content",
              "text": "<E>, ref: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/button.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Button",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ButtonPressEventDetail:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ButtonPressEventDetail "
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "name": "ButtonPressEventDetail",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ButtonPressEventDetail#pressed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pressed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!ButtonPressEventHandler:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ButtonPressEventHandler<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedEventHandler",
              "canonicalReference": "preact-prop-helpers!EnhancedEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PressEventReason",
              "canonicalReference": "preact-prop-helpers!PressEventReason:type"
            },
            {
              "kind": "Content",
              "text": "<E>, "
            },
            {
              "kind": "Reference",
              "text": "ButtonPressEventDetail",
              "canonicalReference": "preact-aria-widgets!ButtonPressEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "name": "ButtonPressEventHandler",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ButtonProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ButtonProps<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ButtonPropsBase",
              "canonicalReference": "preact-aria-widgets!~ButtonPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<E>, \"tagButton\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/button.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ButtonProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ButtonProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseButtonReturnType",
                  "canonicalReference": "preact-aria-widgets!UseButtonReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Checkbox:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Checkbox: "
            },
            {
              "kind": "Content",
              "text": "<I extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", L extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ checked, disabled, tagLabel, labelPosition, tagInput, ariaLabel, onCheckedChange, longPressThreshold, excludeSpace, render }: "
            },
            {
              "kind": "Reference",
              "text": "CheckboxProps",
              "canonicalReference": "preact-aria-widgets!CheckboxProps:interface"
            },
            {
              "kind": "Content",
              "text": "<I, L>, ref: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/checkbox.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Checkbox",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxChangeEventDetail:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxChangeEventDetail "
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "name": "CheckboxChangeEventDetail",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!CheckboxChangeEventDetail#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!CheckboxChangeEventHandler:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckboxChangeEventHandler = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedEventHandler",
              "canonicalReference": "preact-prop-helpers!EnhancedEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CheckboxChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!CheckboxChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "name": "CheckboxChangeEventHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckboxCheckedType = "
            },
            {
              "kind": "Content",
              "text": "boolean | \"mixed\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "releaseTag": "Public",
          "name": "CheckboxCheckedType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!CheckboxGroup:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CheckboxGroup: "
            },
            {
              "kind": "Content",
              "text": "<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ render, collator, disableHomeEndKeys, noTypeahead, typeaheadTimeout, onTabbableIndexChange, compare, staggered, getIndex, untabbable, navigatePastEnd, navigatePastStart, pageNavigationSize, orientation, onNavigateLinear, onNavigateTypeahead, ..._rest }: "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupProps",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, TabbableChildElement, "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement>>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CheckboxGroup",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupChangeEventDetail:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupChangeEventDetail "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "CheckboxGroupChangeEventDetail",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupChangeEventDetail#childrenChecked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "childrenChecked: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, boolean | \"mixed\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "childrenChecked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupChangeEventHandler:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CheckboxGroupChangeEventHandler = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedEventHandler",
              "canonicalReference": "preact-prop-helpers!EnhancedEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "CheckboxGroupChangeEventHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupChild:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CheckboxGroupChild: "
            },
            {
              "kind": "Content",
              "text": "<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ index, render, checked, onChangeFromParent, getSortValue, untabbable, getText, focusSelf, unselectable, ..._rest }: "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupChildProps",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupChildProps:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CheckboxGroupChild",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupChildProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupChildProps<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupChildPropsBase",
              "canonicalReference": "preact-aria-widgets!~CheckboxGroupChildPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>, \"index\" | \"checked\" | \"onChangeFromParent\" | \"getSortValue\" | \"focusSelf\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxGroupChildProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupChildProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupChildReturnType",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE, "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupInfo",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupContext<GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteListNavigationContext",
              "canonicalReference": "preact-prop-helpers!CompleteListNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TCE, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxGroupContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupContext#checkboxGroupChildrenContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupChildrenContext: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        setUpdateIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        allIds: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n        setTotalChildren: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        setTotalChecked: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupChildrenContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 16
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupContext#checkboxGroupParentContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupParentContext: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        setSetter: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StateUpdater",
                  "canonicalReference": "preact-hooks!StateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<string> | null, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        setSetParentCheckboxChecked: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StateUpdater",
                  "canonicalReference": "preact-hooks!StateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": "> | null, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        getPercentChecked: (totalChecked: number, totalChildren: number) => number;\n        getTotalChecked: () => number;\n        getTotalChildren: () => number;\n        onCheckboxGroupParentInput: (e: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupParentContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupInfo<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxGroupInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo#checkboxInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxInfo: "
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupInfoBase1",
                  "canonicalReference": "preact-aria-widgets!~CheckboxGroupInfoBase1:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE> | "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupInfoBase2",
                  "canonicalReference": "preact-aria-widgets!~CheckboxGroupInfoBase2:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE>)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupParent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "CheckboxGroupParent: "
            },
            {
              "kind": "Content",
              "text": "<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ render, index, focusSelf, untabbable, getText, getSortValue, unselectable, ..._rest }: "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupParentProps",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupParentProps:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "CheckboxGroupParent",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupParentProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupParentProps<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupParentPropsBase",
              "canonicalReference": "preact-aria-widgets!~CheckboxGroupParentPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>, \"index\" | \"getSortValue\" | \"focusSelf\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxGroupParentProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupParentProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(parentCheckboxInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupParentReturnType",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE, "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupInfo",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parentCheckboxInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxGroupProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxGroupProps<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupPropsBase",
              "canonicalReference": "preact-aria-widgets!~CheckboxGroupPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, TabbableChildElement, M>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/checkbox-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxGroupProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupReturnType",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ParentElement, TabbableChildElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!CheckboxProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CheckboxProps<I extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", L extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "CheckboxPropsBase",
              "canonicalReference": "preact-aria-widgets!~CheckboxPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<I, L>, \"tagInput\" | \"tagLabel\" | \"labelPosition\" | \"ariaLabel\" | \"checked\" | \"onCheckedChange\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/checkbox.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CheckboxProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!CheckboxProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxReturnType",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<I, L>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!defaultRenderCheckboxLike:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultRenderCheckboxLike<I extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", L extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", InfoType>({ labelPosition, tagInput, tagLabel, makePropsInput, makePropsLabel }: "
            },
            {
              "kind": "Reference",
              "text": "DefaultRenderCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!~DefaultRenderCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<I, L, InfoType>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(info: InfoType) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/checkbox.tsx",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelPosition, tagInput, tagLabel, makePropsInput, makePropsLabel }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InfoType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "defaultRenderCheckboxLike"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!defaultRenderGridlistChild:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultRenderGridlistChild<CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ tagGridlistChild, makePropsGridlistChild }: "
            },
            {
              "kind": "Content",
              "text": "{\n    tagGridlistChild: "
            },
            {
              "kind": "Reference",
              "text": "ElementToTag",
              "canonicalReference": "preact-aria-widgets!ElementToTag:type"
            },
            {
              "kind": "Content",
              "text": "<CellElement>;\n    makePropsGridlistChild: (info: "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistCellReturnType",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, CM>) => "
            },
            {
              "kind": "Reference",
              "text": "ElementProps",
              "canonicalReference": "preact-prop-helpers!ElementProps:type"
            },
            {
              "kind": "Content",
              "text": "<CellElement>;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistCellReturnType",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, CM>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ tagGridlistChild, makePropsGridlistChild }",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 13
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "CellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "defaultRenderGridlistChild"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!defaultRenderPortal:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function defaultRenderPortal({ portalId, children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    portalId: string;\n    children: "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/dialog.tsx",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ portalId, children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "defaultRenderPortal"
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Dialog:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Dialog: "
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ onClose, open, closeOnBackdrop, closeOnEscape, focusOpener, getWindow, parentDepth, focusPopup, ariaLabel, render }: "
            },
            {
              "kind": "Reference",
              "text": "DialogProps",
              "canonicalReference": "preact-aria-widgets!DialogProps:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/dialog.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Dialog",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!DialogProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DialogProps<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DialogPropsBase",
              "canonicalReference": "preact-aria-widgets!~DialogPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>, \"ariaLabel\" | \"onClose\" | \"open\" | \"focusPopup\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/dialog.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "DialogElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DialogProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!DialogProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(dialogInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "UseDialogReturnType",
                  "canonicalReference": "preact-aria-widgets!UseDialogReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dialogInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!DisabledType:type",
          "docComment": "/**\n * * `false`: This component is not disabled. * `\"soft\"`: This component is disabled, but is still focusable and visible to *all* users. * `\"hard\"`: This component is disabled, and generally hidden to all but sighted users, using the HTML `disabled` attribute. * `true`: This component is disabled. Whether \"hard\" or \"soft\" is chosen is usually chosen based on a `Context`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DisabledType = "
            },
            {
              "kind": "Content",
              "text": "boolean | \"soft\" | \"hard\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/props.ts",
          "releaseTag": "Public",
          "name": "DisabledType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Drawer:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Drawer: "
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DrawerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ closeOnBackdrop, closeOnEscape, closeOnLostFocus, focusOpener, focusPopup, getWindow, onClose, open, parentDepth, render, trapActive, ariaLabel, }: "
            },
            {
              "kind": "Reference",
              "text": "DrawerProps",
              "canonicalReference": "preact-aria-widgets!DrawerProps:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DrawerElement, TitleElement>, ref: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/drawer.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Drawer",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!DrawerProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DrawerProps<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DrawerPropsBase",
              "canonicalReference": "preact-aria-widgets!~DrawerPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>, \"ariaLabel\" | \"onClose\" | \"open\" | \"focusPopup\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/drawer.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "DialogElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "DrawerProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!DrawerProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(dialogInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "UseDrawerReturnType",
                  "canonicalReference": "preact-aria-widgets!UseDrawerReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "dialogInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!ElementFromTag:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ElementFromTag<T extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "h.JSX.IntrinsicElements",
              "canonicalReference": "preact!JSXInternal.IntrinsicElements:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "ElementFromRef",
              "canonicalReference": "preact-aria-widgets!~ElementFromRef:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RefFromTag",
              "canonicalReference": "preact-aria-widgets!~RefFromTag:type"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/props.ts",
          "releaseTag": "Public",
          "name": "ElementFromTag",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!ElementToTag:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ElementToTag<E> = "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "PickByType",
              "canonicalReference": "preact-aria-widgets!PickByType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElementTagNameMap",
              "canonicalReference": "!HTMLElementTagNameMap:interface"
            },
            {
              "kind": "Content",
              "text": ", E>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/props.ts",
          "releaseTag": "Public",
          "name": "ElementToTag",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type FocusableLabelElement<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "LP extends \"wrapping\" ? LabelElement : InputElement"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "name": "FocusableLabelElement",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Gridlist:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Gridlist: "
            },
            {
              "kind": "Content",
              "text": "<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", Cellement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement> = "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement>, CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<Cellement> = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<Cellement>>({ collator, disableHomeEndKeys, noTypeahead, onTabbableIndexChange, groupingType, typeaheadTimeout, selectedIndex, navigatePastEnd, navigatePastStart, onSelectedIndexChange, pageNavigationSize, selectionLimit, untabbable, paginationMax, paginationMin, staggered, compare, getIndex, onTabbableColumnChange, ariaLabel, orientation, ariaPropName, selectionMode, onNavigateLinear, onNavigateTypeahead, render }: "
            },
            {
              "kind": "Reference",
              "text": "GridlistProps",
              "canonicalReference": "preact-aria-widgets!GridlistProps:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, RowElement, Cellement, LabelElement, RM, CM>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "createElement.JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Gridlist",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 23
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridlistCellInfo<GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GridlistCellInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!GridlistChild:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GridlistChild: "
            },
            {
              "kind": "Content",
              "text": "<CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement> = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>>({ index, colSpan, focusSelf, untabbable, getText, onPressSync, longPressThreshold, onPressingChange, render, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!~info"
            },
            {
              "kind": "Content",
              "text": ": subInfo }: "
            },
            {
              "kind": "Reference",
              "text": "GridlistChildProps",
              "canonicalReference": "preact-aria-widgets!GridlistChildProps:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, CM>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>"
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "GridlistChild",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!GridlistChildProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridlistChildProps<CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridlistChildPropsBase",
              "canonicalReference": "preact-aria-widgets!~GridlistChildPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, M>, \"index\" | \"focusSelf\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "CellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GridlistChildProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!GridlistChildProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistCellReturnType",
                  "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<CellElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!GridlistProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridlistProps<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridlistPropsBase",
              "canonicalReference": "preact-aria-widgets!~GridlistPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>, \"selectionLimit\" | \"groupingType\" | \"ariaLabel\" | \"selectedIndex\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GridlistProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!GridlistProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistReturnType",
                  "canonicalReference": "preact-aria-widgets!UseGridlistReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!GridlistRow:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GridlistRow: "
            },
            {
              "kind": "Content",
              "text": "<RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", Cellement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement> = "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement>, CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<Cellement> = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<Cellement>>({ index, collator, unselectable, untabbable, navigatePastEnd, navigatePastStart, noTypeahead, onTabbableIndexChange, selected, typeaheadTimeout, getSortValue, getText, render, initiallyTabbedIndex, onNavigateTypeahead, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!~info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowProps",
              "canonicalReference": "preact-aria-widgets!GridlistRowProps:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement, RM, CM>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "createElement.JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "GridlistRow",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 21
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridlistRowInfo<GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GridlistRowInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!GridlistRowProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GridlistRowProps<GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GridlistRowPropsBase",
              "canonicalReference": "preact-aria-widgets!~GridlistRowPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement, RM, CM>, \"index\" | \"getSortValue\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/gridlist.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "GridlistRowProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!GridlistRowProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistRowReturnType",
                  "canonicalReference": "preact-aria-widgets!UseGridlistRowReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<GridlistRowElement, GridlistCellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!GroupedListbox:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GroupedListbox: "
            },
            {
              "kind": "Content",
              "text": "<LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ ariaLabel, selectionLimit, orientation, render }: "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ListboxProps",
              "canonicalReference": "preact-aria-widgets!ListboxProps:interface"
            },
            {
              "kind": "Content",
              "text": "<any, any, LabelElement, any>, \"ariaLabel\" | \"render\" | \"orientation\" | \"selectionLimit\">) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/listbox.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "GroupedListbox",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Heading:var",
          "docComment": "/**\n * Utility component that creates a heading `h1`, `h2`, `h3`, etc.\n *\n * Which one is chosen depends on a parent `Heading`, with the root-most `Heading` starting at 1, or the value specified by `HeadingReset`.\n *\n * Specify the actual contents of the heading with the `heading` prop.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Heading: "
            },
            {
              "kind": "Content",
              "text": "<T extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ children, heading, tag, ...props }: "
            },
            {
              "kind": "Reference",
              "text": "HeadingProps",
              "canonicalReference": "preact-aria-widgets!~HeadingProps:interface"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "createElement.JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/heading.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Heading",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!HeadingReset:var",
          "docComment": "/**\n * Set the value that the next `Heading` will use as its base.\n *\n * Minimum of 1.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HeadingReset: "
            },
            {
              "kind": "Content",
              "text": "import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "FunctionComponent",
              "canonicalReference": "preact!FunctionComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    newLevel: number;\n    children: "
            },
            {
              "kind": "Reference",
              "text": "ComponentChildren",
              "canonicalReference": "preact!ComponentChildren:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            }
          ],
          "fileUrlPath": "src/component/heading.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HeadingReset",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!LabelPosition:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type LabelPosition = "
            },
            {
              "kind": "Content",
              "text": "\"separate\" | \"wrapping\" | \"none\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "name": "LabelPosition",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Listbox:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Listbox: "
            },
            {
              "kind": "Content",
              "text": "<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement> = "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>>({ ariaLabel, collator, compare, disableHomeEndKeys, getIndex, selectedIndex, navigatePastEnd, navigatePastStart, noTypeahead, onSelectedIndexChange, onTabbableIndexChange, staggered, pageNavigationSize, paginationMax, paginationMin, selectionLimit, untabbable, typeaheadTimeout, orientation, ariaPropName, selectionMode, onNavigateLinear, onNavigateTypeahead, render }: "
            },
            {
              "kind": "Reference",
              "text": "ListboxProps",
              "canonicalReference": "preact-aria-widgets!ListboxProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, LabelElement, M>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/listbox.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Listbox",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ListboxInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListboxInfo<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ListboxInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!ListboxItem:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ListboxItem: "
            },
            {
              "kind": "Content",
              "text": "<ListboxItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListboxItemElement> = "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListboxItemElement>>({ unselectable, focusSelf, getText, untabbable, index, render, selected, getSortValue, allowRepeatPresses, excludeEnter, excludePointer, longPressThreshold, onPressingChange, onMultiSelect, ...subInfo }: "
            },
            {
              "kind": "Reference",
              "text": "ListboxItemProps",
              "canonicalReference": "preact-aria-widgets!ListboxItemProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ListboxItemElement, M>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>"
            }
          ],
          "fileUrlPath": "src/component/listbox.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ListboxItem",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ListboxItemProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListboxItemProps<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ListboxItemPropsBase",
              "canonicalReference": "preact-aria-widgets!~ListboxItemPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement, M>, \"index\" | \"getSortValue\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/listbox.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ListboxItemProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ListboxItemProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxItemReturnType",
                  "canonicalReference": "preact-aria-widgets!UseListboxItemReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListItemElement, "
                },
                {
                  "kind": "Reference",
                  "text": "ListboxInfo",
                  "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListItemElement>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!ListboxMultiSelectEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ListboxMultiSelectEvent<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "EventDetail",
              "canonicalReference": "preact-prop-helpers!EventDetail:var"
            },
            {
              "kind": "Content",
              "text": "]: {\n        selected: boolean;\n    };\n} & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "h.JSX.TargetedEvent",
              "canonicalReference": "preact!JSXInternal.TargetedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<E>, \"target\" | \"currentTarget\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "name": "ListboxMultiSelectEvent",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ListboxProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListboxProps<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ListboxPropsBase",
              "canonicalReference": "preact-aria-widgets!~ListboxPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, LabelElement, M>, \"ariaLabel\" | \"selectionLimit\" | \"selectedIndex\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/listbox.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ListboxProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ListboxProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxReturnType",
                  "canonicalReference": "preact-aria-widgets!UseListboxReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListElement, ListItemElement, LabelElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!ListboxSingleSelectEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ListboxSingleSelectEvent<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "EventDetail",
              "canonicalReference": "preact-prop-helpers!EventDetail:var"
            },
            {
              "kind": "Content",
              "text": "]: {\n        selectedIndex: number;\n    };\n} & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "h.JSX.TargetedEvent",
              "canonicalReference": "preact!JSXInternal.TargetedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<E>, \"target\" | \"currentTarget\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "name": "ListboxSingleSelectEvent",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Menu:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Menu: "
            },
            {
              "kind": "Content",
              "text": "<SurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement> = "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>>({ collator, disableHomeEndKeys, noTypeahead, typeaheadTimeout, orientation, ariaPropName, selectionMode, untabbable, onClose, open, openDirection, onTabbableIndexChange, closeOnBackdrop, closeOnEscape, closeOnLostFocus, compare, getIndex, selectedIndex, navigatePastEnd, navigatePastStart, onSelectedIndexChange, pageNavigationSize, parentDepth, disabled, staggered, onOpen, onNavigateLinear, onNavigateTypeahead, getWindow, render }: "
            },
            {
              "kind": "Reference",
              "text": "MenuProps",
              "canonicalReference": "preact-aria-widgets!MenuProps:interface"
            },
            {
              "kind": "Content",
              "text": "<SurfaceElement, ParentElement, ChildElement, ButtonElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/menu.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Menu",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 19
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Menubar:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Menubar: "
            },
            {
              "kind": "Content",
              "text": "<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement> = "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>>({ render, collator, disableHomeEndKeys, navigatePastEnd, navigatePastStart, pageNavigationSize, orientation, staggered, noTypeahead, untabbable, onTabbableIndexChange, compare, getIndex, disabled, selectedIndex, onSelectedIndexChange, typeaheadTimeout, role, ariaLabel, ariaPropName, selectionMode, onNavigateLinear, onNavigateTypeahead }: "
            },
            {
              "kind": "Reference",
              "text": "MenubarProps",
              "canonicalReference": "preact-aria-widgets!MenubarProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, LabelElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/menubar.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Menubar",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!MenubarItem:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MenubarItem: "
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>>({ index, render, focusSelf, untabbable, getText, unselectable, onPress, getSortValue, onPressingChange, role, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps#info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "MenubarItemProps",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/menubar.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MenubarItem",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!MenubarItemProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MenubarItemProps<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MenubarItemPropsBase",
              "canonicalReference": "preact-aria-widgets!~MenubarItemPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>, \"index\" | \"getSortValue\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/menubar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MenubarItemProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info?: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<M, keyof "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenubarSubInfo",
                  "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuItemElement>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenubarItemReturnType",
                  "canonicalReference": "preact-aria-widgets!UseMenubarItemReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!MenubarProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MenubarProps<MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MenubarPropsBase",
              "canonicalReference": "preact-aria-widgets!~MenubarPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, LabelElement, M>, \"orientation\" | \"ariaLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/menubar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MenubarProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!MenubarProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenubarReturnType",
                  "canonicalReference": "preact-aria-widgets!UseMenubarReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuParentElement, MenuItemElement, LabelElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!MenuItem:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "MenuItem: "
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement> = "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>>({ index, untabbable, getSortValue, onPress, getText, role, focusSelf, unselectable, onPressingChange, render, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps#info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "MenuItemProps",
              "canonicalReference": "preact-aria-widgets!MenuItemProps:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/menu.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "MenuItem",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!MenuItemProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MenuItemProps<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "MenubarItemProps",
              "canonicalReference": "preact-aria-widgets!MenubarItemProps:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/menu.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MenuItemProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!MenuItemProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuItemReturnType",
                  "canonicalReference": "preact-aria-widgets!UseMenuItemReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!MenuItemReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MenuItemReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "name": "MenuItemReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!MenuItemReturnTypeSelf#closeMenu:member(1)",
              "docComment": "/**\n * When a menu item is clicked, it's often expected that the menu closes itself immediately after.\n *\n * Use this function to do so.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeMenu(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "closeMenu"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!MenuProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MenuProps<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MenuPropsBase",
              "canonicalReference": "preact-aria-widgets!~MenuPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M>, \"open\" | \"onClose\" | \"onOpen\" | \"openDirection\" | \"orientation\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/menu.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuButtonElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "MenuProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!MenuProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(menuInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuReturnType",
                  "canonicalReference": "preact-aria-widgets!UseMenuReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "menuInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 12,
              "endIndex": 16
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!NotificationProviderContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NotificationProviderContext "
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "releaseTag": "Public",
          "name": "NotificationProviderContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!NotificationProviderContext#notify:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notify(mode: "
                },
                {
                  "kind": "Content",
                  "text": "\"polite\" | \"assertive\""
                },
                {
                  "kind": "Content",
                  "text": ", content: "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "mode",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "notify"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!NotificationProviderContext:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "NotificationProviderContext: "
            },
            {
              "kind": "Content",
              "text": "import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "preact!Context:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NotificationProviderContext",
              "canonicalReference": "preact-aria-widgets!NotificationProviderContext:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "NotificationProviderContext",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!NotificationProviderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NotificationProviderProps "
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "releaseTag": "Public",
          "name": "NotificationProviderProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!NotificationProviderProps#targetAssertive:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetAssertive: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetAssertive",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!NotificationProviderProps#targetPolite:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "targetPolite: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "Element",
                  "canonicalReference": "!Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "targetPolite",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!NotificationProviderReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NotificationProviderReturnType "
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "releaseTag": "Public",
          "name": "NotificationProviderReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!NotificationProviderReturnType#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.Element",
                  "canonicalReference": "preact!JSXInternal.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!NotificationProviderReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "NotificationProviderContext",
                  "canonicalReference": "preact-aria-widgets!NotificationProviderContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!ParentDepthContext:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ParentDepthContext: "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "preact!Context:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            }
          ],
          "fileUrlPath": "src/component/util.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ParentDepthContext",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!PickByType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PickByType<Obj, WantedType> = "
            },
            {
              "kind": "Content",
              "text": "{\n    [P in keyof Obj as Obj[P] extends WantedType | undefined ? P : never]: Obj[P];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/props.ts",
          "releaseTag": "Public",
          "name": "PickByType",
          "typeParameters": [
            {
              "typeParameterName": "Obj",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "WantedType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Progress:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Progress: "
            },
            {
              "kind": "Content",
              "text": "<IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ tagIndicator, ariaLabel, max, render, value, valueText }: "
            },
            {
              "kind": "Reference",
              "text": "ProgressProps",
              "canonicalReference": "preact-aria-widgets!ProgressProps:interface"
            },
            {
              "kind": "Content",
              "text": "<IndicatorElement, LabelElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/progress.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Progress",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ProgressProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ProgressProps<IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProgressPropsBase",
              "canonicalReference": "preact-aria-widgets!~ProgressPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<IndicatorElement, LabelElement>, \"tagIndicator\" | \"ariaLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ProgressProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ProgressProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressReturnType",
                  "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement, LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!ProgressWithHandler:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ProgressWithHandler: "
            },
            {
              "kind": "Content",
              "text": "<EventType, CaptureType, IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ ariaLabel, forciblyPending, render, tagIndicator, asyncHandler, capture, debounce, throttle }: "
            },
            {
              "kind": "Reference",
              "text": "ProgressWithHandlerProps",
              "canonicalReference": "preact-aria-widgets!ProgressWithHandlerProps:interface"
            },
            {
              "kind": "Content",
              "text": "<EventType, CaptureType, IndicatorElement, LabelElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/progress.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ProgressWithHandler",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ProgressWithHandlerProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ProgressWithHandlerProps<EventType, CaptureType, IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ProgressWithHandlerPropsBase",
              "canonicalReference": "preact-aria-widgets!~ProgressWithHandlerPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<EventType, CaptureType, IndicatorElement, LabelElement>, \"capture\" | \"tagIndicator\" | \"ariaLabel\" | \"asyncHandler\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "EventType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CaptureType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ProgressWithHandlerProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ProgressWithHandlerProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressWithHandlerReturnType",
                  "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<EventType, CaptureType, IndicatorElement, LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Radio:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Radio: "
            },
            {
              "kind": "Content",
              "text": "<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", V extends string | number, InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ unselectable, disabled, index, render, value, ariaLabel, focusSelf, labelPosition, untabbable, tagInput, tagLabel, getText, longPressThreshold }: "
            },
            {
              "kind": "Reference",
              "text": "RadioProps",
              "canonicalReference": "preact-aria-widgets!RadioProps:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement, V>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/radio-group.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Radio",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioChangeEventDetail:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioChangeEventDetail<V extends "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioChangeEventDetail",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!RadioChangeEventDetail#selectedValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedValue: "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!RadioChangeEventHandler:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RadioChangeEventHandler<V extends "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "EnhancedEventHandler",
              "canonicalReference": "preact-prop-helpers!EnhancedEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "RadioChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!RadioChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": "<V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "name": "RadioChangeEventHandler",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioContext<V extends "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement, V>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteListNavigationContext",
              "canonicalReference": "preact-prop-helpers!CompleteListNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!RadioContext#radioContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radioContext: "
                },
                {
                  "kind": "Reference",
                  "text": "RadioContextSelf",
                  "canonicalReference": "preact-aria-widgets!RadioContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radioContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioContextSelf<V extends "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioContextSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!RadioContextSelf#indexToName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indexToName: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "indexToName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!RadioContextSelf#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!RadioContextSelf#nameToIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nameToIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V, number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nameToIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!RadioGroup:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "RadioGroup: "
            },
            {
              "kind": "Content",
              "text": "<V extends string | number, GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", GroupLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ">({ render, name, onSelectedValueChange, collator, disableHomeEndKeys, arrowKeyDirection, noTypeahead, typeaheadTimeout, ariaLabel, compare, staggered, getIndex, navigatePastEnd, navigatePastStart, selectedValue, untabbable, onTabbableIndexChange, onNavigateLinear, onNavigateTypeahead, pageNavigationSize, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "RadioGroupProps",
              "canonicalReference": "preact-aria-widgets!RadioGroupProps:interface"
            },
            {
              "kind": "Content",
              "text": "<V, GroupElement, GroupLabelElement, TabbableChildElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/radio-group.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "RadioGroup",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioGroupProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioGroupProps<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GroupLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RadioGroupPropsBase",
              "canonicalReference": "preact-aria-widgets!~RadioGroupPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<V, GroupElement, GroupLabelElement, TabbableChildElement>, \"ariaLabel\" | \"name\" | \"selectedValue\" | \"onSelectedValueChange\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GroupLabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioGroupProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!RadioGroupProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRadioGroupReturnType",
                  "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V, GroupElement, GroupLabelElement, TabbableChildElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioProps<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RadioPropsBase",
              "canonicalReference": "preact-aria-widgets!~RadioPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement, V>, \"index\" | \"value\" | \"ariaLabel\" | \"labelPosition\" | \"tagInput\" | \"tagLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!RadioProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRadioReturnType",
                  "canonicalReference": "preact-aria-widgets!UseRadioReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<LP, V, InputElement, LabelElement, "
                },
                {
                  "kind": "Reference",
                  "text": "RadioSubInfo",
                  "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FocusableLabelElement",
                  "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
                },
                {
                  "kind": "Content",
                  "text": "<LP, InputElement, LabelElement>, V>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RadioSubInfo<TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RadioSubInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!RangeChangeEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RangeChangeEvent<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "EventDetail",
              "canonicalReference": "preact-prop-helpers!EventDetail:var"
            },
            {
              "kind": "Content",
              "text": "]: {\n        value: number;\n    };\n} & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "h.JSX.TargetedEvent",
              "canonicalReference": "preact!JSXInternal.TargetedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<E>, \"target\" | \"currentTarget\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "name": "RangeChangeEvent",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!setDebugLogging:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setDebugLogging(logging: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/props.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "logging",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "setDebugLogging"
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Slider:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Slider: "
            },
            {
              "kind": "Content",
              "text": "({ max, min, onAfterChildLayoutEffect, onChildrenMountChange, children }: "
            },
            {
              "kind": "Reference",
              "text": "SliderProps",
              "canonicalReference": "preact-aria-widgets!SliderProps:interface"
            },
            {
              "kind": "Content",
              "text": ", ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/slider.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Slider",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!SliderContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SliderContext<M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenContext",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenContext:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SliderContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderContext#sliderContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sliderContext: "
                },
                {
                  "kind": "Reference",
                  "text": "SliderContextSelf",
                  "canonicalReference": "preact-aria-widgets!SliderContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sliderContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!SliderContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SliderContextSelf "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "name": "SliderContextSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderContextSelf#baseId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "baseId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "baseId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderContextSelf#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderContextSelf#min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!SliderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SliderProps extends "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_4:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseSliderParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">, \"managedChildrenParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_4:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseSliderParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">, \"sliderParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/slider.tsx",
          "releaseTag": "Public",
          "name": "SliderProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentChildren",
                  "canonicalReference": "preact!ComponentChildren:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!SliderProps#ref:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ref?: "
                },
                {
                  "kind": "Reference",
                  "text": "Ref",
                  "canonicalReference": "preact!Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseSliderReturnType",
                  "canonicalReference": "preact-aria-widgets!UseSliderReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SliderThumbInfo",
                  "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!SliderThumb:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SliderThumb: "
            },
            {
              "kind": "Content",
              "text": "<ThumbElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ label, tag, value, max, min, onValueChange, index, render, valueText }: "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbProps",
              "canonicalReference": "preact-aria-widgets!SliderThumbProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ThumbElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>"
            }
          ],
          "fileUrlPath": "src/component/slider.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "SliderThumb",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SliderThumbInfo extends "
            },
            {
              "kind": "Reference",
              "text": "ManagedChildInfo",
              "canonicalReference": "preact-prop-helpers!ManagedChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "name": "SliderThumbInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!SliderThumbProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SliderThumbProps<ThumbElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ", \"index\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_4:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseSliderThumbParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ThumbElement, "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">, \"sliderThumbParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ThumbElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "SliderThumbProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!SliderThumbProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseSliderThumbReturnType",
                  "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ThumbElement, "
                },
                {
                  "kind": "Reference",
                  "text": "SliderThumbInfo",
                  "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Tab:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Tab: "
            },
            {
              "kind": "Content",
              "text": "<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<E> = "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<E>>({ unselectable, focusSelf, untabbable, index, getText, getSortValue, render, longPressThreshold, onPressingChange, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!~info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "TabProps",
              "canonicalReference": "preact-aria-widgets!TabProps:interface"
            },
            {
              "kind": "Content",
              "text": "<E, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Tab",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TabInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TabInfo<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TabInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Table:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Table: "
            },
            {
              "kind": "Content",
              "text": "<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ ariaLabel, selectionLimit, tagTable, render }: "
            },
            {
              "kind": "Reference",
              "text": "TableProps",
              "canonicalReference": "preact-aria-widgets!TableProps:interface"
            },
            {
              "kind": "Content",
              "text": "<TableElement, LabelElement>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Table",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!TableCell:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableCell: "
            },
            {
              "kind": "Content",
              "text": "<CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ index, getText, focusSelf, untabbable, tagTableCell, render, colSpan, getSortValue, }: "
            },
            {
              "kind": "Reference",
              "text": "TableCellProps",
              "canonicalReference": "preact-aria-widgets!TableCellProps:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>"
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableCell",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableCellInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableCellInfo<TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableCellInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TableCellInfo#getSortValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSortValue(): "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getSortValue"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableCellProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableCellProps<CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableCellPropsBase",
              "canonicalReference": "preact-aria-widgets!~TableCellPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement, CM>, \"getSortValue\" | \"tagTableCell\" | \"index\" | \"focusSelf\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "CellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableCellProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TableCellProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableCellReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTableCellReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<CellElement, CM>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableProps<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TablePropsBase",
              "canonicalReference": "preact-aria-widgets!~TablePropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TableElement, LabelElement>, \"tagTable\" | \"selectionLimit\" | \"ariaLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TableProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTableReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableElement, LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!TableRow:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableRow: "
            },
            {
              "kind": "Content",
              "text": "<RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", Cellement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ index, getText, tagTableRow, onTabbableIndexChange, navigatePastEnd, navigatePastStart, selected, unselectable, initiallyTabbedIndex, untabbable, render }: "
            },
            {
              "kind": "Reference",
              "text": "TableRowProps",
              "canonicalReference": "preact-aria-widgets!TableRowProps:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement, "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, Cellement>, "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<Cellement>>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableRow",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableRowInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableRowInfo<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableRowInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableRowProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableRowProps<RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, CellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableRowPropsBase",
              "canonicalReference": "preact-aria-widgets!~TableRowPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, CellElement, RM, CM>, \"index\" | \"tagTableRow\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "RowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableRowProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TableRowProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableRowReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTableRowReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<RowElement, CellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!TableSection:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TableSection: "
            },
            {
              "kind": "Content",
              "text": "<SectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ disableHomeEndKeys, getIndex, initiallySelectedIndex, untabbable, navigatePastEnd, navigatePastStart, onSelectedIndexChange, onTabbableColumnChange, onTabbableIndexChange, pageNavigationSize, paginationMax, paginationMin, staggered, render, location, ariaPropName, selectionMode, onNavigateLinear, collator, noTypeahead, onNavigateTypeahead, typeaheadTimeout, tagTableSection }: "
            },
            {
              "kind": "Reference",
              "text": "TableSectionProps",
              "canonicalReference": "preact-aria-widgets!TableSectionProps:interface"
            },
            {
              "kind": "Content",
              "text": "<SectionElement, RowElement, CellElement, "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, CellElement>, "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TableSection",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TableSectionProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TableSectionProps<SectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<RowElement, CellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<CellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TableSectionPropsBase",
              "canonicalReference": "preact-aria-widgets!~TableSectionPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<SectionElement, RowElement, CellElement, RM, CM>, \"tagTableSection\" | \"location\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/table.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TableSectionProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TableSectionProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableSectionReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTableSectionReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<SectionElement, RowElement, CellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 13,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!TabPanel:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function TabPanel<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ index, render, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!~info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "TabPanelProps",
              "canonicalReference": "preact-aria-widgets!TabPanelProps:interface"
            },
            {
              "kind": "Content",
              "text": "<E, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ index, render, info: uinfo }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "TabPanel"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TabPanelInfo extends "
            },
            {
              "kind": "Reference",
              "text": "ManagedChildInfo",
              "canonicalReference": "preact-prop-helpers!ManagedChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "TabPanelInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo#getVisible:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVisible(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getVisible"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo#setVisibleIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setVisibleIndex: "
                },
                {
                  "kind": "Content",
                  "text": "(newIndex: number | null, previousIndex: number | null) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setVisibleIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TabPanelProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TabPanelProps<PanelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TabPanelPropsBase",
              "canonicalReference": "preact-aria-widgets!~TabPanelPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<M>, \"index\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "PanelElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TabPanelProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TabPanelProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabPanelReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<PanelElement>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TabProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TabProps<TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TabPropsBase",
              "canonicalReference": "preact-aria-widgets!~TabPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>, \"index\" | \"getSortValue\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TabProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TabProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTabReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TabElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Tabs:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Tabs: "
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement> = "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>>({ ariaLabel, collator, compare, disableHomeEndKeys, getIndex, initiallySelectedIndex, navigatePastEnd, navigatePastStart, noTypeahead, onSelectedIndexChange, onTabbableIndexChange, orientation, staggered, pageNavigationSize, localStorageKey, selectionMode, untabbable, typeaheadTimeout, role, onNavigateLinear, onNavigateTypeahead, render }: "
            },
            {
              "kind": "Reference",
              "text": "TabsProps",
              "canonicalReference": "preact-aria-widgets!TabsProps:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, TabLabelElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Tabs",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TabsChangeEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TabsChangeEvent<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    ["
            },
            {
              "kind": "Reference",
              "text": "EventDetail",
              "canonicalReference": "preact-prop-helpers!EventDetail:var"
            },
            {
              "kind": "Content",
              "text": "]: {\n        selectedIndex: number;\n    };\n} & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "h.JSX.TargetedEvent",
              "canonicalReference": "preact!JSXInternal.TargetedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<E>, \"target\" | \"currentTarget\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "TabsChangeEvent",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TabsProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TabsProps<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TabsPropsBase",
              "canonicalReference": "preact-aria-widgets!~TabsPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, TabLabelElement, M>, \"orientation\" | \"ariaLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/tabs.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabLabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TabsProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!TabsProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabsReturnType",
                  "canonicalReference": "preact-aria-widgets!UseTabsReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TabContainerElement, TabElement, TabLabelElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!TagSensitiveProps:interface",
          "docComment": "/**\n * For times when more than just the abstract element type is needed, but the actual, concrete, implementation-affecting \"div\" string type.\n *\n * TODO: Should this be the standard for all the non-ARIA hooks? They *never* care about the specific type for the implementation, just for typing, so it wouldn't be necessary, but it would be consistent with these ARIA hooks.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TagSensitiveProps<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/props.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "TagSensitiveProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!TagSensitiveProps#tag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TargetedButtonPressEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TargetedButtonPressEvent<E extends "
            },
            {
              "kind": "Reference",
              "text": "EventTarget",
              "canonicalReference": "!EventTarget:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TargetedEnhancedEvent",
              "canonicalReference": "preact-prop-helpers!TargetedEnhancedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PressEventReason",
              "canonicalReference": "preact-prop-helpers!PressEventReason:type"
            },
            {
              "kind": "Content",
              "text": "<E>, "
            },
            {
              "kind": "Reference",
              "text": "ButtonPressEventDetail",
              "canonicalReference": "preact-aria-widgets!ButtonPressEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "name": "TargetedButtonPressEvent",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TargetedCheckboxChangeEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TargetedCheckboxChangeEvent = "
            },
            {
              "kind": "Reference",
              "text": "TargetedEnhancedEvent",
              "canonicalReference": "preact-prop-helpers!TargetedEnhancedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CheckboxChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!CheckboxChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "name": "TargetedCheckboxChangeEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TargetedCheckboxGroupChangeEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TargetedCheckboxGroupChangeEvent = "
            },
            {
              "kind": "Reference",
              "text": "TargetedEnhancedEvent",
              "canonicalReference": "preact-prop-helpers!TargetedEnhancedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "TargetedCheckboxGroupChangeEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TargetedRadioChangeEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TargetedRadioChangeEvent<V extends "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TargetedEnhancedEvent",
              "canonicalReference": "preact-prop-helpers!TargetedEnhancedEvent:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "RadioChangeEventDetail",
              "canonicalReference": "preact-aria-widgets!RadioChangeEventDetail:interface"
            },
            {
              "kind": "Content",
              "text": "<V>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "name": "TargetedRadioChangeEvent",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Toast:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Toast: "
            },
            {
              "kind": "Content",
              "text": "<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ render, index, timeout, politeness, children }: "
            },
            {
              "kind": "Reference",
              "text": "ToastProps",
              "canonicalReference": "preact-aria-widgets!ToastProps:interface"
            },
            {
              "kind": "Content",
              "text": "<E>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>"
            }
          ],
          "fileUrlPath": "src/component/toasts.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Toast",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToastInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastInfo extends "
            },
            {
              "kind": "Reference",
              "text": "ManagedChildInfo",
              "canonicalReference": "preact-prop-helpers!ManagedChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "ToastInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToastInfo#focus:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focus(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focus"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastInfo#setNumberAheadOfMe:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setNumberAheadOfMe: "
                },
                {
                  "kind": "Reference",
                  "text": "StateUpdater",
                  "canonicalReference": "preact-hooks!StateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setNumberAheadOfMe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToastInfo#show:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "show(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "show"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToastProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastProps<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_6:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToastParameters",
              "canonicalReference": "preact-aria-widgets!UseToastParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">, \"info\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_6:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToastParameters",
              "canonicalReference": "preact-aria-widgets!UseToastParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">, \"toastParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ToastProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastProps#ref:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ref?: "
                },
                {
                  "kind": "Reference",
                  "text": "Ref",
                  "canonicalReference": "preact!Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseToastReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToastReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<E>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToastProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(args: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToastReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToastReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "args",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 16
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Toasts:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Toasts: "
            },
            {
              "kind": "Content",
              "text": "<ContainerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ onAfterChildLayoutEffect, onChildrenMountChange, render, visibleCount }: "
            },
            {
              "kind": "Reference",
              "text": "ToastsProps",
              "canonicalReference": "preact-aria-widgets!ToastsProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerType>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/toasts.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Toasts",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToastsContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastsContext<M extends "
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenContext",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenContext:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ToastsContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastsContext#toastContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toastContext: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastsContextSelf",
                  "canonicalReference": "preact-aria-widgets!ToastsContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toastContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToastsContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastsContextSelf "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "ToastsContextSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastsContextSelf#getMaxVisibleCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMaxVisibleCount: "
                },
                {
                  "kind": "Content",
                  "text": "() => number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getMaxVisibleCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastsContextSelf#onAnyToastDismissed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAnyToastDismissed: "
                },
                {
                  "kind": "Content",
                  "text": "(_index: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onAnyToastDismissed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastsContextSelf#onAnyToastMounted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAnyToastMounted: "
                },
                {
                  "kind": "Content",
                  "text": "(toastIndex: number) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onAnyToastMounted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToastsProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToastsProps<ContainerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_6:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToastsParameters",
              "canonicalReference": "preact-aria-widgets!UseToastsParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"managedChildrenParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Get",
              "canonicalReference": "preact-aria-widgets!~Get_6:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToastsParameters",
              "canonicalReference": "preact-aria-widgets!UseToastsParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"toastsParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ToastsProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!ToastsProps#ref:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ref?: "
                },
                {
                  "kind": "Reference",
                  "text": "Ref",
                  "canonicalReference": "preact!Ref:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseToastsReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToastsReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerType, "
                },
                {
                  "kind": "Reference",
                  "text": "ToastInfo",
                  "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "ref",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToastsProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToastsReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToastsReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerType, "
                },
                {
                  "kind": "Reference",
                  "text": "ToastInfo",
                  "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Toolbar:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Toolbar: "
            },
            {
              "kind": "Content",
              "text": "<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement> = "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>>({ render, role, collator, disableHomeEndKeys, disabled, compare, getIndex, navigatePastEnd, navigatePastStart, pageNavigationSize, selectedIndex, onSelectedIndexChange, orientation, noTypeahead, onTabbableIndexChange, typeaheadTimeout, staggered, ariaLabel, ariaPropName, selectionMode, untabbable, onNavigateLinear, onNavigateTypeahead }: "
            },
            {
              "kind": "Reference",
              "text": "ToolbarProps",
              "canonicalReference": "preact-aria-widgets!ToolbarProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, LabelElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/toolbar.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Toolbar",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 17
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!ToolbarChild:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ToolbarChild: "
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement> = "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement>>({ index, render, focusSelf, getSortValue, getText, unselectable, disabledProp, untabbable, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!~info"
            },
            {
              "kind": "Content",
              "text": ": uinfo }: "
            },
            {
              "kind": "Reference",
              "text": "ToolbarChildProps",
              "canonicalReference": "preact-aria-widgets!ToolbarChildProps:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement, M>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/toolbar.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ToolbarChild",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToolbarChildProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToolbarChildProps<ToolbarChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToolbarChildPropsBase",
              "canonicalReference": "preact-aria-widgets!~ToolbarChildPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement, M>, \"getSortValue\" | \"index\" | \"disabledProp\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ToolbarChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ToolbarChildProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToolbarChildProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarChildReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToolbarChildReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ToolbarChildElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!ToolbarProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ToolbarProps<ToolbarContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ToolbarChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToolbarPropsBase",
              "canonicalReference": "preact-aria-widgets!~ToolbarPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<ToolbarContainerElement, ToolbarChildElement, LabelElement, M>, \"orientation\" | \"ariaLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/component/toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ToolbarContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ToolbarChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "ToolbarProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!ToolbarProps#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(info: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarReturnType",
                  "canonicalReference": "preact-aria-widgets!UseToolbarReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ToolbarContainerElement, ToolbarChildElement, LabelElement, M>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "VNode",
                  "canonicalReference": "preact!VNode:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "name": "render"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "preact-aria-widgets!Tooltip:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "Tooltip: "
            },
            {
              "kind": "Content",
              "text": "<TriggerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ onStatus, getWindow, parentDepth, hoverDelay, render, tooltipSemanticType }: "
            },
            {
              "kind": "Reference",
              "text": "TooltipProps",
              "canonicalReference": "preact-aria-widgets!TooltipProps:type"
            },
            {
              "kind": "Content",
              "text": "<TriggerType, PopupType>, ref?: "
            },
            {
              "kind": "Reference",
              "text": "Ref",
              "canonicalReference": "preact!Ref:type"
            },
            {
              "kind": "Content",
              "text": "<any>) => import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            }
          ],
          "fileUrlPath": "src/component/tooltip.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "Tooltip",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TooltipProps:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TooltipProps<TriggerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "PartialExcept",
              "canonicalReference": "preact-aria-widgets!~PartialExcept:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TooltipPropsBase",
              "canonicalReference": "preact-aria-widgets!~TooltipPropsBase:interface"
            },
            {
              "kind": "Content",
              "text": "<TriggerType, PopupType>, \"render\" | \"tooltipSemanticType\" | \"onStatus\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/tooltip.tsx",
          "releaseTag": "Public",
          "name": "TooltipProps",
          "typeParameters": [
            {
              "typeParameterName": "TriggerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TooltipState:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TooltipState = "
            },
            {
              "kind": "Content",
              "text": "`${\"hovering\" | \"focused\"}-${\"popup\" | \"trigger\"}` | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "name": "TooltipState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!TooltipStatus:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TooltipStatus = "
            },
            {
              "kind": "Content",
              "text": "\"hover\" | \"focus\" | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "name": "TooltipStatus",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useAccordion:function(1)",
          "docComment": "/**\n * Implements an [Accordion](https://www.w3.org/WAI/ARIA/apg/patterns/accordion/) pattern.\n *\n * @hasChild\n *\n * {@link useAccordionSection}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useAccordion<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "accordionParameters",
              "canonicalReference": "preact-aria-widgets!UseAccordionParameters#accordionParameters"
            },
            {
              "kind": "Content",
              "text": ": { initialIndex, localStorageKey, orientation, ...void2 }, typeaheadNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "linearNavigationParameters",
              "canonicalReference": "preact-prop-helpers!linearNavigationParameters"
            },
            {
              "kind": "Content",
              "text": ": { disableHomeEndKeys, navigatePastEnd, navigatePastStart, pageNavigationSize, onNavigateLinear, ...void1 }, "
            },
            {
              "kind": "Reference",
              "text": "managedChildrenParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParameters#managedChildrenParameters"
            },
            {
              "kind": "Content",
              "text": ": { onAfterChildLayoutEffect, onChildrenMountChange, onChildrenCountChange, ...void3 }, ...void4 }: "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionParameters",
              "canonicalReference": "preact-aria-widgets!UseAccordionParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionReturnType",
              "canonicalReference": "preact-aria-widgets!UseAccordionReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ accordionParameters: { initialIndex, localStorageKey, orientation, ...void2 }, typeaheadNavigationParameters, linearNavigationParameters: { disableHomeEndKeys, navigatePastEnd, navigatePastStart, pageNavigationSize, onNavigateLinear, ...void1 }, managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange, onChildrenCountChange, ...void3 }, ...void4 }",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useAccordion"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionContext<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenContext",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenContext:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseTypeaheadNavigationContext",
              "canonicalReference": "preact-prop-helpers!UseTypeaheadNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContext#accordionSectionParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accordionSectionParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionContextSelf",
                  "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accordionSectionParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContext#linearNavigationParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linearNavigationParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseLinearNavigationParameters",
                  "canonicalReference": "preact-prop-helpers!UseLinearNavigationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement, HeaderButtonElement, M>[\"linearNavigationParameters\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "linearNavigationParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContext#rovingTabIndexReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rovingTabIndexReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseLinearNavigationParameters",
                  "canonicalReference": "preact-prop-helpers!UseLinearNavigationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement, HeaderButtonElement, M>[\"rovingTabIndexReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rovingTabIndexReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionContextSelf<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionContextSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#changeExpandedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeExpandedIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number | null, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "changeExpandedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#changeTabbedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeTabbedIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number | null, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "changeTabbedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#getExpandedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getExpandedIndex: "
                },
                {
                  "kind": "Content",
                  "text": "() => (number | null)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getExpandedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#getTabbedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTabbedIndex: "
                },
                {
                  "kind": "Content",
                  "text": "() => (number | null)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getTabbedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#stableTypeaheadProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stableTypeaheadProps: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stableTypeaheadProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionParameters<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLinearNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseLinearNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, HeaderButtonElement, M>, \"linearNavigationParameters\", \"getLowestIndex\" | \"arrowKeyDirection\" | \"getHighestIndex\" | \"isValid\" | \"indexDemangler\" | \"indexMangler\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseTypeaheadNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseTypeaheadNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, M>, \"typeaheadNavigationParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionParameters#accordionParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accordionParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseAccordionParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accordionParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "name": "UseAccordionParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionParametersSelf#initialIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initialIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionParametersSelf#localStorageKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localStorageKey: "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "PersistentStates",
                  "canonicalReference": "preact-prop-helpers!PersistentStates:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "localStorageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionParametersSelf#orientation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orientation?: "
                },
                {
                  "kind": "Content",
                  "text": "\"vertical\" | \"horizontal\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "orientation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionReturnType<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenReturnType",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionReturnType#accordionReturn:member",
              "docComment": "/**\n * **STABLE**\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accordionReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseAccordionReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accordionReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionContext",
                  "canonicalReference": "preact-aria-widgets!UseAccordionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "name": "UseAccordionReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionReturnTypeSelf#changeExpandedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "changeExpandedIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<number | null, "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "changeExpandedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useAccordionSection:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useAccordionSection<_HeaderContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", BodyElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ buttonParameters, "
            },
            {
              "kind": "Reference",
              "text": "accordionSectionParameters",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters#accordionSectionParameters"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "open",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParametersSelf#open"
            },
            {
              "kind": "Content",
              "text": ": openFromUser, bodyRole }, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-prop-helpers!UseManagedChildParameters#info"
            },
            {
              "kind": "Content",
              "text": ": { index, untabbable, ...info }, textContentParameters, "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters#context"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "accordionSectionParameters",
              "canonicalReference": "preact-aria-widgets!UseAccordionContext#accordionSectionParameters"
            },
            {
              "kind": "Content",
              "text": ": { changeExpandedIndex, "
            },
            {
              "kind": "Reference",
              "text": "changeTabbedIndex",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#changeTabbedIndex"
            },
            {
              "kind": "Content",
              "text": ": setCurrentFocusedIndex, "
            },
            {
              "kind": "Reference",
              "text": "getTabbedIndex",
              "canonicalReference": "preact-aria-widgets!UseAccordionContextSelf#getTabbedIndex"
            },
            {
              "kind": "Content",
              "text": ": getCurrentFocusedIndex, stableTypeaheadProps }, linearNavigationParameters, rovingTabIndexReturn, managedChildContext, typeaheadNavigationContext }, refElementParameters, }: "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionParameters",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionReturnType",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<_HeaderContainerElement, HeaderButtonElement, BodyElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "returnTypeTokenRange": {
            "startIndex": 28,
            "endIndex": 30
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ buttonParameters, accordionSectionParameters: { open: openFromUser, bodyRole }, info: { index, untabbable, ...info }, textContentParameters, context: { accordionSectionParameters: { changeExpandedIndex, changeTabbedIndex: setCurrentFocusedIndex, getTabbedIndex: getCurrentFocusedIndex, stableTypeaheadProps }, linearNavigationParameters, rovingTabIndexReturn, managedChildContext, typeaheadNavigationContext }, refElementParameters, }",
              "parameterTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 27
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "_HeaderContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BodyElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            }
          ],
          "name": "useAccordionSection"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionSectionInfo extends "
            },
            {
              "kind": "Reference",
              "text": "ManagedChildInfo",
              "canonicalReference": "preact-prop-helpers!ManagedChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<number>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "name": "UseAccordionSectionInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled: "
                },
                {
                  "kind": "Reference",
                  "text": "DisabledType",
                  "canonicalReference": "preact-aria-widgets!DisabledType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#focusSelf:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusSelf(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focusSelf"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#getMostRecentlyTabbed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getMostRecentlyTabbed(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getMostRecentlyTabbed"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#getOpenFromParent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOpenFromParent(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getOpenFromParent"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#setMostRecentlyTabbed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setMostRecentlyTabbed(tabbed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "tabbed",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setMostRecentlyTabbed"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#setOpenFromParent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOpenFromParent(open: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "open",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "setOpenFromParent"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo#untabbable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "untabbable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "untabbable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionSectionParameters<HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseAccordionSectionInfo",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseTypeaheadNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseTypeaheadNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement, M>, \"info\" | \"refElementReturn\" | \"context\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseRefElementParameters",
              "canonicalReference": "preact-prop-helpers!UseRefElementParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M, \"index\" | \"untabbable\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseButtonParameters",
              "canonicalReference": "preact-aria-widgets!UseButtonParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>, \"buttonParameters\", \"pressed\" | \"role\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionSectionParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters#accordionSectionParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accordionSectionParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionSectionParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseAccordionSectionParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accordionSectionParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionContext",
                  "canonicalReference": "preact-aria-widgets!UseAccordionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 15
            },
            {
              "startIndex": 16,
              "endIndex": 20
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionSectionParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionSectionParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "name": "UseAccordionSectionParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParametersSelf#bodyRole:member",
              "docComment": "/**\n * Generally `\"region\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bodyRole: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.AriaRole",
                  "canonicalReference": "preact!JSXInternal.AriaRole:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bodyRole",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionParametersSelf#open:member",
              "docComment": "/**\n * If this prop is `true` or `false` (isn't null), then this section will be open/closed regardless of what the parent's singular open index is.\n *\n * In other words, leave null to only allow one section to be open at a time. To allow multiple sections to be open at once, set the parent's index to null and toggle this `true`/`false` when the button's pressed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "open: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "open",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionSectionReturnType<HeaderElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", HeaderButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", BodyElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>, \"props\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseRefElementReturnType",
              "canonicalReference": "preact-prop-helpers!UseRefElementReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>, \"propsStable\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseTextContentReturnType",
              "canonicalReference": "preact-prop-helpers!UseTextContentReturnType:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseHasCurrentFocusReturnType",
              "canonicalReference": "preact-prop-helpers!UseHasCurrentFocusReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<HeaderButtonElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "HeaderElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "HeaderButtonElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "BodyElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseAccordionSectionReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType#accordionSectionReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accordionSectionReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAccordionSectionReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "accordionSectionReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType#propsBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsBody: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<BodyElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsBody",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType#propsHeader:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsHeader: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsHeader",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnType#propsHeaderButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsHeaderButton: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<HeaderButtonElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsHeaderButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            },
            {
              "startIndex": 12,
              "endIndex": 16
            },
            {
              "startIndex": 17,
              "endIndex": 18
            },
            {
              "startIndex": 19,
              "endIndex": 21
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseAccordionSectionReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-accordion.tsx",
          "releaseTag": "Public",
          "name": "UseAccordionSectionReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnTypeSelf#expanded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expanded: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "expanded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnTypeSelf#focused:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focused: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "focused",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseAccordionSectionReturnTypeSelf#mostRecentlyTabbed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mostRecentlyTabbed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mostRecentlyTabbed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useButton:function(1)",
          "docComment": "/**\n * Implements a [Button](https://www.w3.org/WAI/ARIA/apg/patterns/button/) pattern.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useButton<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "buttonParameters",
              "canonicalReference": "preact-aria-widgets!UseButtonParameters#buttonParameters"
            },
            {
              "kind": "Content",
              "text": ": { tagButton, disabled, onPress, pressed, role }, pressParameters, refElementParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseButtonParameters",
              "canonicalReference": "preact-aria-widgets!UseButtonParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseButtonReturnType",
              "canonicalReference": "preact-aria-widgets!UseButtonReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ buttonParameters: { tagButton, disabled, onPress, pressed, role }, pressParameters, refElementParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useButton"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseButtonParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseButtonParameters<E extends "
            },
            {
              "kind": "Reference",
              "text": "Node",
              "canonicalReference": "!Node:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseRefElementParameters",
              "canonicalReference": "preact-prop-helpers!UseRefElementParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<E>, \"pressParameters\", \"onPressSync\" | \"focusSelf\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseButtonParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParameters#buttonParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttonParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseButtonParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "buttonParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseButtonParametersSelf<E extends "
            },
            {
              "kind": "Reference",
              "text": "Node",
              "canonicalReference": "!Node:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseButtonParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled: "
                },
                {
                  "kind": "Reference",
                  "text": "DisabledType",
                  "canonicalReference": "preact-aria-widgets!DisabledType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf#onPress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPress: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | null | "
                },
                {
                  "kind": "Reference",
                  "text": "ButtonPressEventHandler",
                  "canonicalReference": "preact-aria-widgets!ButtonPressEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf#pressed:member",
              "docComment": "/**\n * Important: A button can also be marked as pressed by changing its label -- e.g. `muted` to `unmuted`. If this is the case, `pressed` **must** be null!\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pressed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.AriaRole",
                  "canonicalReference": "preact!JSXInternal.AriaRole:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonParametersSelf#tagButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagButton: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseButtonReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseButtonReturnType<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseRefElementReturnType",
              "canonicalReference": "preact-prop-helpers!UseRefElementReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<E>, \"propsStable\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-button.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseButtonReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseButtonReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            },
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useCheckbox:function(1)",
          "docComment": "/**\n * Implements a [Checkbox](https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/) pattern.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCheckbox<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "checkboxParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxParameters#checkboxParameters"
            },
            {
              "kind": "Content",
              "text": ": { onCheckedChange }, checkboxLikeParameters, labelParameters, pressParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ checkboxParameters: { onCheckedChange }, checkboxLikeParameters, labelParameters, pressParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelType",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useCheckbox"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useCheckboxGroup:function(1)",
          "docComment": "/**\n * Allows a parent checkbox to control a number of child checkboxes, in accordance with the [Checkbox](https://www.w3.org/WAI/ARIA/apg/patterns/checkbox/) pattern.\n *\n * @hasChild\n *\n * {@link useCheckboxGroupParent}\n *\n * @hasChild\n *\n * {@link useCheckboxGroupChild}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCheckboxGroup<GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": ">({ linearNavigationParameters, rovingTabIndexParameters, "
            },
            {
              "kind": "Reference",
              "text": "checkboxGroupParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParameters#checkboxGroupParameters"
            },
            {
              "kind": "Content",
              "text": ": { orientation }, ...listNavParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TCE, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TCE, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ linearNavigationParameters, rovingTabIndexParameters, checkboxGroupParameters: { orientation }, ...listNavParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              }
            }
          ],
          "name": "useCheckboxGroup"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useCheckboxGroupChild:function(1)",
          "docComment": "/**\n * Implements the \"child\" part of a checkbox group.\n *\n * @remarks\n *\n * Does not implement any actual \"checkbox\" functionality, but it does tell you what to do *with* a checkbox.\n *\n * (That is to say, use `onChildCheckedChange` whenever your checkbox or checkbox-like thing changes, and properly implement `onChangeFromParent` to work properly when the parent changes)\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCheckboxGroupChild<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": ">({ checkboxGroupChildParameters, context, info, textContentParameters, }: "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupChildParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupChildReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ checkboxGroupChildParameters, context, info, textContentParameters, }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "useCheckboxGroupChild"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupChildParameters<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>, \"info\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupChildParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParameters#checkboxGroupChildParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupChildParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupChildParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupChildParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupContext",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TCE, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParameters#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteListNavigationChildParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE, M>[\"info\"], \"checkboxInfo\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupChildParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxGroupChildParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParametersSelf#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildParametersSelf#onChangeFromParent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChangeFromParent(checked: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": ", e: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "checked",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "name": "onChangeFromParent"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupChildReturnType<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>, \"singleSelectionChildReturn\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupChildReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnType#checkboxGroupChildReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupChildReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupChildReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupChildReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupChildReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxGroupChildReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnTypeSelf#onChildCheckedChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChildCheckedChange: "
                },
                {
                  "kind": "Content",
                  "text": "(checked: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChildCheckedChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupChildReturnTypeSelf#onControlIdChanged:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onControlIdChanged: "
                },
                {
                  "kind": "Content",
                  "text": "(next: string | undefined, prev: string | undefined) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onControlIdChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupParameters<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, TabbableChildElement, M>, \"linearNavigationParameters\" | \"paginatedChildrenParameters\" | \"singleSelectionParameters\" | \"rovingTabIndexParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, TabbableChildElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, TabbableChildElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParameters#checkboxGroupParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 17
            },
            {
              "startIndex": 18,
              "endIndex": 22
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxGroupParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParametersSelf#orientation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orientation: "
                },
                {
                  "kind": "Content",
                  "text": "\"vertical\" | \"horizontal\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "orientation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useCheckboxGroupParent:function(1)",
          "docComment": "/**\n * Implements the logic for the parent checkbox (but not the checkbox itself).\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCheckboxGroupParent<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": ">({ context, info, textContentParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupParentParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxGroupParentReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ context, info, textContentParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "useCheckboxGroupParent"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupParentParameters<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>, \"info\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupParentParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupContext",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TCE, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentParameters#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteListNavigationChildParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE, "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupInfo",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TCE>>[\"info\"], never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupParentReturnType<TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, M>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupParentReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnType#checkboxGroupParentReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxGroupParentReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxGroupParentReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxGroupParentReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupParentReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxGroupParentReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnTypeSelf#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnTypeSelf#getPercent:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPercent(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getPercent"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupParentReturnTypeSelf#onParentCheckedChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onParentCheckedChange: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onParentCheckedChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxGroupReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxGroupReturnType<GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "CheckboxGroupInfo",
              "canonicalReference": "preact-aria-widgets!CheckboxGroupInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TCE, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-group.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxGroupReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxGroupReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxGroupContext",
                  "canonicalReference": "preact-aria-widgets!CheckboxGroupContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<GroupElement, TCE, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useCheckboxLike:function(1)",
          "docComment": "/**\n * Handles any component where there's:\n * ```md-literal\n * 1. Some kind of an on/off binary/trinary input element that needs event handlers\n * 2. Some kind of label for that input element\n * ```\n *\n * md-literal\n *\n * See also `useLabel` for when there's a label for a non-checkbox-like component.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useCheckboxLike<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, randomIdInputParameters, randomIdLabelParameters, "
            },
            {
              "kind": "Reference",
              "text": "checkboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters#checkboxLikeParameters"
            },
            {
              "kind": "Content",
              "text": ": { checked, disabled, "
            },
            {
              "kind": "Reference",
              "text": "onInput",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf#onInput"
            },
            {
              "kind": "Content",
              "text": ": onInputSync, role, ...void1 }, refElementInputReturn, refElementLabelReturn, "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { excludeSpace, longPressThreshold, ...void2 }, ...void3 }: "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, randomIdInputParameters, randomIdLabelParameters, checkboxLikeParameters: { checked, disabled, onInput: onInputSync, role, ...void1 }, refElementInputReturn, refElementLabelReturn, pressParameters: { excludeSpace, longPressThreshold, ...void2 }, ...void3 }",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelType",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useCheckboxLike"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxLikeParameters<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputType, LabelType>, \"labelParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputType, LabelType>, \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<any>, \"pressParameters\", \"longPressThreshold\" | \"excludeSpace\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelType",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxLikeParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters#checkboxLikeParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxLikeParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxLikeParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxLikeParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters#refElementInputReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refElementInputReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRefElementReturnType",
                  "canonicalReference": "preact-prop-helpers!UseRefElementReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<InputType>[\"refElementReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refElementInputReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters#refElementLabelReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refElementLabelReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRefElementReturnType",
                  "canonicalReference": "preact-prop-helpers!UseRefElementReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<LabelType>[\"refElementReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refElementLabelReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            },
            {
              "startIndex": 12,
              "endIndex": 16
            },
            {
              "startIndex": 17,
              "endIndex": 21
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxLikeParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxLikeParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf#checked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checked: "
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxCheckedType",
                  "canonicalReference": "preact-aria-widgets!CheckboxCheckedType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf#disabled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled: "
                },
                {
                  "kind": "Reference",
                  "text": "DisabledType",
                  "canonicalReference": "preact-aria-widgets!DisabledType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf#onInput:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onInput(event: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "onInput"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParametersSelf#role:member",
              "docComment": "/**\n * The role attribute to use, when applicable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.AriaRole",
                  "canonicalReference": "preact!JSXInternal.AriaRole:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxLikeReturnType<InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseLabelReturnType",
              "canonicalReference": "preact-aria-widgets!UseLabelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxLikeReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType#checkboxLikeInputReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxLikeInputReturn: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        propsUnstable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<InputType>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxLikeInputReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType#checkboxLikeLabelReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxLikeLabelReturn: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        propsUnstable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelType>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxLikeLabelReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType#checkboxLikeReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxLikeReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxLikeReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxLikeReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType#pressInputReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pressInputReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UsePressReturnType",
                  "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<InputType>[\"pressReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressInputReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType#pressLabelReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pressLabelReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UsePressReturnType",
                  "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<LabelType>[\"pressReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressLabelReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxLikeReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox-like.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxLikeReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnTypeSelf#focusSelf:member(1)",
              "docComment": "/**\n * Call this to focus whichever element handles the focus based on `labelPosition`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusSelf(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "focusSelf"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxParameters<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", I extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", L extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, I, L>, \"refElementLabelReturn\" | \"refElementInputReturn\" | \"checkboxLikeParameters\" | \"randomIdInputParameters\" | \"randomIdLabelParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, I, L>, \"checkboxLikeParameters\", \"onInput\" | \"role\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "L",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxParameters#checkboxParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 7,
              "endIndex": 11
            },
            {
              "startIndex": 12,
              "endIndex": 16
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "name": "UseCheckboxParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxParametersSelf#onCheckedChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCheckedChange: "
                },
                {
                  "kind": "Reference",
                  "text": "Nullable",
                  "canonicalReference": "preact-prop-helpers!Nullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CheckboxChangeEventHandler",
                  "canonicalReference": "preact-aria-widgets!CheckboxChangeEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onCheckedChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxReturnType<InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputType, LabelType>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxReturnType#checkboxReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "checkboxReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseCheckboxReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseCheckboxReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<InputType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "checkboxReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseCheckboxReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseCheckboxReturnTypeSelf<InputType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-checkbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "InputType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseCheckboxReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseCheckboxReturnTypeSelf#propsUnstable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsUnstable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<InputType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsUnstable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useDefault:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDefault<K extends "
            },
            {
              "kind": "Reference",
              "text": "DefaultExcepts",
              "canonicalReference": "preact-aria-widgets!~DefaultExcepts:type"
            },
            {
              "kind": "Content",
              "text": ">(context: "
            },
            {
              "kind": "Content",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": ", userValue: "
            },
            {
              "kind": "Content",
              "text": "null | undefined | "
            },
            {
              "kind": "Reference",
              "text": "ContextType",
              "canonicalReference": "preact-aria-widgets!~ContextType:type"
            },
            {
              "kind": "Content",
              "text": "<(typeof "
            },
            {
              "kind": "Reference",
              "text": "ContextDefaults",
              "canonicalReference": "preact-aria-widgets!~ContextDefaults:var"
            },
            {
              "kind": "Content",
              "text": ")[K]>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ContextType",
              "canonicalReference": "preact-aria-widgets!~ContextType:type"
            },
            {
              "kind": "Content",
              "text": "<(typeof "
            },
            {
              "kind": "Reference",
              "text": "ContextDefaults",
              "canonicalReference": "preact-aria-widgets!~ContextDefaults:var"
            },
            {
              "kind": "Content",
              "text": ")[K]>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/component/util.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "userValue",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useDefault"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useDialog:function(1)",
          "docComment": "/**\n * Implements a [Dialog](https://www.w3.org/WAI/ARIA/apg/patterns/dialog/) pattern.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDialog<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseDialogParameters",
              "canonicalReference": "preact-aria-widgets!UseDialogParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<DialogElement, TitleElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseDialogReturnType",
              "canonicalReference": "preact-aria-widgets!UseDialogReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DialogElement, TitleElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-dialog.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "DialogElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useDialog"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseDialogParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseDialogParameters<_DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"backdrop\">, \"focusTrapParameters\" | \"dismissParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"backdrop\">, \"focusTrapParameters\", \"trapActive\" | \"onlyMoveFocus\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"backdrop\">, \"dismissParameters\", \"closeOnLostFocus\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-dialog.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "_DialogElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_TitleElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseDialogParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            },
            {
              "startIndex": 20,
              "endIndex": 24
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseDialogReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseDialogReturnType<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalReturnType",
              "canonicalReference": "preact-prop-helpers!UseModalReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, PopupElement>, \"propsStableSource\" | \"propsStablePopup\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-dialog.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseDialogReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDialogReturnType#propsDialog:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsDialog: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<PopupElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsDialog",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDialogReturnType#propsSource:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsSource: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<SourceElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDialogReturnType#propsTitle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TitleElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useDrawer:function(1)",
          "docComment": "/**\n * Implements a drawer, which is a specific kind of [Dialog](https://www.w3.org/WAI/ARIA/apg/patterns/dialog/).\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useDrawer<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseDrawerParameters",
              "canonicalReference": "preact-aria-widgets!UseDrawerParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<PopupElement, TitleElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseDrawerReturnType",
              "canonicalReference": "preact-aria-widgets!UseDrawerReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, PopupElement, TitleElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-drawer.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ dismissParameters, escapeDismissParameters, focusTrapParameters, labelParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useDrawer"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseDrawerParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseDrawerParameters<_DialogElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"backdrop\" | \"lost-focus\">, \"focusTrapParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"backdrop\" | \"lost-focus\">, \"focusTrapParameters\", \"onlyMoveFocus\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-drawer.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "_DialogElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_TitleElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseDrawerParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseDrawerReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseDrawerReturnType<FocusContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", SourceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", DrawerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TitleElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalReturnType",
              "canonicalReference": "preact-prop-helpers!UseModalReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<FocusContainerElement, SourceElement, DrawerElement>, \"propsStableSource\" | \"propsStablePopup\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-drawer.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "FocusContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "SourceElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "DrawerElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TitleElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseDrawerReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDrawerReturnType#propsDrawer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsDrawer: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<DrawerElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsDrawer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDrawerReturnType#propsSource:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsSource: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<SourceElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsSource",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseDrawerReturnType#propsTitle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTitle: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TitleElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useFocusSentinel:function(1)",
          "docComment": "/**\n * A focus sentinal is a hidden but focusable element that comes at the start or end of the out-of-place-focusable component that, when activated or focused over, closes the component (if focused within 100ms of the open prop changing, instead of closing, focusing the sentinel immediately asks it to focus itself). This exists for things like menus which can have focus but also need a way to return to whatever out-of-place parent they came from when naturally tabbed out of (as opposed to dialogs which loop back around when tabbed out of). While mouse users can click out of a menu and keyboard users can escape to close a menu, screen readers and other input methods that don't use those two would become stuck.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useFocusSentinel<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "focusSentinel",
              "canonicalReference": "preact-aria-widgets!UseFocusSentinelParameters#focusSentinel"
            },
            {
              "kind": "Content",
              "text": ": { open, onClose, sendFocusToMenu } }: "
            },
            {
              "kind": "Reference",
              "text": "UseFocusSentinelParameters",
              "canonicalReference": "preact-aria-widgets!UseFocusSentinelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "ElementProps",
              "canonicalReference": "preact-prop-helpers!ElementProps:type"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ focusSentinel: { open, onClose, sendFocusToMenu } }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useFocusSentinel"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseFocusSentinelParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseFocusSentinelParameters "
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "releaseTag": "Public",
          "name": "UseFocusSentinelParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseFocusSentinelParameters#focusSentinel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "focusSentinel: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        sendFocusToMenu: () => void;\n        open: boolean;\n        onClose(): void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "focusSentinel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useGridlist:function(1)",
          "docComment": "/**\n * Implements a gridlist, which is a hybrid of a [Listbox](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/) and a [Grid](https://www.w3.org/WAI/ARIA/apg/patterns/grid/).\n *\n * @remarks\n *\n * A Listbox is a very limited structure, essentially being just a list with no further interactive content allowed.\n *\n * If you need a list where each list item has a menu or a button or other non-text content, a Gridlist is probably what you want.\n *\n * @hasChild\n *\n * {@link useGridlistRow}\n *\n * @hasChild\n *\n * {@link useGridlistCell}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useGridlist<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, "
            },
            {
              "kind": "Reference",
              "text": "listboxParameters",
              "canonicalReference": "preact-aria-widgets!~listboxParameters"
            },
            {
              "kind": "Content",
              "text": ": { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange }, rovingTabIndexParameters, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistParameters",
              "canonicalReference": "preact-aria-widgets!UseGridlistParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistReturnType",
              "canonicalReference": "preact-aria-widgets!UseGridlistReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, LabelElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "returnTypeTokenRange": {
            "startIndex": 26,
            "endIndex": 28
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, listboxParameters: { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange }, rovingTabIndexParameters, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 25
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "defaultTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 20
              }
            }
          ],
          "name": "useGridlist"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useGridlistCell:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useGridlistCell<GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { onPressSync, longPressThreshold, onPressingChange, ...void1 }, ...p }: "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistCellParameters",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement, CM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistCellReturnType",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ pressParameters: { onPressSync, longPressThreshold, onPressingChange, ...void1 }, ...p }",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "useGridlistCell"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistCellParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistCellParameters<GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement, CM>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>, \"pressParameters\", \"longPressThreshold\" | \"onPressingChange\" | \"onPressSync\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistCellParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistCellReturnType<GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExtendMerge",
              "canonicalReference": "preact-prop-helpers!ExtendMerge:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement, CM>, "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>, \"pressReturn\">>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistCellReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType#propsCell:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsCell: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<GridlistCellElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType#propsPress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsPress: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsPress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistCellReturnType#propsTabbable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTabbable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTabbable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 16
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistContext<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteGridNavigationRowContext",
              "canonicalReference": "preact-prop-helpers!CompleteGridNavigationRowContext:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistContext#gridlistRowContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridlistRowContext: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        selectionLimit: \"single\" | \"multi\" | \"none\";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gridlistRowContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 13,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistParameters<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationDeclarativeParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationDeclarativeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>, \"singleSelectionDeclarativeParameters\" | \"rovingTabIndexParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, RM>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseListboxParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, LabelElement, RM>, \"listboxParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 19
            },
            {
              "startIndex": 20,
              "endIndex": 24
            },
            {
              "startIndex": 25,
              "endIndex": 29
            },
            {
              "startIndex": 30,
              "endIndex": 34
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistParametersSelf<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseListboxParametersSelf",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, LabelElement, RM>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistParametersSelf",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistReturnType<GridlistElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>, \"singleSelectionReturn\" | \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistContext",
                  "canonicalReference": "preact-aria-widgets!UseGridlistContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<GridlistElement, GridlistRowElement, GridlistCellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistReturnType#propsGridlist:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsGridlist: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<GridlistElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsGridlist",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistReturnType#propsGridlistLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsGridlistLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsGridlistLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useGridlistRow:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useGridlistRow<GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "gridlistRowParameters",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters#gridlistRowParameters"
            },
            {
              "kind": "Content",
              "text": ": { selected }, linearNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters#context"
            },
            {
              "kind": "Content",
              "text": ": cx1, info, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, ...void1 }: "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistRowParameters",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseGridlistRowReturnType",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "returnTypeTokenRange": {
            "startIndex": 24,
            "endIndex": 26
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ gridlistRowParameters: { selected }, linearNavigationParameters, context: cx1, info, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, ...void1 }",
              "parameterTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 23
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              }
            }
          ],
          "name": "useGridlistRow"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistRowContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistRowContext<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteGridNavigationCellContext",
              "canonicalReference": "preact-prop-helpers!CompleteGridNavigationCellContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistRowContext",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistRowParameters<GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement, RM, CM>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistRowParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistContext",
                  "canonicalReference": "preact-aria-widgets!UseGridlistContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, GridlistRowElement, GridlistCellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParameters#gridlistRowParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gridlistRowParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseGridlistRowParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseGridlistRowParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gridlistRowParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistRowParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistRowParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "name": "UseGridlistRowParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseGridlistRowParametersSelf#selected:member",
              "docComment": "/**\n * When the `selectionLimit` is `\"single\"`, this must be `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseGridlistRowReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseGridlistRowReturnType<GridlistRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GridlistCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistRowInfo",
              "canonicalReference": "preact-aria-widgets!GridlistRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "GridlistCellInfo",
              "canonicalReference": "preact-aria-widgets!GridlistCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GridlistRowElement, GridlistCellElement, RM, CM>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-gridlist.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "GridlistRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GridlistCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseGridlistRowReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useLabel:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useLabel<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ randomIdInputParameters, randomIdLabelParameters, "
            },
            {
              "kind": "Reference",
              "text": "labelParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters#labelParameters"
            },
            {
              "kind": "Content",
              "text": ": { tagInput, tagLabel, ariaLabel, labelPosition, onLabelClick } }: "
            },
            {
              "kind": "Reference",
              "text": "UseLabelParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseLabelReturnType",
              "canonicalReference": "preact-aria-widgets!UseLabelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ randomIdInputParameters, randomIdLabelParameters, labelParameters: { tagInput, tagLabel, ariaLabel, labelPosition, onLabelClick } }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useLabel"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseLabelParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseLabelParameters<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseLabelParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters#labelParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseLabelParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<LP, InputElement, LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "labelParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters#randomIdInputParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdInputParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomDualIdsParameters",
                  "canonicalReference": "preact-prop-helpers!UseRandomDualIdsParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"randomIdInputParameters\"], \"otherReferencerProp\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdInputParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters#randomIdLabelParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdLabelParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomDualIdsParameters",
                  "canonicalReference": "preact-prop-helpers!UseRandomDualIdsParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"randomIdLabelParameters\"], \"otherReferencerProp\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdLabelParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseLabelParametersSelf<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseLabelParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf#ariaLabel:member",
              "docComment": "/**\n * When `null`, this corresponds to having a visible label (with `labelPosition` == `\"separate\"` or `\"wrapping\"`).\n *\n * When a string, this corresponds to `labelPosition` == `\"none\"`; this label is only visible to assistive technologies and *not* visible otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ariaLabel: "
                },
                {
                  "kind": "Content",
                  "text": "LP extends \"none\" ? string : null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ariaLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf#labelPosition:member",
              "docComment": "/**\n * Where is this component's label relative to the component itself?\n *\n * * `\"separate\"`: `<label /><input />` * `\"wrapping\"`: `<label><input /></label>` * `\"none\"`: `<input aria-label=\"...\" />`\n *\n * In cases where you're using non-`input` and `label` elements, `\"separate\"` and `\"wrapping\"` are identical; this is most important for native `label` and `input` elements, as they only need a `for` prop when the label doesn't wrap the input.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "labelPosition: "
                },
                {
                  "kind": "Content",
                  "text": "LP"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "labelPosition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf#onLabelClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onLabelClick: "
                },
                {
                  "kind": "Content",
                  "text": "null | ((e: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onLabelClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf#tagInput:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagInput: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<InputElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelParametersSelf#tagLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseLabelReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseLabelReturnType<InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseRandomDualIdsReturnType",
              "canonicalReference": "preact-prop-helpers!UseRandomDualIdsReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<LabelElement>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseLabelReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            },
            {
              "startIndex": 8,
              "endIndex": 12
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useLabelSynthetic:function(1)",
          "docComment": "/**\n * Shortcut for `useLabel` that assumes we're just never working with native HTML `input` and `label` elements. So for labelling guaranteably non-native elements.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useLabelSynthetic<InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "labelParameters",
              "canonicalReference": "preact-aria-widgets!~labelParameters"
            },
            {
              "kind": "Content",
              "text": ": { ariaLabel, onLabelClick }, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseLabelReturnType",
              "canonicalReference": "preact-aria-widgets!UseLabelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<InputElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters: { ariaLabel, onLabelClick }, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useLabelSynthetic"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseLabelSyntheticParameters extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", any, any>, \"labelParameters\", \"ariaLabel\" | \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-label.ts",
          "releaseTag": "Public",
          "name": "UseLabelSyntheticParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters#randomIdInputParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdInputParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomDualIdsParameters",
                  "canonicalReference": "preact-prop-helpers!UseRandomDualIdsParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"randomIdInputParameters\"], \"otherReferencerProp\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdInputParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters#randomIdLabelParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdLabelParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomDualIdsParameters",
                  "canonicalReference": "preact-prop-helpers!UseRandomDualIdsParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"randomIdLabelParameters\"], \"otherReferencerProp\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdLabelParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useListbox:function(1)",
          "docComment": "/**\n * Implements a [Listbox](https://www.w3.org/WAI/ARIA/apg/patterns/listbox/) pattern.\n *\n * @remarks\n *\n * A listbox is a very limited widget and its items cannot contain interactive or non-text content.\n *\n * @hasChild\n *\n * {@link useListboxItem}\n *\n * @see\n *\n * {@link useGridlist} for a more capable list widget.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useListbox<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, "
            },
            {
              "kind": "Reference",
              "text": "listboxParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxParameters#listboxParameters"
            },
            {
              "kind": "Content",
              "text": ": { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange, orientation }, linearNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "singleSelectionParameters",
              "canonicalReference": "!singleSelectionParameters"
            },
            {
              "kind": "Content",
              "text": ": { ariaPropName, selectionMode }, rovingTabIndexParameters, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseListboxParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseListboxReturnType",
              "canonicalReference": "preact-aria-widgets!UseListboxReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 22
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, listboxParameters: { selectionLimit, groupingType, selectedIndex, onSelectedIndexChange, orientation }, linearNavigationParameters, singleSelectionParameters: { ariaPropName, selectionMode }, rovingTabIndexParameters, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              }
            }
          ],
          "name": "useListbox"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxContext<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteListNavigationContext",
              "canonicalReference": "preact-prop-helpers!CompleteListNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxContext#listboxContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listboxContext: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        selectionLimit: \"single\" | \"multi\" | \"none\";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listboxContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useListboxItem:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useListboxItem<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParameters#context"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "listboxContext",
              "canonicalReference": "preact-aria-widgets!UseListboxContext#listboxContext"
            },
            {
              "kind": "Content",
              "text": ": { selectionLimit }, ...context }, "
            },
            {
              "kind": "Reference",
              "text": "listboxParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParameters#listboxParameters"
            },
            {
              "kind": "Content",
              "text": ": { selected, onMultiSelect }, "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { focusSelf, allowRepeatPresses, excludeEnter, excludePointer, longPressThreshold, onPressingChange, ...void1 }, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseListboxItemParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseListboxItemReturnType",
              "canonicalReference": "preact-aria-widgets!UseListboxItemReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 22
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ context: { listboxContext: { selectionLimit }, ...context }, listboxParameters: { selected, onMultiSelect }, pressParameters: { focusSelf, allowRepeatPresses, excludeEnter, excludePointer, longPressThreshold, onPressingChange, ...void1 }, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "useListboxItem"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxItemParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxItemParameters<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement, M>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>, \"pressParameters\", \"excludeSpace\" | \"onPressSync\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxItemParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxContext",
                  "canonicalReference": "preact-aria-widgets!UseListboxContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, ListItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParameters#listboxParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listboxParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxItemParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseListboxItemParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListItemElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listboxParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            },
            {
              "startIndex": 9,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxItemParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxItemParametersSelf<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxItemParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParametersSelf#onMultiSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMultiSelect: "
                },
                {
                  "kind": "Content",
                  "text": "null | ((e: "
                },
                {
                  "kind": "Reference",
                  "text": "ListboxMultiSelectEvent",
                  "canonicalReference": "preact-aria-widgets!ListboxMultiSelectEvent:type"
                },
                {
                  "kind": "Content",
                  "text": "<ListItemElement>) => void)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onMultiSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxItemParametersSelf#selected:member",
              "docComment": "/**\n * When the `selectionLimit` is `\"single\"`, this must be `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxItemReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxItemReturnType<ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxItemReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxParameters<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>, \"rovingTabIndexParameters\" | \"linearNavigationParameters\" | \"singleSelectionParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>, \"singleSelectionParameters\", \"ariaPropName\" | \"selectionMode\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParameters#listboxParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listboxParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListElement, ListItemElement, _LabelElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "listboxParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            },
            {
              "startIndex": 20,
              "endIndex": 24
            },
            {
              "startIndex": 25,
              "endIndex": 29
            },
            {
              "startIndex": 30,
              "endIndex": 34
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxParametersSelf<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf#groupingType:member",
              "docComment": "/**\n * * `\"without-groups\"`: This is a listbox with no groups * `\"with-groups\"`: This is a listbox that is grouped into 2 or more labelled sections. In this case, **all navigation and selection is disabled** (meaning you can pass whatever you'd like to them, it's all ignored) and delegated to the child `group`s. * `\"group\"`: This is a group, contained within a listbox with `type==\"with-groups\"`\n *\n * There is currently no support for a mix of grouped and ungrouped options.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupingType: "
                },
                {
                  "kind": "Content",
                  "text": "\"with-groups\" | \"without-groups\" | \"group\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "groupingType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf#onSelectedIndexChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectedIndexChange: "
                },
                {
                  "kind": "Reference",
                  "text": "UseSingleSelectionDeclarativeParameters",
                  "canonicalReference": "preact-prop-helpers!UseSingleSelectionDeclarativeParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"singleSelectionDeclarativeParameters\"][\"onSelectedIndexChange\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelectedIndexChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf#orientation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orientation: "
                },
                {
                  "kind": "Content",
                  "text": "\"horizontal\" | \"vertical\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "orientation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf#selectedIndex:member",
              "docComment": "/**\n * Only used when `groupingType` is `\"without-groups\"` or `\"group\"`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxParametersSelf#selectionLimit:member",
              "docComment": "/**\n * When `\"single\"`, the selected item is controlled via `selectedIndex`. When `\"multi\"`, the selected items are controlled by their individual `selected` props.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectionLimit: "
                },
                {
                  "kind": "Content",
                  "text": "\"single\" | \"multi\" | \"none\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectionLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseListboxReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseListboxReturnType<ListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ListItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ListboxInfo",
              "canonicalReference": "preact-aria-widgets!ListboxInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ListItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ListElement, ListItemElement, M>, \"singleSelectionReturn\" | \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-listbox.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ListItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseListboxReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseListboxContext",
                  "canonicalReference": "preact-aria-widgets!UseListboxContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ListElement, ListItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxReturnType#propsListbox:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsListbox: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ListElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsListbox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseListboxReturnType#propsListboxLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsListboxLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsListboxLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useMenu:function(1)",
          "docComment": "/**\n * Implements the [Menu](https://www.w3.org/WAI/ARIA/apg/patterns/menubar/) and [Menu Button](https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/) patterns.\n *\n * @remarks\n *\n * A menu is a specialization of a menubar (something that handles navigation among a set of menuitems) and a menu surface (something that handles moving focus to/from an unrelated area of the page).\n *\n * Additionally, pressing the arrow key that corresponds to the direction that the menu opens in will open it.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenu<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": ">({ dismissParameters, escapeDismissParameters, "
            },
            {
              "kind": "Reference",
              "text": "menuParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuParameters#menuParameters"
            },
            {
              "kind": "Content",
              "text": ": { openDirection, onOpen }, menuSurfaceParameters, toolbarParameters, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseMenuParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuParentElement, MenuButtonElement, MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseMenuReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenuReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuParentElement, MenuItemElement, MenuButtonElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ dismissParameters, escapeDismissParameters, menuParameters: { openDirection, onOpen }, menuSurfaceParameters, toolbarParameters, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuButtonElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useMenu"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useMenubar:function(1)",
          "docComment": "/**\n * Implements a [Menubar](https://www.w3.org/WAI/ARIA/apg/patterns/menubar/) pattern.\n *\n * @remarks\n *\n * A menubar is identical to a toolbar, except that every item in a menubar is a menuitem (or similar) and has some sort of role and action when pressed besides just single selection (if applicable).\n *\n * (A toolbar child won't have a defined role, but every menubar child will)\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenubar<MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": ">(args: "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenubarReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useMenubar"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useMenubarChild:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenubarChild<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "menuItemParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParameters#menuItemParameters"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "onPress",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParametersSelf#onPress"
            },
            {
              "kind": "Content",
              "text": ": opu, role }, "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { onPressingChange, ...void1 }, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarItemParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarItemReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 17
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ menuItemParameters: { onPress: opu, role }, pressParameters: { onPressingChange, ...void1 }, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useMenubarChild"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarContext<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarContext",
              "canonicalReference": "preact-aria-widgets!UseToolbarContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarContext",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarItemParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarItemParameters<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToolbarChildParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>, \"toolbarChildParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>, \"pressParameters\", \"onPressingChange\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarItemParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParameters#menuItemParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenubarItemParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseMenubarItemParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuItemElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "menuItemParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarItemParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarItemParametersSelf<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarItemParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParametersSelf#onPress:member",
              "docComment": "/**\n * Optional. Applies in addition to any single-selection behavior.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPress: "
                },
                {
                  "kind": "Content",
                  "text": "null | ((e: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.TargetedEvent",
                  "canonicalReference": "preact!JSXInternal.TargetedEvent:type"
                },
                {
                  "kind": "Content",
                  "text": "<MenuItemElement>) => void)"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParametersSelf#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Content",
                  "text": "\"menuitem\" | \"menuitemcheckbox\" | \"menuitemradio\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarItemReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarItemReturnType<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToolbarChildReturnType",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarItemReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarParameters<MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarReturnType<MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseToolbarReturnType",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, LabelElement, M>, \"propsToolbar\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenubarReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenubarContext",
                  "canonicalReference": "preact-aria-widgets!UseMenubarContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuParentElement, MenuItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenubarReturnType#propsMenubar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsMenubar: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<MenuParentElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsMenubar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenubarSubInfo<ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menubar.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenubarSubInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuContext<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarContext",
              "canonicalReference": "preact-aria-widgets!UseMenubarContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuContext#menu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menu: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        closeFromMenuItemClicked(): void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "menu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useMenuItem:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenuItem<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": ">(p: "
            },
            {
              "kind": "Reference",
              "text": "UseMenuItemParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuItemParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseMenuItemReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenuItemReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "p",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useMenuItem"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuItemParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuItemParameters<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarItemParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuItemParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuItemParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuContext",
                  "canonicalReference": "preact-aria-widgets!UseMenuContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, MenuItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuItemReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuItemReturnType<MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarItemReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenubarItemReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuItemReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuItemReturnType#menuItemReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuItemReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "MenuItemReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!MenuItemReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "menuItemReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuParameters<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseMenubarParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\" | \"labelParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseMenuSurfaceParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuButtonElement>, \"menuSurfaceParameters\", \"role\" | \"surfaceId\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseMenubarParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\", \"role\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseMenubarParameters",
              "canonicalReference": "preact-aria-widgets!UseMenubarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, M>, \"toolbarParameters\", \"role\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuButtonElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuParameters#dismissParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismissParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuSurfaceParameters",
                  "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuSurfaceElement, MenuButtonElement>[\"dismissParameters\"] & {\n        onClose(reason: \"escape\" | \"backdrop\" | \"lost-focus\" | \"item-clicked\"): void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dismissParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuParameters#escapeDismissParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "escapeDismissParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuSurfaceParameters",
                  "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuSurfaceElement, MenuButtonElement>[\"escapeDismissParameters\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "escapeDismissParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuParameters#menuParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseMenuParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "menuParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 12,
              "endIndex": 16
            },
            {
              "startIndex": 17,
              "endIndex": 21
            },
            {
              "startIndex": 22,
              "endIndex": 26
            },
            {
              "startIndex": 27,
              "endIndex": 31
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "name": "UseMenuParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseMenuParametersSelf#onOpen:member(1)",
              "docComment": "/**\n * This is called whenever the corresponding arrow key is pressed on the triggering button.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onOpen(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "onOpen"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuParametersSelf#openDirection:member",
              "docComment": "/**\n * This is the **physical** direction that is pressed using the **arrow keys** on your keyboard.\n *\n * It has no effect on display, list navigation direction, etc. It solely controls the arrow key that's listened for.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openDirection: "
                },
                {
                  "kind": "Content",
                  "text": "\"down\" | \"up\" | \"left\" | \"right\" | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "openDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuReturnType<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuItemElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuButtonElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenubarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseMenubarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuItemElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseMenuSurfaceReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuParentElement, MenuButtonElement>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseMenubarReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenubarReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuParentElement, MenuItemElement, MenuButtonElement, M>, \"propsMenubar\" | \"propsLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuParentElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuItemElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuButtonElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuContext",
                  "canonicalReference": "preact-aria-widgets!UseMenuContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<MenuParentElement, MenuItemElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 12,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useMenuSurface:function(1)",
          "docComment": "/**\n * A menu surface is what handles user interaction with an interactive but transient surface (like a menu or a popup).\n *\n * @remarks\n *\n * The keyboard (etc.) interactions are shared among a lot of widgets, and the opening button has some ARIA properties that need setting.\n *\n * Related to menus, which are a menu contained within a menu surface. Not related to menubars -- menus contain menubars, but not all menubars are contained within a menu or its surface.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useMenuSurface<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuTargetElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuTriggerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ dismissParameters, escapeDismissParameters, focusTrapParameters, "
            },
            {
              "kind": "Reference",
              "text": "menuSurfaceParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters#menuSurfaceParameters"
            },
            {
              "kind": "Content",
              "text": ": { role, surfaceId, ...void1 }, ...void2 }: "
            },
            {
              "kind": "Reference",
              "text": "UseMenuSurfaceParameters",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuTriggerElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseMenuSurfaceReturnType",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<MenuSurfaceElement, MenuTargetElement, MenuTriggerElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ dismissParameters, escapeDismissParameters, focusTrapParameters, menuSurfaceParameters: { role, surfaceId, ...void1 }, ...void2 }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuTargetElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuTriggerElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useMenuSurface"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuSurfaceParameters<_S extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _B extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"lost-focus\" | \"backdrop\">, \"focusTrapParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseModalParameters",
              "canonicalReference": "preact-prop-helpers!UseModalParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<\"escape\" | \"lost-focus\" | \"backdrop\">, \"focusTrapParameters\", \"trapActive\" | \"focusOpener\" | \"onlyMoveFocus\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "_S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_B",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuSurfaceParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParameters#menuSurfaceParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "menuSurfaceParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseMenuSurfaceParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "menuSurfaceParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuSurfaceParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "releaseTag": "Public",
          "name": "UseMenuSurfaceParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParametersSelf#role:member",
              "docComment": "/**\n * What role the surface fulfills.\n *\n * General menus should use \"menu\". \"dialog\" can be used for generic pop-up things.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Content",
                  "text": "\"dialog\" | \"menu\" | \"tree\" | \"grid\" | \"listbox\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceParametersSelf#surfaceId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "surfaceId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "surfaceId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseMenuSurfaceReturnType<MenuSurfaceElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuTargetElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", MenuTriggerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-menu-surface.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "MenuSurfaceElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuTargetElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "MenuTriggerElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseMenuSurfaceReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#propsSentinel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsSentinel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsSentinel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#propsSurface:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsSurface: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<MenuSurfaceElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsSurface",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#propsTarget:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTarget: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<MenuTargetElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTarget",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#propsTrigger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<MenuTriggerElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTrigger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#refElementPopupReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refElementPopupReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseModalReturnType",
                  "canonicalReference": "preact-prop-helpers!UseModalReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null, MenuTriggerElement, MenuSurfaceElement>[\"refElementPopupReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refElementPopupReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseMenuSurfaceReturnType#refElementSourceReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "refElementSourceReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseModalReturnType",
                  "canonicalReference": "preact-prop-helpers!UseModalReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null, MenuTriggerElement, MenuSurfaceElement>[\"refElementSourceReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "refElementSourceReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useNotificationProvider:function(1)",
          "docComment": "/**\n * Allows children to send notifications to a screen reader or other assistive technology.\n *\n * Please note that because some devices only check for `aria-live` regions *once* on page load, they cannot be created dynamically. You must pass the ID of the **already-existing** elements to use (or the elements themselves).\n *\n * One *must* have `aria-live=polite` and one *must* have `aria-live=assertive`, but there aren't really any other requirements. They shouldn't be visible, I suppose.\n *\n * @hasChild\n *\n * {@link useNotify}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useNotificationProvider({ targetAssertive, targetPolite }: "
            },
            {
              "kind": "Reference",
              "text": "NotificationProviderProps",
              "canonicalReference": "preact-aria-widgets!NotificationProviderProps:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    notify: (mode: \"polite\" | \"assertive\", child: "
            },
            {
              "kind": "Reference",
              "text": "h.JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            },
            {
              "kind": "Content",
              "text": ") => number;\n    context: {\n        notify: (mode: \"polite\" | \"assertive\", child: "
            },
            {
              "kind": "Reference",
              "text": "h.JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            },
            {
              "kind": "Content",
              "text": ") => number;\n    };\n    children: import(\"preact\")."
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "preact!JSXInternal.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ targetAssertive, targetPolite }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useNotificationProvider"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useNotify:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useNotify(): "
            },
            {
              "kind": "Content",
              "text": "(mode: \"assertive\" | \"polite\", content: "
            },
            {
              "kind": "Reference",
              "text": "VNode",
              "canonicalReference": "preact!VNode:interface"
            },
            {
              "kind": "Content",
              "text": "<{}>) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-notify.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useNotify"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useProgress:function(1)",
          "docComment": "/**\n * Provides the attributes and roles for a progress bar.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useProgress<ProgressElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, "
            },
            {
              "kind": "Reference",
              "text": "progressIndicatorParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressParameters#progressIndicatorParameters"
            },
            {
              "kind": "Content",
              "text": ": { max, value, valueText, tagIndicator, ...void1 }, ...void2 }: "
            },
            {
              "kind": "Reference",
              "text": "UseProgressParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ProgressElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseProgressReturnType",
              "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ProgressElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, progressIndicatorParameters: { max, value, valueText, tagIndicator, ...void1 }, ...void2 }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ProgressElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useProgress"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressParameters<IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseProgressParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressParameters#progressIndicatorParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressIndicatorParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressIndicatorParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressParametersSelf<IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseProgressParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf#tagIndicator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagIndicator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "number | \"indeterminate\" | \"disabled\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressParametersSelf#valueText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "valueText: "
                },
                {
                  "kind": "Content",
                  "text": "string | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "valueText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressReturnType<ProgressElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ProgressLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelReturnType",
              "canonicalReference": "preact-aria-widgets!UseLabelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ProgressElement, ProgressLabelElement>, \"propsInput\" | \"propsLabel\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ProgressElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ProgressLabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseProgressReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressReturnType#propsIndicator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ProgressElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsIndicator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ProgressLabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressReturnType#propsRegion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsRegion: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsRegion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useProgressWithHandler:function(1)",
          "docComment": "/**\n * Provides props for a progress bar based on the progress of an async event handler.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useProgressWithHandler<EventType, CaptureType, IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, progressIndicatorParameters, asyncHandlerParameters, "
            },
            {
              "kind": "Reference",
              "text": "progressWithHandlerParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParameters#progressWithHandlerParameters"
            },
            {
              "kind": "Content",
              "text": ": { forciblyPending } }: "
            },
            {
              "kind": "Reference",
              "text": "UseProgressWithHandlerParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<EventType, CaptureType, IndicatorElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseProgressWithHandlerReturnType",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<EventType, CaptureType, IndicatorElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, progressIndicatorParameters, asyncHandlerParameters, progressWithHandlerParameters: { forciblyPending } }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "EventType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CaptureType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useProgressWithHandler"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressWithHandlerParameters<EventType, CaptureType, IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseProgressParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<IndicatorElement, LabelElement>, \"progressIndicatorParameters\", \"tagIndicator\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseProgressParameters",
              "canonicalReference": "preact-aria-widgets!UseProgressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<IndicatorElement, LabelElement>, \"labelParameters\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "EventType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CaptureType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseProgressWithHandlerParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParameters#asyncHandlerParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "asyncHandlerParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAsyncHandlerParameters",
                  "canonicalReference": "preact-prop-helpers!UseAsyncHandlerParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<EventType, CaptureType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "asyncHandlerParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParameters#progressWithHandlerParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "progressWithHandlerParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressWithHandlerParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "progressWithHandlerParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            },
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressWithHandlerParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "name": "UseProgressWithHandlerParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerParametersSelf#forciblyPending:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forciblyPending: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "forciblyPending",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseProgressWithHandlerReturnType<EventType, CaptureType, IndicatorElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-progress.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "EventType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CaptureType",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IndicatorElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseProgressWithHandlerReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType#asyncHandlerReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "asyncHandlerReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseAsyncHandlerReturnType",
                  "canonicalReference": "preact-prop-helpers!UseAsyncHandlerReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<EventType, CaptureType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "asyncHandlerReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType#propsIndicator:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsIndicator: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressReturnType",
                  "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement, LabelElement>[\"propsIndicator\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsIndicator",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressReturnType",
                  "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement, LabelElement>[\"propsLabel\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseProgressWithHandlerReturnType#propsRegion:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsRegion: "
                },
                {
                  "kind": "Reference",
                  "text": "UseProgressReturnType",
                  "canonicalReference": "preact-aria-widgets!UseProgressReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<IndicatorElement, LabelElement>[\"propsRegion\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsRegion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useRadio:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useRadio<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, V>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, V>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "radioParameters",
              "canonicalReference": "preact-aria-widgets!UseRadioParameters#radioParameters"
            },
            {
              "kind": "Content",
              "text": ": { value }, "
            },
            {
              "kind": "Reference",
              "text": "checkboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!~checkboxLikeParameters"
            },
            {
              "kind": "Content",
              "text": ": { disabled }, labelParameters, info, context, textContentParameters, "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { longPressThreshold, ...void3 }, ...void1 }: "
            },
            {
              "kind": "Reference",
              "text": "UseRadioParameters",
              "canonicalReference": "preact-aria-widgets!UseRadioParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, V, InputElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseRadioReturnType",
              "canonicalReference": "preact-aria-widgets!UseRadioReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, V, InputElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "returnTypeTokenRange": {
            "startIndex": 28,
            "endIndex": 30
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ radioParameters: { value }, checkboxLikeParameters: { disabled }, labelParameters, info, context, textContentParameters, pressParameters: { longPressThreshold, ...void3 }, ...void1 }",
              "parameterTypeTokenRange": {
                "startIndex": 25,
                "endIndex": 27
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 18
              }
            }
          ],
          "name": "useRadio"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useRadioGroup:function(1)",
          "docComment": "/**\n * Implements a [Radio Group](https://www.w3.org/WAI/ARIA/apg/patterns/radio/) pattern.\n *\n * @hasChild\n *\n * {@link useRadio}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useRadioGroup<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", G extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GL extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TCE extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, V>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TCE, V>"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, "
            },
            {
              "kind": "Reference",
              "text": "radioGroupParameters",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParameters#radioGroupParameters"
            },
            {
              "kind": "Content",
              "text": ": { name, onSelectedValueChange, selectedValue }, rovingTabIndexParameters, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseRadioGroupParameters",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<V, G, GL, TCE, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseRadioGroupReturnType",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<V, G, GL, TCE, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 22
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, radioGroupParameters: { name, onSelectedValueChange, selectedValue }, rovingTabIndexParameters, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "G",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GL",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TCE",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            }
          ],
          "name": "useRadioGroup"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioGroupParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioGroupParameters<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", _GroupLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement, V>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement, V>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TabbableChildElement, M>, \"rovingTabIndexParameters\" | \"paginatedChildrenParameters\" | \"singleSelectionParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TabbableChildElement, any>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "_GroupLabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            }
          ],
          "name": "UseRadioGroupParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParameters#radioGroupParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radioGroupParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRadioGroupParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseRadioGroupParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radioGroupParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 19
            },
            {
              "startIndex": 20,
              "endIndex": 24
            },
            {
              "startIndex": 25,
              "endIndex": 29
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioGroupParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioGroupParametersSelf<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseRadioGroupParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParametersSelf#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParametersSelf#onSelectedValueChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectedValueChange: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | null | "
                },
                {
                  "kind": "Reference",
                  "text": "RadioChangeEventHandler",
                  "canonicalReference": "preact-aria-widgets!RadioChangeEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelectedValueChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupParametersSelf#selectedValue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedValue: "
                },
                {
                  "kind": "Content",
                  "text": "V | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioGroupReturnType<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", GroupElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", GroupLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabbableChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement, V>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabbableChildElement, V>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<GroupElement, TabbableChildElement, M>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GroupElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "GroupLabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabbableChildElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              }
            }
          ],
          "name": "UseRadioGroupReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "RadioContext",
                  "canonicalReference": "preact-aria-widgets!RadioContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V, GroupElement, TabbableChildElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType#propsRadioGroup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsRadioGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<GroupElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsRadioGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType#propsRadioGroupLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsRadioGroupLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<GroupLabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsRadioGroupLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnType#radioGroupReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radioGroupReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRadioGroupReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radioGroupReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioGroupReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "name": "UseRadioGroupReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioGroupReturnTypeSelf#selectedIndex:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioParameters<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", InputElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, V>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, M>, never>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, \"labelParameters\", never>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, \"pressParameters\", \"excludeSpace\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeParameters",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<LP, InputElement, LabelElement>, \"checkboxLikeParameters\", \"checked\" | \"onInput\" | \"role\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "InputElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseRadioParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "RadioContext",
                  "canonicalReference": "preact-aria-widgets!RadioContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V, any, "
                },
                {
                  "kind": "Reference",
                  "text": "FocusableLabelElement",
                  "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
                },
                {
                  "kind": "Content",
                  "text": "<LP, InputElement, LabelElement>, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioParameters#radioParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radioParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRadioParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseRadioParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radioParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 14,
              "endIndex": 20
            },
            {
              "startIndex": 21,
              "endIndex": 25
            },
            {
              "startIndex": 26,
              "endIndex": 30
            },
            {
              "startIndex": 31,
              "endIndex": 35
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioParametersSelf<V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseRadioParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioParametersSelf#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseRadioReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseRadioReturnType<LP extends "
            },
            {
              "kind": "Reference",
              "text": "LabelPosition",
              "canonicalReference": "preact-aria-widgets!LabelPosition:type"
            },
            {
              "kind": "Content",
              "text": ", V extends "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ", I extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", IL extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "RadioSubInfo",
              "canonicalReference": "preact-aria-widgets!RadioSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, I, IL>, V>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FocusableLabelElement",
              "canonicalReference": "preact-aria-widgets!FocusableLabelElement:type"
            },
            {
              "kind": "Content",
              "text": "<LP, I, IL>, M>, \"propsChild\" | \"propsTabbable\" | \"pressParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseCheckboxLikeReturnType",
              "canonicalReference": "preact-aria-widgets!UseCheckboxLikeReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<I, IL>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-radio-group.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LP",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "I",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "IL",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseRadioReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioReturnType#propsInput:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsInput: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<I>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsInput",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseRadioReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<IL>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 14,
              "endIndex": 20
            },
            {
              "startIndex": 21,
              "endIndex": 23
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useSlider:function(1)",
          "docComment": "/**\n * Implements a [Slider](https://www.w3.org/WAI/ARIA/apg/patterns/slider-multithumb/) pattern.\n *\n * @hasChild\n *\n * {@link useSliderThumb}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSlider<M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "sliderParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderParameters#sliderParameters"
            },
            {
              "kind": "Content",
              "text": ": { max, min }, managedChildrenParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseSliderParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseSliderReturnType",
              "canonicalReference": "preact-aria-widgets!UseSliderReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ sliderParameters: { max, min }, managedChildrenParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useSlider"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderParameters<M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseSliderParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderParameters#sliderParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sliderParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseSliderParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseSliderParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sliderParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "name": "UseSliderParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderParametersSelf#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderParametersSelf#min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderReturnType<M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenReturnType",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseSliderReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "SliderContext",
                  "canonicalReference": "preact-aria-widgets!SliderContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useSliderThumb:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSliderThumb<ThumbElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ info, "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters#context"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "sliderContext",
              "canonicalReference": "preact-aria-widgets!SliderContext#sliderContext"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "max",
              "canonicalReference": "preact-aria-widgets!SliderContextSelf#max"
            },
            {
              "kind": "Content",
              "text": ": maxParent, "
            },
            {
              "kind": "Reference",
              "text": "min",
              "canonicalReference": "preact-aria-widgets!SliderContextSelf#min"
            },
            {
              "kind": "Content",
              "text": ": minParent }, ...context }, sliderThumbParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseSliderThumbParameters",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ThumbElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseSliderThumbReturnType",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ThumbElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "returnTypeTokenRange": {
            "startIndex": 16,
            "endIndex": 18
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ info, context: { sliderContext: { max: maxParent, min: minParent }, ...context }, sliderThumbParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 15
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ThumbElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useSliderThumb"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderThumbParameters<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M, \"index\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseSliderThumbParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "SliderContext",
                  "canonicalReference": "preact-aria-widgets!SliderContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParameters#sliderThumbParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sliderThumbParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseSliderThumbParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sliderThumbParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderThumbParametersSelf<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TagSensitiveProps",
              "canonicalReference": "preact-aria-widgets!TagSensitiveProps:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseSliderThumbParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#label:member",
              "docComment": "/**\n * There's no, like, \"slider container\" for multi-thumb sliders defined, so each individual slider needs its own label. TODO: This is like a tab/tabpanel linking thing where each label is outside of the container. For now, it's easier to just assume a string-based label instead of an element-based one.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "label: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "label",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#onValueChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onValueChange?: "
                },
                {
                  "kind": "Content",
                  "text": "(e: "
                },
                {
                  "kind": "Reference",
                  "text": "RangeChangeEvent",
                  "canonicalReference": "preact-aria-widgets!RangeChangeEvent:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onValueChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#value:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbParametersSelf#valueText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "valueText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "valueText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderThumbReturnType<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "SliderThumbInfo",
              "canonicalReference": "preact-aria-widgets!SliderThumbInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseManagedChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseSliderThumbReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnType#propsSliderThumb:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsSliderThumb: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsSliderThumb",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnType#sliderThumbReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sliderThumbReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseSliderThumbReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sliderThumbReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseSliderThumbReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-slider.tsx",
          "releaseTag": "Public",
          "name": "UseSliderThumbReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnTypeSelf#max:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "max: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "max",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseSliderThumbReturnTypeSelf#min:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "min",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTab:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTab<TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-prop-helpers!info"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "focusSelf",
              "canonicalReference": "!focusSelf"
            },
            {
              "kind": "Content",
              "text": ": focusSelfParent, ...info }, textContentParameters, "
            },
            {
              "kind": "Reference",
              "text": "pressParameters",
              "canonicalReference": "preact-prop-helpers!pressParameters"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "focusSelf",
              "canonicalReference": "preact-prop-helpers!focusSelf"
            },
            {
              "kind": "Content",
              "text": ": focusSelfChild, longPressThreshold, onPressingChange, ...void2 }, context }: "
            },
            {
              "kind": "Reference",
              "text": "UseTabParameters",
              "canonicalReference": "preact-aria-widgets!UseTabParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTabReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "returnTypeTokenRange": {
            "startIndex": 17,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ info: { focusSelf: focusSelfParent, ...info }, textContentParameters, pressParameters: { focusSelf: focusSelfChild, longPressThreshold, onPressingChange, ...void2 }, context }",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 16
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTab"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!UseTab:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UseTab<_TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(args: "
            },
            {
              "kind": "Reference",
              "text": "UseTabParameters",
              "canonicalReference": "preact-aria-widgets!UseTabParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>) => "
            },
            {
              "kind": "Reference",
              "text": "UseTabReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTab",
          "typeParameters": [
            {
              "typeParameterName": "_TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabLabelParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabLabelParameters "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabLabelParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabLabelReturnTypeWithHooks:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabLabelReturnTypeWithHooks<LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseTabListLabelReturnTypeInfo",
              "canonicalReference": "preact-aria-widgets!UseTabListLabelReturnTypeInfo:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabLabelReturnTypeWithHooks",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabLabelReturnTypeWithHooks#useTabListLabelProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useTabListLabelProps: "
                },
                {
                  "kind": "Content",
                  "text": "(props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>) => "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "useTabListLabelProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTable:function(1)",
          "docComment": "/**\n * Creates a sortable data table in a [Grid](https://www.w3.org/WAI/ARIA/apg/patterns/grid/) pattern.\n *\n * @hasChild\n *\n * {@link useTableSection}\n *\n * @hasChild\n *\n * {@link useTableRow}\n *\n * @hasChild\n *\n * {@link useTableCell}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTable<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, "
            },
            {
              "kind": "Reference",
              "text": "tableParameters",
              "canonicalReference": "preact-aria-widgets!UseTableParameters#tableParameters"
            },
            {
              "kind": "Content",
              "text": ": { selectionLimit, tagTable }, }: "
            },
            {
              "kind": "Reference",
              "text": "UseTableParameters",
              "canonicalReference": "preact-aria-widgets!UseTableParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTableReturnType",
              "canonicalReference": "preact-aria-widgets!UseTableReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableElement, LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, tableParameters: { selectionLimit, tagTable }, }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TableElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTable"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTableCell:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTableCell<TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "tableCellParameters",
              "canonicalReference": "preact-aria-widgets!UseTableCellParameters#tableCellParameters"
            },
            {
              "kind": "Content",
              "text": ": { tagTableCell }, info, ...p }: "
            },
            {
              "kind": "Reference",
              "text": "UseTableCellParameters",
              "canonicalReference": "preact-aria-widgets!UseTableCellParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement, CM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTableCellReturnType",
              "canonicalReference": "preact-aria-widgets!UseTableCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ tableCellParameters: { tagTableCell }, info, ...p }",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTableCell"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableCellParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableCellParameters<TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement, CM>, \"info\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableCellParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableRowContext",
                  "canonicalReference": "preact-aria-widgets!UseTableRowContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TableCellElement, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellParameters#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteGridNavigationCellParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableCellElement, CM>[\"info\"], never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellParameters#tableCellParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableCellParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableCellParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableCellParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableCellElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableCellParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableCellParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableCellParametersSelf<TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableCellParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellParametersSelf#tagTableCell:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagTableCell: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableCellElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagTableCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableCellReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableCellReturnType<TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationCellReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationCellReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement, CM>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableCellReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellReturnType#propsCell:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsCell: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableCellElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellReturnType#propsFocus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsFocus: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsFocus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellReturnType#tableCellReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableCellReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableCellReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableCellReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableCellReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableCellReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableCellReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "name": "UseTableCellReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTableCellReturnTypeSelf#sortByThisColumn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortByThisColumn(): "
                },
                {
                  "kind": "Reference",
                  "text": "SortInfo",
                  "canonicalReference": "preact-aria-widgets!~SortInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "sortByThisColumn"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableContext "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "name": "UseTableContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableContext#tableContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableContext: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableContextSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableContextSelf "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "name": "UseTableContextSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTableContextSelf#getCurrentSortColumn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentSortColumn(): "
                },
                {
                  "kind": "Reference",
                  "text": "SortInfo",
                  "canonicalReference": "preact-aria-widgets!~SortInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getCurrentSortColumn"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableContextSelf#setSortBodyFunction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSortBodyFunction: "
                },
                {
                  "kind": "Reference",
                  "text": "PassiveStateUpdater",
                  "canonicalReference": "preact-prop-helpers!PassiveStateUpdater:type"
                },
                {
                  "kind": "Content",
                  "text": "<() => void, never>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setSortBodyFunction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTableContextSelf#sortByColumn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sortByColumn(column: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SortInfo",
                  "canonicalReference": "preact-aria-widgets!~SortInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "column",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "sortByColumn"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableParameters<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableParameters#tableParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableElement, LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableParametersSelf<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseListboxParameters",
              "canonicalReference": "preact-aria-widgets!UseListboxParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableElement, any, LabelElement, any>[\"listboxParameters\"], \"selectionLimit\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableParametersSelf#tagTable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagTable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableReturnType<TableElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableContext",
                  "canonicalReference": "preact-aria-widgets!UseTableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableReturnType#propsTable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTable: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTableRow:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTableRow<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ info, textContentParameters, "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters#context"
            },
            {
              "kind": "Content",
              "text": ": cx1, "
            },
            {
              "kind": "Reference",
              "text": "tableRowParameters",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters#tableRowParameters"
            },
            {
              "kind": "Content",
              "text": ": { selected }, linearNavigationParameters, rovingTabIndexParameters, ...void1 }: "
            },
            {
              "kind": "Reference",
              "text": "UseTableRowParameters",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTableRowReturnType",
              "canonicalReference": "preact-aria-widgets!UseTableRowReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 20
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ info, textContentParameters, context: cx1, tableRowParameters: { selected }, linearNavigationParameters, rovingTabIndexParameters, ...void1 }",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTableRow"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableRowContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableRowContext<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteGridNavigationCellContext",
              "canonicalReference": "preact-prop-helpers!CompleteGridNavigationCellContext:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableRowContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowContext#tableContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableContext: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableContext",
                  "canonicalReference": "preact-aria-widgets!UseTableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "[\"tableContext\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableRowParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableRowParameters<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, RM, CM>, \"rovingTabIndexParameters\" | \"typeaheadNavigationParameters\" | \"context\" | \"info\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseGridNavigationRowParameters",
              "canonicalReference": "preact-prop-helpers!UseGridNavigationRowParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, RM, CM>, \"rovingTabIndexParameters\", never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableRowParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableSectionContext",
                  "canonicalReference": "preact-aria-widgets!UseTableSectionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TableRowElement, TableCellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteGridNavigationRowParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableRowElement, TableCellElement, RM, CM>[\"info\"], \"getSortValue\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowParameters#tableRowParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableRowParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableRowParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableRowParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableRowElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableRowParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            },
            {
              "startIndex": 16,
              "endIndex": 20
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableRowParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableRowParametersSelf<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableRowParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowParametersSelf#selected:member",
              "docComment": "/**\n * When the `selectionLimit` is `\"single\"`, this must be `null`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowParametersSelf#tagTableRow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagTableRow: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableRowElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagTableRow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableRowReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableRowReturnType<TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationRowReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationRowReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement, RM, CM>, \"context\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableRowReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableRowReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableRowContext",
                  "canonicalReference": "preact-aria-widgets!UseTableRowContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TableCellElement, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTableSection:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTableSection<TableSectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ">({ linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, gridNavigationParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, "
            },
            {
              "kind": "Reference",
              "text": "tableSectionParameters",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParameters#tableSectionParameters"
            },
            {
              "kind": "Content",
              "text": ": { tagTableSection, location }, typeaheadNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "context",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParameters#context"
            },
            {
              "kind": "Content",
              "text": ": { tableContext } }: "
            },
            {
              "kind": "Reference",
              "text": "UseTableSectionParameters",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTableSectionReturnType",
              "canonicalReference": "preact-aria-widgets!UseTableSectionReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 22
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, gridNavigationParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, tableSectionParameters: { tagTableSection, location }, typeaheadNavigationParameters, context: { tableContext } }",
              "parameterTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 19
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TableSectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTableSection"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableSectionContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableSectionContext<TableSectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteGridNavigationRowContext",
              "canonicalReference": "preact-prop-helpers!CompleteGridNavigationRowContext:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM, CM>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UseTableContext",
              "canonicalReference": "preact-aria-widgets!UseTableContext:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableSectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableSectionContext",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 13,
              "endIndex": 15
            },
            {
              "startIndex": 16,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableSectionParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableSectionParameters<TableSectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM>, \"rovingTabIndexParameters\" | \"sortableChildrenParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableSectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableSectionParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableContext",
                  "canonicalReference": "preact-aria-widgets!UseTableContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParameters#tableSectionParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tableSectionParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableSectionParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTableSectionParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableSectionElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tableSectionParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableSectionParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableSectionParametersSelf<TableSectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableSectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableSectionParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParametersSelf#location:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location: "
                },
                {
                  "kind": "Content",
                  "text": "\"head\" | \"body\" | \"foot\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionParametersSelf#tagTableSection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tagTableSection: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementToTag",
                  "canonicalReference": "preact-aria-widgets!ElementToTag:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableSectionElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tagTableSection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTableSectionReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTableSectionReturnType<TableSectionElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableRowElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TableCellElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", RM extends "
            },
            {
              "kind": "Reference",
              "text": "TableRowInfo",
              "canonicalReference": "preact-aria-widgets!TableRowInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableRowElement, TableCellElement>"
            },
            {
              "kind": "Content",
              "text": ", CM extends "
            },
            {
              "kind": "Reference",
              "text": "TableCellInfo",
              "canonicalReference": "preact-aria-widgets!TableCellInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TableCellElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteGridNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteGridNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TableSectionElement, TableRowElement, TableCellElement, RM, CM>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-table.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TableSectionElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableRowElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableCellElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "RM",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "CM",
              "constraintTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTableSectionReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTableSectionContext",
                  "canonicalReference": "preact-aria-widgets!UseTableSectionContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TableSectionElement, TableRowElement, TableCellElement, RM, CM>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTableSectionReturnType#propsTableSection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTableSection: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableSectionElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTableSection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 13,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!UseTabList:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UseTabList<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(args: "
            },
            {
              "kind": "Reference",
              "text": "UseTabListParameters",
              "canonicalReference": "preact-aria-widgets!UseTabListParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>) => "
            },
            {
              "kind": "Reference",
              "text": "UseTabListReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabListReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabList",
          "typeParameters": [
            {
              "typeParameterName": "TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 8,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!UseTabListLabel:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UseTabListLabel<LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(args: "
            },
            {
              "kind": "Reference",
              "text": "UseTabLabelParameters",
              "canonicalReference": "preact-aria-widgets!UseTabLabelParameters:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "UseTabLabelReturnTypeWithHooks",
              "canonicalReference": "preact-aria-widgets!UseTabLabelReturnTypeWithHooks:interface"
            },
            {
              "kind": "Content",
              "text": "<LabelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabListLabel",
          "typeParameters": [
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabListLabelReturnTypeInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabListLabelReturnTypeInfo "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabListLabelReturnTypeInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabListParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabListParameters<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>, \"rovingTabIndexParameters\" | \"paginatedChildrenParameters\" | \"linearNavigationParameters\" | \"singleSelectionParameters\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>, \"singleSelectionParameters\", \"ariaPropName\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabListParameters",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 17
            },
            {
              "startIndex": 18,
              "endIndex": 22
            },
            {
              "startIndex": 23,
              "endIndex": 27
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabListReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabListReturnType<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabListReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTabPanel:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTabPanel<PanelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">({ info, context }: "
            },
            {
              "kind": "Reference",
              "text": "UseTabPanelParameters",
              "canonicalReference": "preact-aria-widgets!UseTabPanelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTabPanelReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<PanelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ info, context }",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "PanelElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTabPanel"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "preact-aria-widgets!UseTabPanel:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UseTabPanel<PanelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(args: "
            },
            {
              "kind": "Reference",
              "text": "UseTabPanelParameters",
              "canonicalReference": "preact-aria-widgets!UseTabPanelParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M>) => "
            },
            {
              "kind": "Reference",
              "text": "UseTabPanelReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<PanelElement>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabPanel",
          "typeParameters": [
            {
              "typeParameterName": "PanelElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabPanelParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabPanelParameters<M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M, \"index\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabPanelParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabPanelsContext",
                  "canonicalReference": "preact-aria-widgets!UseTabPanelsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabPanelReturnType<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabPanelReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<E>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnType#tabPanelReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tabPanelReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabPanelReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseTabPanelReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tabPanelReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabPanelReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabPanelReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabPanelReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnTypeSelf#getVisible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVisible: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getVisible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnTypeSelf#visible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visible: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "visible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelReturnTypeSelf#visibleOffset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visibleOffset: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "visibleOffset",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabPanelsContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabPanelsContext<M extends "
            },
            {
              "kind": "Reference",
              "text": "TabPanelInfo",
              "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenContext",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenContext:interface"
            },
            {
              "kind": "Content",
              "text": "<M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabPanelsContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabPanelsContext#tabPanelContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tabPanelContext: "
                },
                {
                  "kind": "Reference",
                  "text": "TC",
                  "canonicalReference": "preact-aria-widgets!~TC:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tabPanelContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabParameters<TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>, never>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UsePressParameters",
              "canonicalReference": "preact-prop-helpers!UsePressParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>, \"pressParameters\", \"excludeEnter\" | \"excludePointer\" | \"excludeSpace\" | \"allowRepeatPresses\" | \"onPressSync\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabsContext",
                  "canonicalReference": "preact-aria-widgets!UseTabsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any, TabElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 15
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabReturnType<TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement, M>, \"pressParameters\" | \"propsChild\" | \"propsTabbable\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "UsePressReturnType",
              "canonicalReference": "preact-prop-helpers!UsePressReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TabElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            },
            {
              "startIndex": 11,
              "endIndex": 13
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTabs:function(1)",
          "docComment": "/**\n * Implements a [Tabs](https://www.w3.org/WAI/ARIA/apg/patterns/tabs/) pattern.\n *\n * @hasChild\n *\n * {@link useTab}\n *\n * @hasChild\n *\n * {@link useTabPanel}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTabs<TabListElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": ">({ labelParameters, linearNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "singleSelectionParameters",
              "canonicalReference": "!singleSelectionParameters"
            },
            {
              "kind": "Content",
              "text": ": { initiallySelectedIndex, "
            },
            {
              "kind": "Reference",
              "text": "onSelectedIndexChange",
              "canonicalReference": "preact-prop-helpers!onSelectedIndexChange"
            },
            {
              "kind": "Content",
              "text": ": ssi, selectionMode, ...singleSelectionParameters }, "
            },
            {
              "kind": "Reference",
              "text": "tabsParameters",
              "canonicalReference": "preact-aria-widgets!UseTabsParameters#tabsParameters"
            },
            {
              "kind": "Content",
              "text": ": { orientation, role, localStorageKey }, rovingTabIndexParameters, ...restParams }: "
            },
            {
              "kind": "Reference",
              "text": "UseTabsParameters",
              "canonicalReference": "preact-aria-widgets!UseTabsParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabListElement, TabElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTabsReturnType",
              "canonicalReference": "preact-aria-widgets!UseTabsReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabListElement, TabElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "returnTypeTokenRange": {
            "startIndex": 19,
            "endIndex": 21
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ labelParameters, linearNavigationParameters, singleSelectionParameters: { initiallySelectedIndex, onSelectedIndexChange: ssi, selectionMode, ...singleSelectionParameters }, tabsParameters: { orientation, role, localStorageKey }, rovingTabIndexParameters, ...restParams }",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TabListElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTabs"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabsContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabsContext<ParentElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteListNavigationContext",
              "canonicalReference": "preact-prop-helpers!CompleteListNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ParentElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ParentElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabsContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsContext#tabsContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tabsContext: "
                },
                {
                  "kind": "Reference",
                  "text": "TC",
                  "canonicalReference": "preact-aria-widgets!~TC:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tabsContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabsParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabsParameters<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabLabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseTabListParameters",
              "canonicalReference": "preact-aria-widgets!UseTabListParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabLabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabsParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsParameters#tabsParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tabsParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabsParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTabsParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tabsParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 12
            },
            {
              "startIndex": 13,
              "endIndex": 17
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabsParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabsParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "name": "UseTabsParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsParametersSelf#localStorageKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "localStorageKey: "
                },
                {
                  "kind": "Content",
                  "text": "keyof "
                },
                {
                  "kind": "Reference",
                  "text": "PersistentStates",
                  "canonicalReference": "preact-prop-helpers!PersistentStates:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "localStorageKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsParametersSelf#orientation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orientation: "
                },
                {
                  "kind": "Content",
                  "text": "\"horizontal\" | \"vertical\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "orientation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsParametersSelf#role:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role?: "
                },
                {
                  "kind": "Content",
                  "text": "\"tablist\" | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTabsReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTabsReturnType<TabContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", TabElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "TabInfo",
              "canonicalReference": "preact-aria-widgets!TabInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<TabElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TabContainerElement, TabElement, M>, \"props\" | \"context\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tabs.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TabContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TabElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTabsReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsReturnType#contextPanels:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextPanels: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabPanelsContext",
                  "canonicalReference": "preact-aria-widgets!UseTabPanelsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TabPanelInfo",
                  "canonicalReference": "preact-aria-widgets!TabPanelInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contextPanels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsReturnType#contextTabs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextTabs: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTabsContext",
                  "canonicalReference": "preact-aria-widgets!UseTabsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TabContainerElement, TabElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contextTabs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsReturnType#propsContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsContainer: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TabContainerElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTabsReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useToast:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToast<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "toastParameters",
              "canonicalReference": "preact-aria-widgets!UseToastParameters#toastParameters"
            },
            {
              "kind": "Content",
              "text": ": { politeness, timeout, children }, "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "preact-aria-widgets!UseToastParameters#info"
            },
            {
              "kind": "Content",
              "text": ": { index, ...info }, context }: "
            },
            {
              "kind": "Reference",
              "text": "UseToastParameters",
              "canonicalReference": "preact-aria-widgets!UseToastParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseToastReturnType",
              "canonicalReference": "preact-aria-widgets!UseToastReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ toastParameters: { politeness, timeout, children }, info: { index, ...info }, context }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useToast"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastParameters<M extends "
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<M, \"index\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToastParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParameters#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastsContext",
                  "canonicalReference": "preact-aria-widgets!ToastsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParameters#info:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "info: "
                },
                {
                  "kind": "Reference",
                  "text": "OmitStrong",
                  "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
                },
                {
                  "kind": "Content",
                  "text": "<M, \"setNumberAheadOfMe\" | \"focus\" | \"show\">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "info",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParameters#toastParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toastParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToastParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseToastParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toastParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "UseToastParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParametersSelf#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentChildren",
                  "canonicalReference": "preact!ComponentChildren:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParametersSelf#politeness:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "politeness?: "
                },
                {
                  "kind": "Content",
                  "text": "\"polite\" | \"assertive\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "politeness",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastParametersSelf#timeout:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeout: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastReturnType<ToastType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ToastType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToastReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ToastType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnType#toastReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toastReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToastReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toastReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "UseToastReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf#dismiss:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismiss: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dismiss",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf#dismissed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dismissed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dismissed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf#numberOfToastsAheadOfUs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "numberOfToastsAheadOfUs: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "numberOfToastsAheadOfUs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf#resetDismissTimer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetDismissTimer: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resetDismissTimer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastReturnTypeSelf#showing:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "showing: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "showing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useToasts:function(1)",
          "docComment": "/**\n * Allows any descendent children to push a visible (and/or audible) message to the user's attention.\n *\n * @hasChild\n *\n * {@link useToast}\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToasts<ContainerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "managedChildrenParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParameters#managedChildrenParameters"
            },
            {
              "kind": "Content",
              "text": ": { "
            },
            {
              "kind": "Reference",
              "text": "onChildrenMountChange",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParametersSelf#onChildrenMountChange"
            },
            {
              "kind": "Content",
              "text": ": ocmu, onAfterChildLayoutEffect }, "
            },
            {
              "kind": "Reference",
              "text": "toastsParameters",
              "canonicalReference": "preact-aria-widgets!UseToastsParameters#toastsParameters"
            },
            {
              "kind": "Content",
              "text": ": { visibleCount } }: "
            },
            {
              "kind": "Reference",
              "text": "UseToastsParameters",
              "canonicalReference": "preact-aria-widgets!UseToastsParameters:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseToastsReturnType",
              "canonicalReference": "preact-aria-widgets!UseToastsReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerType, "
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ managedChildrenParameters: { onChildrenMountChange: ocmu, onAfterChildLayoutEffect }, toastsParameters: { visibleCount } }",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ContainerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useToasts"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastsParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastsParameters extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenParameters",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "UseToastsParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastsParameters#toastsParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toastsParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToastsParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseToastsParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toastsParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastsParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastsParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "name": "UseToastsParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastsParametersSelf#visibleCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visibleCount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "visibleCount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToastsReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToastsReturnType<ContainerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseManagedChildrenReturnType",
              "canonicalReference": "preact-prop-helpers!UseManagedChildrenReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ToastInfo",
              "canonicalReference": "preact-aria-widgets!ToastInfo:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toasts.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToastsReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastsReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "ToastsContext",
                  "canonicalReference": "preact-aria-widgets!ToastsContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToastsReturnType#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useToolbar:function(1)",
          "docComment": "/**\n * Implements a [Toolbar](https://www.w3.org/WAI/ARIA/apg/patterns/toolbar/) pattern.\n *\n * @remarks\n *\n * A toolbar is just a collection of widgets in an expected order with a label (visible or hidden) and with the usual keyboard navigation stuff.\n *\n * The main difference between a toolbar and a menubar is that a menubar contains purely static menuitems, but a toolbar is the more general case, being able to contain anything at all. A menubar is implemented as a special case of a toolbar, and a menu is implemented as a specialized menubar.\n *\n * Either way, be sure to specify the role and orientation this toolbar has (role=toolbar if you're using this as an actual toolbar).\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToolbar<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": ">({ linearNavigationParameters, "
            },
            {
              "kind": "Reference",
              "text": "toolbarParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarParameters#toolbarParameters"
            },
            {
              "kind": "Content",
              "text": ": { orientation, role, selectedIndex, onSelectedIndexChange, disabled }, labelParameters, rovingTabIndexParameters, ...listNavParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarReturnType",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, LabelElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 17
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ linearNavigationParameters, toolbarParameters: { orientation, role, selectedIndex, onSelectedIndexChange, disabled }, labelParameters, rovingTabIndexParameters, ...listNavParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 14
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useToolbar"
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useToolbarChild:function(1)",
          "docComment": "/**\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useToolbarChild<ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": ">({ info, "
            },
            {
              "kind": "Reference",
              "text": "toolbarChildParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildParameters#toolbarChildParameters"
            },
            {
              "kind": "Content",
              "text": ": { disabledProp }, ...args }: "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarChildParameters",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarChildReturnType",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ info, toolbarChildParameters: { disabledProp }, ...args }",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useToolbarChild"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarChildParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarChildParameters<E extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<E>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<E, M>, never>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "E",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarChildParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildParameters#toolbarChildParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toolbarChildParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarChildParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseToolbarChildParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toolbarChildParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarChildParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarChildParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "name": "UseToolbarChildParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarChildParametersSelf#disabledProp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabledProp: "
                },
                {
                  "kind": "Content",
                  "text": "\"disabled\" | \"aria-disabled\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabledProp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarChildReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarChildReturnType<ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarChildReturnType",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarContext<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "CompleteListNavigationContext",
              "canonicalReference": "preact-prop-helpers!CompleteListNavigationContext:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarContext#toolbarContext:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toolbarContext: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarContextSelf",
                  "canonicalReference": "preact-aria-widgets!UseToolbarContextSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toolbarContext",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 10
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarContextSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarContextSelf "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "name": "UseToolbarContextSelf",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarParameters<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MakeSingleSelectionDeclarativeParameters",
              "canonicalReference": "preact-prop-helpers!MakeSingleSelectionDeclarativeParameters:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>>, \"rovingTabIndexParameters\" | \"singleSelectionDeclarativeParameters\" | \"paginatedChildrenParameters\" | \"linearNavigationParameters\" | \"singleSelectionReturn\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>, \"rovingTabIndexParameters\", \"focusSelfParent\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseLabelSyntheticParameters",
              "canonicalReference": "preact-aria-widgets!UseLabelSyntheticParameters:interface"
            },
            {
              "kind": "Content",
              "text": ", \"labelParameters\", \"onLabelClick\">"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TargetedOmit",
              "canonicalReference": "preact-prop-helpers!TargetedOmit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationParameters",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>, \"linearNavigationParameters\", \"arrowKeyDirection\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParameters#toolbarParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toolbarParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement, ChildElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toolbarParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 14
            },
            {
              "startIndex": 15,
              "endIndex": 19
            },
            {
              "startIndex": 20,
              "endIndex": 24
            },
            {
              "startIndex": 25,
              "endIndex": 29
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarParametersSelf<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf#disabled:member",
              "docComment": "/**\n * When true, none of the children will be selectable or focusable.\n *\n * The component itself will be made focusable instead (partially to ensure there's always something focusable in the case of e.g. a menu).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "disabled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disabled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf#onSelectedIndexChange:member",
              "docComment": "/**\n * Optional; Only used if you need single selection logic.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onSelectedIndexChange: "
                },
                {
                  "kind": "Reference",
                  "text": "MakeSingleSelectionDeclarativeParameters",
                  "canonicalReference": "preact-prop-helpers!MakeSingleSelectionDeclarativeParameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteListNavigationParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement, ChildElement, M>>[\"singleSelectionDeclarativeParameters\"][\"onSelectedIndexChange\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onSelectedIndexChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf#orientation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "orientation: "
                },
                {
                  "kind": "Content",
                  "text": "\"horizontal\" | \"vertical\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "orientation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf#role:member",
              "docComment": "/**\n * Should be \"toolbar\" for toolbars, `null` if someone else takes care of the role (TODO: it's still labelled in this case, what does this mean?), and whatever string is applicable otherwise.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "role: "
                },
                {
                  "kind": "Reference",
                  "text": "h.JSX.AriaRole",
                  "canonicalReference": "preact!JSXInternal.AriaRole:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "role",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarParametersSelf#selectedIndex:member",
              "docComment": "/**\n * Optional; Only used if you need single selection logic.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedIndex: "
                },
                {
                  "kind": "Reference",
                  "text": "MakeSingleSelectionDeclarativeParameters",
                  "canonicalReference": "preact-prop-helpers!MakeSingleSelectionDeclarativeParameters:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UseCompleteListNavigationParameters",
                  "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationParameters:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement, ChildElement, M>>[\"singleSelectionDeclarativeParameters\"][\"selectedIndex\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarReturnType<ContainerElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", LabelElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", M extends "
            },
            {
              "kind": "Reference",
              "text": "UseToolbarSubInfo",
              "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "OmitStrong",
              "canonicalReference": "preact-aria-widgets!~OmitStrong:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MakeSingleSelectionDeclarativeReturnType",
              "canonicalReference": "preact-prop-helpers!MakeSingleSelectionDeclarativeReturnType:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationReturnType",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<ContainerElement, ChildElement, M>>, \"props\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ContainerElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "LabelElement",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "M",
              "constraintTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context: "
                },
                {
                  "kind": "Reference",
                  "text": "UseToolbarContext",
                  "canonicalReference": "preact-aria-widgets!UseToolbarContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement, ChildElement, M>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType#propsLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsLabel: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType#propsToolbar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsToolbar: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsToolbar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType#randomIdInputReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdInputReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomIdReturnType",
                  "canonicalReference": "preact-prop-helpers!UseRandomIdReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<ContainerElement, LabelElement>[\"randomIdReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdInputReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseToolbarReturnType#randomIdLabelReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomIdLabelReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseRandomIdReturnType",
                  "canonicalReference": "preact-prop-helpers!UseRandomIdReturnType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<LabelElement, ContainerElement>[\"randomIdReturn\"]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "randomIdLabelReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 10,
              "endIndex": 16
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseToolbarSubInfo:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseToolbarSubInfo<ChildElement extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "UseCompleteListNavigationChildInfo",
              "canonicalReference": "preact-prop-helpers!UseCompleteListNavigationChildInfo:interface"
            },
            {
              "kind": "Content",
              "text": "<ChildElement>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-toolbar.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ChildElement",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseToolbarSubInfo",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "preact-aria-widgets!useTooltip:function(1)",
          "docComment": "/**\n * Implements a [Tooltip](https://www.w3.org/WAI/ARIA/apg/patterns/tooltip/) pattern.\n *\n * @remarks\n *\n * Tooltips are remarkably under-specified, so some of this is speculative.\n *\n * @compositeParams\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTooltip<TriggerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">({ "
            },
            {
              "kind": "Reference",
              "text": "tooltipParameters",
              "canonicalReference": "preact-aria-widgets!UseTooltipParameters#tooltipParameters"
            },
            {
              "kind": "Content",
              "text": ": { onStatus, tooltipSemanticType, hoverDelay }, escapeDismissParameters }: "
            },
            {
              "kind": "Reference",
              "text": "UseTooltipParameters",
              "canonicalReference": "preact-aria-widgets!UseTooltipParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<TriggerType, PopupType>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "UseTooltipReturnType",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnType:interface"
            },
            {
              "kind": "Content",
              "text": "<TriggerType, PopupType>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ tooltipParameters: { onStatus, tooltipSemanticType, hoverDelay }, escapeDismissParameters }",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TriggerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "useTooltip"
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTooltipParameters:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTooltipParameters<TriggerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "TargetedPick",
              "canonicalReference": "preact-prop-helpers!TargetedPick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UseEscapeDismissParameters",
              "canonicalReference": "preact-prop-helpers!UseEscapeDismissParameters:interface"
            },
            {
              "kind": "Content",
              "text": "<PopupType>, \"escapeDismissParameters\", \"getWindow\" | \"parentDepth\">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TriggerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTooltipParameters",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipParameters#tooltipParameters:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tooltipParameters: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTooltipParametersSelf",
                  "canonicalReference": "preact-aria-widgets!UseTooltipParametersSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tooltipParameters",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTooltipParametersSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTooltipParametersSelf "
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "name": "UseTooltipParametersSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipParametersSelf#hoverDelay:member",
              "docComment": "/**\n * How long should the tooltip wait to show itself if it was shown via hover?\n *\n * Default is 0.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hoverDelay: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hoverDelay",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipParametersSelf#onStatus:member(1)",
              "docComment": "/**\n * Called when the tooltip's content should be shown or hidden or when the manner in which it's shown should be changed.\n *\n * This can change from `\"hover\"` to `\"mouse\"`, but never the other way around.\n *\n * `\"null\"` means the tooltip should be hidden\n *\n * @param status - C\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onStatus(status: "
                },
                {
                  "kind": "Reference",
                  "text": "TooltipStatus",
                  "canonicalReference": "preact-aria-widgets!TooltipStatus:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "onStatus"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipParametersSelf#tooltipSemanticType:member",
              "docComment": "/**\n * This is whether `aria-describedby` or `aria-labelledby` is used.\n *\n * Certain situations require one or the other, so you need to specify for each circumstance.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tooltipSemanticType: "
                },
                {
                  "kind": "Content",
                  "text": "\"label\" | \"description\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tooltipSemanticType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTooltipReturnType:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTooltipReturnType<TriggerType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", PopupType extends "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TriggerType",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "PopupType",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "UseTooltipReturnType",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnType#propsPopup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsPopup: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<PopupType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsPopup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnType#propsTrigger:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "propsTrigger: "
                },
                {
                  "kind": "Reference",
                  "text": "ElementProps",
                  "canonicalReference": "preact-prop-helpers!ElementProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<TriggerType>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "propsTrigger",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnType#tooltipReturn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tooltipReturn: "
                },
                {
                  "kind": "Reference",
                  "text": "UseTooltipReturnTypeSelf",
                  "canonicalReference": "preact-aria-widgets!UseTooltipReturnTypeSelf:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tooltipReturn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "preact-aria-widgets!UseTooltipReturnTypeSelf:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UseTooltipReturnTypeSelf "
            }
          ],
          "fileUrlPath": "src/use-tooltip.ts",
          "releaseTag": "Public",
          "name": "UseTooltipReturnTypeSelf",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnTypeSelf#getState:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getState(): "
                },
                {
                  "kind": "Reference",
                  "text": "TooltipState",
                  "canonicalReference": "preact-aria-widgets!TooltipState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getState"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnTypeSelf#stateIsFocus:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stateIsFocus(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "stateIsFocus"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "preact-aria-widgets!UseTooltipReturnTypeSelf#stateIsMouse:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stateIsMouse(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "stateIsMouse"
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
